var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.215,1,1]],["body/components/AppComponent.html",[0,1.706,1,1.525,2,2.235,3,0.706,4,0.859,5,2.054,6,2.054,7,2.054,8,2.054,9,0.706,10,1.585,11,2.054,12,3.645,13,3.645,14,2.897,15,2.897,16,3.357,17,2.897,18,2.897,19,0.574,20,0.995,21,3.357,22,3.357,23,3.357,24,1.706,25,3.357,26,3.357,27,3.357,28,3.357,29,3.357,30,1.438,31,0.078,32,1.751,33,1.438,34,3.989,35,3.989,36,3.989,37,3.989,38,2.127,39,2.054,40,2.054,41,2.054,42,1.044,43,2.897,44,2.054,45,2.812,46,3.645,47,3.645,48,1.438,49,3.645,50,2.054,51,2.897,52,2.054,53,2.054,54,1.585,55,2.235,56,2.054,57,0.859,58,0.706,59,0.859,60,0.265,61,2.965,62,2.054,63,2.897,64,2.897,65,3.645,66,2.897,67,2.897,68,2.897,69,2.054,70,2.054,71,2.897,72,3.076,73,3.076,74,2.054,75,3.357,76,2.054,77,2.054,78,2.054,79,2.054,80,2.054,81,2.054,82,2.965,83,2.054,84,3.645,85,2.054,86,2.054,87,2.054,88,2.054,89,2.054,90,3.645,91,2.897,92,2.054,93,2.054,94,2.897,95,2.054,96,2.054,97,2.054,98,3.357,99,2.054,100,2.054,101,2.054,102,2.054,103,2.897,104,2.897,105,2.054,106,3.645,107,2.054,108,1.472,109,2.054,110,1.044,111,1.275,112,1.585,113,2.054,114,2.054,115,0.047,116,0.047]],["title/modules/AppModule.html",[117,1.844,118,1.215]],["body/modules/AppModule.html",[1,1.957,3,1.052,4,1.281,9,1.052,31,0.078,57,1.834,58,1.052,59,1.281,60,0.394,110,2.268,111,1.9,115,0.061,116,0.061,118,2.34,119,1.9,120,1.917,121,2.361,122,2.361,123,2.361,124,2.91,125,2.361,126,1.9,127,3.062,128,3.773,129,3.773,130,3.773,131,3.773,132,2.361,133,1.9,134,3.062,135,2.361,136,3.062,137,3.773,138,2.361,139,3.062,140,3.062]],["title/classes/Dimensions.html",[60,0.308,141,1]],["body/classes/Dimensions.html",[3,0.378,4,0.46,9,0.378,19,0.307,20,0.617,24,1.898,30,1.218,31,0.079,32,0.46,33,0.904,38,1.802,42,2.397,48,1.218,57,0.46,58,0.378,59,1.213,60,0.339,108,1.474,115,0.029,116,0.029,141,1.374,142,0.558,143,1.526,144,1.723,145,1.562,146,0.46,147,2.127,148,1.932,149,1.633,150,1.386,151,1.796,152,1.796,153,1.386,154,2.477,155,2.201,156,0.848,157,1.115,158,1.796,159,1.8,160,1.474,161,1.099,162,1.115,163,1.099,164,2.029,165,1.8,166,1.115,167,1.633,168,1.099,169,1.101,170,0.848,171,1.099,172,1.099,173,1.099,174,0.848,175,1.099,176,1.099,177,1.099,178,0.682,179,0.913,180,0.913,181,0.913,182,0.783,183,0.558,184,0.913,185,0.913,186,0.913,187,0.46,188,1.115,189,0.682,190,0.682,191,0.682,192,0.682,193,0.682,194,0.913,195,0.682,196,2.127,197,0.682,198,2.817,199,2.127,200,0.682,201,0.682,202,0.682,203,0.682,204,0.682,205,0.682,206,0.682,207,0.682,208,0.682,209,0.682,210,0.682,211,1.633,212,1.633,213,0.682,214,2.127,215,1.115,216,1.115,217,0.682,218,0.682,219,0.682,220,0.682,221,0.682,222,0.682,223,1.8,224,2.127,225,2.039,226,2.127,227,1.115,228,2.407,229,1.115,230,2.444,231,2.222,232,0.682,233,0.682,234,0.682,235,1.115,236,1.115,237,2.201,238,2.264,239,0.682,240,0.913,241,0.682,242,0.682,243,0.682,244,2.407,245,0.682,246,1.414,247,1.115,248,1.633,249,2.407,250,1.115,251,1.414,252,2.366,253,1.414,254,1.158,255,1.414,256,1.414,257,1.414,258,1.414,259,0.682,260,0.682,261,0.682,262,0.682,263,1.115,264,0.682,265,1.8,266,0.682,267,0.682,268,1.414,269,0.682,270,0.682,271,0.682,272,0.682,273,0.682,274,0.682,275,2.127,276,0.682,277,0.682,278,0.682,279,0.682,280,0.682,281,0.682,282,0.682,283,0.682,284,0.682,285,0.682,286,0.682,287,1.633,288,1.633,289,0.682,290,0.682,291,0.682,292,0.682,293,0.682,294,0.682,295,0.682,296,0.682,297,0.682,298,0.682,299,0.682,300,0.558,301,0.682,302,1.633,303,1.633,304,1.8,305,1.115,306,1.932,307,1.115,308,0.682,309,0.682,310,0.682,311,0.558,312,0.682,313,0.682,314,0.682,315,1.115,316,0.682,317,1.115,318,1.414,319,1.115,320,1.115,321,1.414,322,0.682,323,0.682,324,0.682,325,1.414,326,0.558,327,1.115,328,0.682,329,0.682,330,0.682,331,0.682,332,1.414,333,0.682,334,0.682,335,0.682,336,0.682,337,0.682,338,0.558,339,0.682,340,1.115,341,1.414,342,0.682,343,0.682,344,0.682,345,0.682,346,0.682,347,0.682,348,0.682,349,0.682]],["title/classes/Line.html",[60,0.308,182,0.821]],["body/classes/Line.html",[3,0.391,4,0.476,9,0.391,19,0.318,20,0.635,24,2.126,30,1.145,31,0.079,32,0.476,33,0.922,38,1.694,42,2.399,48,1.233,57,0.476,58,0.391,59,1.235,60,0.346,108,0.578,115,0.03,116,0.03,141,1.235,142,0.578,143,1.453,144,1.661,145,1.502,146,0.476,147,1.667,148,1.667,149,1.147,153,1.425,154,2.343,155,2.069,156,0.877,157,0.706,159,0.706,160,0.578,162,0.706,165,1.147,166,0.706,167,1.147,169,0.976,170,0.877,174,0.877,178,0.706,179,0.939,180,0.939,181,0.939,182,0.922,183,0.578,184,0.939,185,0.939,186,0.939,187,0.476,188,1.147,189,0.706,190,0.706,191,0.706,192,0.706,193,0.706,194,0.939,195,0.706,196,2.155,197,0.706,198,2.826,199,2.155,200,0.706,201,0.706,202,0.706,203,0.706,204,0.706,205,0.706,206,0.706,207,0.706,208,0.706,209,0.706,210,0.706,211,1.667,212,1.667,213,0.706,214,2.155,215,1.147,216,1.147,217,0.706,218,0.706,219,0.706,220,0.706,221,0.706,222,0.706,223,2.155,224,2.389,225,2.343,226,2.389,227,1.147,228,2.429,229,1.147,230,2.465,231,2.232,232,0.706,233,0.706,234,1.147,235,1.147,236,1.147,237,2.228,238,2.29,239,0.706,240,0.939,241,0.706,242,0.706,243,0.706,244,2.429,245,0.706,246,1.448,247,1.147,248,1.667,249,2.429,250,1.147,251,1.448,252,2.389,253,1.448,254,1.185,255,1.448,256,1.448,257,1.448,258,1.448,259,0.706,260,0.706,261,0.706,262,0.706,263,1.147,264,0.706,265,1.833,266,0.706,267,0.706,268,1.448,269,0.706,270,0.706,271,0.706,272,0.706,273,0.706,274,0.706,275,2.155,276,0.706,277,0.706,278,0.706,279,0.706,280,0.706,281,0.706,282,0.706,283,0.706,284,0.706,285,0.706,286,0.706,287,1.667,288,1.667,289,0.706,290,0.706,291,0.706,292,0.706,293,0.706,294,0.706,295,0.706,296,0.706,297,0.706,298,0.706,299,0.706,300,0.578,301,0.706,302,1.667,303,1.667,304,1.833,305,1.147,306,1.963,307,1.147,308,0.706,309,0.706,310,0.706,311,0.578,312,0.706,313,0.706,314,0.706,315,1.147,316,0.706,317,1.147,318,1.448,319,1.147,320,1.147,321,1.448,322,0.706,323,0.706,324,0.706,325,1.448,326,0.578,327,1.147,328,0.706,329,0.706,330,0.706,331,0.706,332,1.448,333,0.706,334,0.706,335,0.706,336,0.706,337,0.706,338,0.578,339,0.706,340,1.147,341,1.448,342,0.706,343,0.706,344,0.706,345,0.706,346,0.706,347,0.706,348,0.706,349,0.706,350,1.137,351,2.685,352,1.137,353,1.137]],["title/classes/SVGFactory.html",[60,0.308,187,1]],["body/classes/SVGFactory.html",[3,0.405,4,0.494,9,0.405,19,0.33,20,0.654,24,1.939,30,1.034,31,0.079,32,0.796,33,1.034,38,0.967,42,2.388,48,1.249,54,0.91,57,0.494,58,0.405,59,1.259,60,0.353,108,0.6,115,0.031,116,0.031,141,1.259,142,0.6,143,1.001,144,1.521,145,1.148,146,0.494,147,1.997,148,1.703,149,1.181,150,1.468,154,2.257,155,1.868,157,0.733,159,0.733,160,0.6,162,0.733,164,0.91,165,1.181,166,0.733,167,1.181,169,1.001,178,0.733,179,1.394,180,0.967,181,0.967,182,0.822,183,0.6,184,0.967,185,0.967,186,0.967,187,0.796,188,1.997,189,1.485,190,1.181,191,1.181,192,1.485,193,1.181,194,1.216,195,0.733,196,2.186,197,0.733,198,2.836,199,2.186,200,0.733,201,0.733,202,0.733,203,0.733,204,0.733,205,0.733,206,0.733,207,0.733,208,0.733,209,0.733,210,0.733,211,1.703,212,1.703,213,0.733,214,2.186,215,1.181,216,1.181,217,0.733,218,0.733,219,0.733,220,0.733,221,0.733,222,0.733,223,1.868,224,2.186,225,2.101,226,2.186,227,1.181,228,2.453,229,1.181,230,2.488,231,2.244,232,0.733,233,0.733,234,0.733,235,1.181,236,1.181,237,2.257,238,2.317,239,0.733,240,0.967,241,0.733,242,0.733,243,0.733,244,2.453,245,0.733,246,1.485,247,1.181,248,1.703,249,2.453,250,1.181,251,1.485,252,2.414,253,1.485,254,1.216,255,1.485,256,1.485,257,1.485,258,1.485,259,0.733,260,0.733,261,0.733,262,0.733,263,1.181,264,0.733,265,1.868,266,0.733,267,0.733,268,1.485,269,0.733,270,0.733,271,0.733,272,0.733,273,0.733,274,0.733,275,2.186,276,0.733,277,0.733,278,0.733,279,0.733,280,0.733,281,0.733,282,0.733,283,0.733,284,0.733,285,0.733,286,0.733,287,1.703,288,1.703,289,0.733,290,0.733,291,0.733,292,0.733,293,0.733,294,0.733,295,0.733,296,0.733,297,0.733,298,0.733,299,0.733,300,0.6,301,0.733,302,1.703,303,1.703,304,1.868,305,1.181,306,1.997,307,1.181,308,0.733,309,0.733,310,0.733,311,0.6,312,0.733,313,0.733,314,0.733,315,1.181,316,0.733,317,1.181,318,1.485,319,1.181,320,1.181,321,1.485,322,0.733,323,0.733,324,0.733,325,1.485,326,0.6,327,1.181,328,0.733,329,0.733,330,0.733,331,0.733,332,1.485,333,0.733,334,0.733,335,0.733,336,0.733,337,0.733,338,0.6,339,0.733,340,1.181,341,1.485,342,0.733,343,0.733,344,0.733,345,0.733,346,0.733,347,0.733,348,0.733,349,0.733,354,1.904,355,1.18,356,1.18]],["title/coverage.html",[357,2.481]],["body/coverage.html",[0,1.927,1,1.291,9,1.06,10,2.381,30,1.06,31,0.076,48,1.572,60,0.551,110,1.569,115,0.062,116,0.062,135,2.381,141,1.291,143,1.791,144,1.791,145,1.791,146,1.791,182,1.06,187,1.291,231,1.569,240,1.569,357,2.381,358,2.381,359,3.087,360,3.087,361,3.087,362,3.792,363,3.087,364,3.087,365,3.087,366,3.087,367,3.087,368,3.087,369,3.087,370,2.381,371,4.281,372,2.925,373,4.281,374,2.381,375,2.925,376,2.381,377,2.381,378,3.087,379,3.087]],["title/dependencies.html",[120,1.455,380,1.558]],["body/dependencies.html",[31,0.078,58,1.163,115,0.065,116,0.065,120,1.721,132,3.093,133,2.489,138,2.612,381,3.387,382,4.652,383,3.387,384,3.387,385,3.387,386,3.387,387,3.387,388,3.387,389,3.387,390,3.387,391,3.387,392,3.387,393,3.387,394,3.387]],["title/miscellaneous/enumerations.html",[395,1.027,396,2.209]],["body/miscellaneous/enumerations.html",[19,0.989,31,0.067,115,0.067,116,0.067,143,1.48,144,1.721,145,1.721,146,1.721,169,1.48,179,2.091,180,1.798,181,1.798,182,1.216,183,1.798,184,1.798,185,1.798,186,1.798,395,1.798,396,2.73,397,3.539]],["title/index.html",[19,0.565,398,2.02,399,2.02]],["body/index.html",[0,1.531,3,1.035,31,0.061,33,1.458,45,2.324,48,1.035,55,2.324,60,0.388,61,2.324,72,2.324,73,2.324,82,2.324,111,2.318,112,2.881,115,0.061,116,0.061,126,2.318,160,2.157,194,1.531,254,1.898,300,2.063,311,1.531,326,1.531,338,1.531,358,2.881,400,3.012,401,3.012,402,4.363,403,3.012,404,3.012,405,3.012,406,3.735,407,3.012,408,3.735,409,4.363,410,3.012,411,3.735,412,3.012,413,3.735,414,3.012,415,3.012,416,3.012,417,3.012,418,3.012,419,3.012,420,3.012,421,3.012,422,3.012,423,3.012,424,3.012,425,3.012,426,3.012,427,3.012,428,3.012,429,3.012,430,3.012,431,3.012,432,3.012,433,3.012,434,3.012,435,3.012,436,3.012,437,3.012,438,3.012,439,3.735,440,3.012,441,3.735,442,3.012,443,3.012,444,2.324,445,3.012]],["title/modules.html",[119,1.997]],["body/modules.html",[31,0.068,115,0.068,116,0.068,118,1.864,119,2.277,133,2.277,169,1.535,446,3.669,447,3.669]],["title/overview.html",[448,2.481]],["body/overview.html",[1,1.935,2,2.636,31,0.074,110,2.179,115,0.066,116,0.066,117,2.636,118,2.35,120,2.049,121,2.636,122,2.636,123,2.636,124,3.11,125,2.636,126,2.121,142,1.737,448,2.636,449,3.418,450,3.418,451,3.418]],["title/properties.html",[20,0.984,380,1.558]],["body/properties.html",[20,1.266,31,0.072,115,0.069,116,0.069,444,2.844,452,3.687]],["title/miscellaneous/variables.html",[395,1.027,453,2.209]],["body/miscellaneous/variables.html",[19,0.93,30,1.508,31,0.077,32,1.773,33,1.456,115,0.065,116,0.065,370,2.566,372,3.386,374,2.566,375,2.566,376,3.06,377,3.06,395,1.69,453,2.566,454,3.968,455,3.327,456,3.327,457,3.327,458,3.968,459,3.327,460,3.327,461,3.968,462,3.968,463,3.327]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"index.html":{}}}],["0,10,20,30,40",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["0.0.0",{"_index":452,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":361,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":449,"title":{},"body":{"overview.html":{}}}],["1.1.19",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["100",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["12.2.17",{"_index":445,"title":{},"body":{"index.html":{}}}],["13.3.0",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["1px",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":450,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["22",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["23",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["2px",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["33/66",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":451,"title":{},"body":{"overview.html":{}}}],["4px",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["50",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["7",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["7.5.0",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["7/31",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["absolute",{"_index":433,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":153,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{}}}],["actual_component",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["adjusted",{"_index":326,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["against",{"_index":435,"title":{},"body":{"index.html":{}}}],["amount",{"_index":315,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["angular",{"_index":441,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["animation",{"_index":423,"title":{},"body":{"index.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":118,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arc",{"_index":411,"title":{},"body":{"index.html":{}}}],["args",{"_index":192,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["article.gauge.martin",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["between",{"_index":431,"title":{},"body":{"index.html":{}}}],["black",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["bold",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["bootstrap",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["box",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":210,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["browse",{"_index":447,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["builds",{"_index":401,"title":{},"body":{"index.html":{}}}],["call",{"_index":329,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["caption",{"_index":416,"title":{},"body":{"index.html":{}}}],["case",{"_index":196,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["center",{"_index":338,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["certain",{"_index":263,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["changed",{"_index":424,"title":{},"body":{"index.html":{}}}],["circle",{"_index":181,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["circle.gauge.needle.martin",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["class",{"_index":60,"title":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":142,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"overview.html":{}}}],["cli",{"_index":443,"title":{},"body":{"index.html":{}}}],["clone",{"_index":289,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["cluster_appmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["colors",{"_index":415,"title":{},"body":{"index.html":{}}}],["colors1",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["colors2",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["colors3",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["compodoc",{"_index":440,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["console.error('#error",{"_index":207,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["const",{"_index":217,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["constructor",{"_index":156,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{}}}],["constructor(public",{"_index":222,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["constructor(w",{"_index":157,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["constructor(x1",{"_index":234,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["context",{"_index":376,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["convenience",{"_index":296,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["coordinate",{"_index":325,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["coordinates",{"_index":314,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["coverage",{"_index":357,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createelement",{"_index":354,"title":{},"body":{"classes/SVGFactory.html":{}}}],["createelement(type",{"_index":191,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["current",{"_index":406,"title":{},"body":{"index.html":{}}}],["customisable",{"_index":408,"title":{},"body":{"index.html":{}}}],["darkgray",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["darkred",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["declarations",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["deep",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["default",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["delay",{"_index":427,"title":{},"body":{"index.html":{}}}],["delta",{"_index":275,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["dependencies",{"_index":120,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["different",{"_index":414,"title":{},"body":{"index.html":{}}}],["dimensions",{"_index":141,"title":{"classes/Dimensions.html":{}},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{}}}],["dimensions(0",{"_index":241,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["direct",{"_index":421,"title":{},"body":{"index.html":{}}}],["direction",{"_index":251,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["directive",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["directives",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["division",{"_index":258,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["document.createelementns(this.svgns",{"_index":199,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["documentation",{"_index":358,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{}}}],["down",{"_index":324,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["drop",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["dynamic",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["ease",{"_index":425,"title":{},"body":{"index.html":{}}}],["element",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["elementref",{"_index":167,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["enum",{"_index":178,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["enumerations",{"_index":396,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":372,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["extra",{"_index":420,"title":{},"body":{"index.html":{}}}],["factor",{"_index":249,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["factory",{"_index":209,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["factory.ts",{"_index":146,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["factory.ts:16",{"_index":355,"title":{},"body":{"classes/SVGFactory.html":{}}}],["factory.ts:18",{"_index":356,"title":{},"body":{"classes/SVGFactory.html":{}}}],["factory.ts:47",{"_index":161,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:48",{"_index":158,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:56",{"_index":171,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:57",{"_index":173,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:58",{"_index":175,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:59",{"_index":177,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:61",{"_index":163,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:66",{"_index":168,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:73",{"_index":350,"title":{},"body":{"classes/Line.html":{}}}],["factory.ts:74",{"_index":351,"title":{},"body":{"classes/Line.html":{}}}],["factory.ts:77",{"_index":352,"title":{},"body":{"classes/Line.html":{}}}],["factory.ts:81",{"_index":353,"title":{},"body":{"classes/Line.html":{}}}],["false",{"_index":463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["family",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["features",{"_index":410,"title":{},"body":{"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{}}}],["fill",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["filter",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["first",{"_index":245,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["font",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["footer",{"_index":417,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["four",{"_index":336,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["g",{"_index":145,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["gauge",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["gauge.needle.pointer.martin",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["gaugev13",{"_index":400,"title":{},"body":{"index.html":{}}}],["generated",{"_index":439,"title":{},"body":{"index.html":{}}}],["geth",{"_index":170,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{}}}],["getting",{"_index":398,"title":{"index.html":{}},"body":{}}],["getw",{"_index":174,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{}}}],["given",{"_index":248,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["graphics",{"_index":405,"title":{},"body":{"index.html":{}}}],["gray",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["green",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["group",{"_index":183,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["grow",{"_index":320,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["growfromtopleft",{"_index":298,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["growfromtopleft(growwidthby",{"_index":322,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["growheightby",{"_index":321,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["growwidthby",{"_index":319,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["guards",{"_index":434,"title":{},"body":{"index.html":{}}}],["h",{"_index":154,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["h(v",{"_index":215,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["height",{"_index":148,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["horizontal",{"_index":250,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["horizontally",{"_index":305,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["host",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["html",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["http://www.w3.org/2000/svg",{"_index":190,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["identifier",{"_index":359,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["imports",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["impossible",{"_index":436,"title":{},"body":{"index.html":{}}}],["increase",{"_index":310,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":407,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["instead",{"_index":432,"title":{},"body":{"index.html":{}}}],["internalupdate",{"_index":286,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["labels",{"_index":418,"title":{},"body":{"index.html":{}}}],["legend",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["lightgray",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["line",{"_index":182,"title":{"classes/Line.html":{}},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["literal",{"_index":460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location",{"_index":333,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["margins",{"_index":428,"title":{},"body":{"index.html":{}}}],["matching",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.abs(this.x2",{"_index":227,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["math.abs(this.y2",{"_index":229,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["meter",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["meter.component",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["meter.component.ts",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["meter/vu",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["method",{"_index":297,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["methods",{"_index":150,"title":{},"body":{"classes/Dimensions.html":{},"classes/SVGFactory.html":{}}}],["minimal/maximal",{"_index":419,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":395,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":117,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":119,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["move",{"_index":332,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moveabsolutehorizontal(newx1",{"_index":272,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moveabsolutevertical(newy1",{"_index":276,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moveandscalehorizontal(factor",{"_index":259,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moveandscalevertical(factor",{"_index":261,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movebyfactorhorizontal(factor",{"_index":269,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movebyfactorvertical(factor",{"_index":270,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movedeltahorizontal(delta",{"_index":274,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movedeltavertical(delta",{"_index":278,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moves",{"_index":247,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movex1",{"_index":340,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movey1",{"_index":341,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moving",{"_index":312,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["multiple",{"_index":412,"title":{},"body":{"index.html":{}}}],["multiplication",{"_index":253,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["name",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["needle",{"_index":409,"title":{},"body":{"index.html":{}}}],["needlevalue",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["negative",{"_index":299,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["new",{"_index":240,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{}}}],["newx1",{"_index":273,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["newy1",{"_index":277,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["ng",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["node",{"_index":193,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["null",{"_index":437,"title":{},"body":{"index.html":{}}}],["number",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["numbers",{"_index":255,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["object",{"_index":461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":160,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["orange",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":448,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":380,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":252,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["parameters",{"_index":159,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["parts",{"_index":413,"title":{},"body":{"index.html":{}}}],["path.gauge.arcs.background",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["path.gauge.arcs.background.martin",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["percentage",{"_index":430,"title":{},"body":{"index.html":{}}}],["pixels",{"_index":303,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["polygon",{"_index":186,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["polyline",{"_index":185,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["private",{"_index":147,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["production",{"_index":462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":442,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"properties.html":{}}}],["providers",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["radius",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["range",{"_index":438,"title":{},"body":{"index.html":{}}}],["ranges1",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["ranges2",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["ranges3",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["ratiohw",{"_index":233,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["ratiowh",{"_index":232,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["rect",{"_index":180,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["rect.x2",{"_index":294,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["rect.y1",{"_index":293,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["rect.y2",{"_index":295,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["rectangle",{"_index":231,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{}}}],["rectangle(this.x1",{"_index":290,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["red",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["remain",{"_index":317,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["remaining",{"_index":328,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["remains",{"_index":339,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["request",{"_index":208,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["require",{"_index":377,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resizes",{"_index":246,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["results",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":198,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["returns",{"_index":164,"title":{},"body":{"classes/Dimensions.html":{},"classes/SVGFactory.html":{}}}],["rgba(0",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":318,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["sans",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["scalable",{"_index":403,"title":{},"body":{"index.html":{}}}],["scaleheight(factor",{"_index":267,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["scalewidth(factor",{"_index":264,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["schema",{"_index":426,"title":{},"body":{"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["self",{"_index":330,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["serif",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["set",{"_index":214,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["setdimensions(dim",{"_index":280,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["seth(v",{"_index":172,"title":{},"body":{"classes/Dimensions.html":{}}}],["setheight(h",{"_index":279,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["setw(v",{"_index":176,"title":{},"body":{"classes/Dimensions.html":{}}}],["setwidth(w",{"_index":271,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["setwidthheight(w",{"_index":283,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shadow",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["shrink",{"_index":304,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinkandmove(movex1",{"_index":342,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinkfromtopleft(shrinkwidthby",{"_index":308,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinkheightby",{"_index":306,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinktoheight",{"_index":327,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinktoheightfrombottom(shrinktoheight",{"_index":331,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinkwidthby",{"_index":302,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrunk",{"_index":335,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["sides",{"_index":337,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["similar",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":311,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["size:10pt",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["smaller",{"_index":256,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["solid",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["spec\\.ts",{"_index":459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../s",{"_index":397,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:9",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/s",{"_index":143,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/vu",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":370,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":374,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":375,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":399,"title":{"index.html":{}},"body":{}}],["statements",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":188,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["string",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"classes/SVGFactory.html":{}}}],["stroke",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["stroke:white",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["styling",{"_index":422,"title":{},"body":{"index.html":{}}}],["supplied",{"_index":301,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["support",{"_index":446,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":169,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["svg.nativeelement.getboundingclientrect",{"_index":219,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgbbox",{"_index":218,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgbbox.height",{"_index":221,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype",{"_index":179,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["svgelementtype.circle",{"_index":200,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.group",{"_index":204,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.line",{"_index":201,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.polygon",{"_index":206,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.polyline",{"_index":205,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.rect",{"_index":202,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.svg",{"_index":197,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.text",{"_index":203,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgfactory",{"_index":187,"title":{"classes/SVGFactory.html":{}},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{}}}],["svgns",{"_index":189,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["switch",{"_index":195,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["syntax",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["table",{"_index":379,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["text",{"_index":184,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["text.gauge.label",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dimensions",{"_index":239,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.dimensions.h",{"_index":288,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.dimensions.w",{"_index":287,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.growfromtopleft",{"_index":309,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.h",{"_index":268,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.height",{"_index":212,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.internalupdate",{"_index":244,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.ratiohw",{"_index":235,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.ratiowh",{"_index":236,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.scaleheight(factor).movebyfactorvertical(factor",{"_index":262,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.scalewidth(factor).movebyfactorhorizontal(factor",{"_index":260,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setheight(dim.h",{"_index":281,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setheight(h",{"_index":285,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setheight(v",{"_index":349,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setwidth(dim.w",{"_index":282,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setwidth(v",{"_index":348,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setwidth(w",{"_index":284,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.shrinkfromtopleft(shrinkwidthby",{"_index":343,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.update(rect.x1",{"_index":292,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.update(svgbbox.width",{"_index":220,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.update(w",{"_index":213,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.update(x1",{"_index":242,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.w",{"_index":265,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.width",{"_index":211,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.x1",{"_index":228,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.x2",{"_index":237,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.y1",{"_index":230,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.y2",{"_index":238,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["title",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":323,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["top/bottom/sides",{"_index":429,"title":{},"body":{"index.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{}}}],["true",{"_index":458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":194,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["update",{"_index":151,"title":{},"body":{"classes/Dimensions.html":{}}}],["update(w",{"_index":162,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["update(x1",{"_index":243,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["updatefromrect(rect",{"_index":291,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["updatefromsvgelement",{"_index":152,"title":{},"body":{"classes/Dimensions.html":{}}}],["updatefromsvgelement(svg",{"_index":166,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["use",{"_index":254,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["using",{"_index":402,"title":{},"body":{"index.html":{}}}],["v",{"_index":144,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["value",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":300,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["var",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["variable",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":453,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vector",{"_index":404,"title":{},"body":{"index.html":{}}}],["version",{"_index":444,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":266,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["vertically",{"_index":307,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["void",{"_index":165,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["vu",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{}}}],["vumetercomponent",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["w",{"_index":155,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["w(v",{"_index":216,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["way",{"_index":334,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["webkit",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["weight",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["white",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":149,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x1",{"_index":223,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x1(v",{"_index":344,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x1,y1",{"_index":316,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x2",{"_index":225,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x2(v",{"_index":345,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x2,y2",{"_index":313,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["y1",{"_index":224,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["y1(v",{"_index":346,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["y2",{"_index":226,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["y2(v",{"_index":347,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["zero",{"_index":257,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["zone.js",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colors1\n                            \n                            \n                                colors2\n                            \n                            \n                                colors3\n                            \n                            \n                                    Public\n                                needleValue\n                            \n                            \n                                ranges1\n                            \n                            \n                                ranges2\n                            \n                            \n                                ranges3\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colors1\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['green', 'orange', 'red', 'darkred']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colors2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['green', 'orange', 'red', 'darkred']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colors3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['green', 'orange', 'red', 'darkred']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        needleValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 23\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranges1\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [-100, -80, -20, 0, 10]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranges2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [0,10,20,30,40]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranges3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [-100, -80, -20, 0, 10]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'gauge'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'gauge';\n  ranges1 = [-100, -80, -20, 0, 10];\n  colors1 = ['green', 'orange', 'red', 'darkred'];\n\n  ranges2 = [0,10,20,30,40];\n  colors2 = ['green', 'orange', 'red', 'darkred'];\n\n  ranges3 = [-100, -80, -20, 0, 10];\n  colors3 = ['green', 'orange', 'red', 'darkred'];\n  public needleValue = 23;\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .shadow {\n  -webkit-filter: drop-shadow( 3px 3px 2px rgba(0, 0, 0, .7));\n  filter: drop-shadow( 3px 3px 2px rgba(0, 0, 0, .7));\n  /* Similar syntax to box-shadow */\n}\n\n::ng-deep text.gauge.label {\n  font-family: sans-serif;\n  font-size:10pt;\n  font-weight: bold;\n}\n:host ::ng-deep path.gauge.arcs.background.martin {\n  fill: white;\n}\n:host ::ng-deep path.gauge.arcs.background {\n  fill: lightgray;\n  stroke:white;\n}\n\n:host ::ng-deep .gauge.needle.pointer.martin {\n  fill: black;\n  stroke: black;\n}\n\n:host ::ng-deep .circle.gauge.needle.martin  {\n  fill: black;\n  stroke: black;\n}\n\n\n\n:host ::ng-deep article.gauge.martin {\n  border: 1px solid darkgray;\n  box-shadow: 4px 4px 4px gray;\n  border-radius: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'VuMeterComponent', 'selector': 'app-vu-meter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nVuMeterComponent\n\nVuMeterComponent\n\nAppModule -->\n\nVuMeterComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            VuMeterComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { VuMeterComponent } from './vu-meter/vu-meter.component';\nimport {FormsModule} from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    VuMeterComponent\n  ],\n    imports: [\n        BrowserModule,\n        FormsModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Dimensions.html":{"url":"classes/Dimensions.html","title":"class - Dimensions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Dimensions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/s-v-g-factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                Height\n                            \n                            \n                                    Private\n                                Width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                            \n                                updateFromSVGElement\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    h\n                                \n                                \n                                    w\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(w: number, h: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/s-v-g-factory.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        w\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        h\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        Height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        Width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:47\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(w: number, h: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/s-v-g-factory.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    w\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    h\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFromSVGElement\n                        \n                    \n                \n            \n            \n                \nupdateFromSVGElement(svg: ElementRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/s-v-g-factory.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    svg\n                                    \n                                                ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Dimensions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        h\n                    \n                \n\n                \n                    \n                        geth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:56\n                                \n                            \n\n                \n                    \n                        seth(v: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:57\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        w\n                    \n                \n\n                \n                    \n                        getw()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:58\n                                \n                            \n\n                \n                    \n                        setw(v: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:59\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {ElementRef} from '@angular/core';\n\nexport enum SVGElementType {\n  SVG,\n  Rect,\n  Circle,\n  Line,\n  Group,\n  Text,\n  Polyline,\n  Polygon\n}\n\n\nexport class SVGFactory {\n  private static svgNS = 'http://www.w3.org/2000/svg';\n\n  public static createElement(type: SVGElementType, ...args: any[]): Node | undefined {\n    switch (type) {\n      case SVGElementType.SVG:\n        return document.createElementNS(this.svgNS, 'svg');\n      case SVGElementType.Circle:\n        return document.createElementNS(this.svgNS, 'circle');\n      case SVGElementType.Line:\n        return document.createElementNS(this.svgNS, 'line');\n      case SVGElementType.Rect:\n        return document.createElementNS(this.svgNS, 'rect');\n      case SVGElementType.Text:\n        return document.createElementNS(this.svgNS, 'text');\n      case SVGElementType.Group:\n        return document.createElementNS(this.svgNS, 'g');\n      case SVGElementType.Polyline:\n        return document.createElementNS(this.svgNS, 'polyline');\n      case SVGElementType.Polygon:\n        return document.createElementNS(this.svgNS, 'polygon');\n      default:\n        console.error('#Error request SVG Factory type');\n        break;\n    }\n    return undefined;\n  }\n\n}\n\n\nexport class Dimensions {\n  private Width: number;\n  private Height: number;\n\n  constructor(w: number, h: number) {\n    this.Width = 0;\n    this.Height = 0;\n    this.update(w, h);\n  }\n\n  get h(): number  { return this.Height; }\n  set h(v: number) { this.Height = v; }\n  get w(): number  { return this.Width; }\n  set w(v: number) { this.Width = v; }\n\n  update(w: number, h: number): void {\n    this.Width  = w;\n    this.Height = h;\n  }\n\n  updateFromSVGElement(svg: ElementRef): Dimensions {\n    const svgBBox = svg.nativeElement.getBoundingClientRect();\n    this.update(svgBBox.width, svgBBox.height);\n    return this;\n  }\n}\n\nexport class Line {\n  constructor(public x1: number, public y1: number, public x2: number, public y2: number) {\n  }\n\n  get w(): number {\n    return Math.abs(this.x2 - this.x1);\n  }\n\n  get h(): number {\n    return Math.abs(this.y2 - this.y1);\n  }\n}\n\nexport class Rectangle {\n  public dimensions: Dimensions;\n  public ratioWH: number;\n  public ratioHW: number;\n  public X1: number;\n  public X2: number;\n  public Y1: number;\n  public Y2: number;\n\n  constructor(x1: number, y1: number, x2: number, y2: number) {\n    this.ratioHW = 0;\n    this.ratioWH = 0;\n    this.X1 = 0;\n    this.X2 = 0;\n    this.Y1 = 0;\n    this.Y2 = 0;\n    this.dimensions = new Dimensions(0, 0);\n    this.update(x1, y1, x2, y2);\n  }\n\n  update(x1: number, y1: number, x2: number, y2: number): Rectangle {\n    this.X1 = x1;\n    this.X2 = x2;\n    this.Y1 = y1;\n    this.Y2 = y2;\n    this.internalUpdate();\n    return this;\n  }\n\n  /**\n   * First resizes, then moves by a given factor in the horizontal direction\n   * @param factor  a multiplication factor (so use numbers smaller than zero for division)\n   */\n  moveAndScaleHorizontal(factor: number): Rectangle {\n    this.scaleWidth(factor).moveByFactorHorizontal(factor);\n    return this;\n  }\n\n  moveAndScaleVertical(factor: number): Rectangle {\n    this.scaleHeight(factor).moveByFactorVertical(factor);\n    return this;\n  }\n\n  /**\n   * Resizes by a certain factor in the horizontal direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleWidth(factor: number): Rectangle {\n    this.w *= factor;\n    return this;\n  }\n\n  /**\n   * Resizes by a given factor in the vertical direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleHeight(factor: number): Rectangle {\n    this.h *= factor;\n    return this;\n  }\n\n  moveByFactorHorizontal(factor: number): Rectangle {\n    this.X1 *= factor;\n    this.X2 = this.X1 + this.w;\n    return this;\n  }\n\n  moveByFactorVertical(factor: number): Rectangle {\n    this.Y1 *= factor;\n    this.Y2 += this.Y1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  setWidth(w: number): Rectangle {\n    this.X2 = this.X1 + w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteHorizontal(newX1: number): Rectangle {\n    this.X1 = newX1;\n    this.X2 = this.X1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaHorizontal(delta: number): Rectangle {\n    this.X1 += delta;\n    this.X2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteVertical(newY1: number): Rectangle {\n    this.Y1 = newY1;\n    this.Y2 += this.h;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaVertical(delta: number): Rectangle {\n    this.Y1 += delta;\n    this.Y2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  setHeight(h: number): Rectangle {\n    this.Y2 = this.Y1 + h;\n    this.internalUpdate();\n    return this;\n  }\n\n  setDimensions(dim: Dimensions): Rectangle {\n    this.setHeight(dim.h);\n    this.setWidth(dim.w);\n    return this;\n  }\n\n  setWidthHeight(w: number, h: number): Rectangle {\n    this.setWidth(w);\n    this.setHeight(h);\n    return this;\n  }\n\n  private internalUpdate(): void {\n    this.dimensions.w = Math.abs(this.x2 - this.x1);\n    this.dimensions.h = Math.abs(this.y2 - this.y1);\n\n    this.ratioWH = this.dimensions.w / this.dimensions.h;\n    this.ratioHW = this.dimensions.h / this.dimensions.w;\n  }\n\n  clone(): Rectangle {\n    return new Rectangle(this.x1, this.y1, this.x2, this.y2);\n  }\n\n  updateFromRect(rect: Rectangle): Rectangle {\n    this.update(rect.x1, rect.y1, rect.x2, rect.y2);\n    return this;\n  }\n\n  /**\n   * Convenience method to growFromTopLeft so no negative values have to be supplied\n   * @param shrinkWidthBy number of pixels to shrink horizontally\n   * @param shrinkHeightBy number of pixels to shrink vertically\n   */\n  shrinkFromTopLeft(shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.growFromTopLeft(-shrinkWidthBy, -shrinkHeightBy);\n    return this;\n  }\n\n  /**\n   * Will increase the size of the rectangle by moving the (x2,y2) coordinates with a given amount.\n   * (x1,y1) will remain the same\n   * @param growWidthBy number of pixels to grow horizontally\n   * @param growHeightBy number of pixels to grow vertically\n   */\n  growFromTopLeft(growWidthBy: number, growHeightBy: number): Rectangle {\n    this.w += growWidthBy;\n    this.h += growHeightBy;\n    return this;\n  }\n\n  /**\n   * Moves the top of the rectangle down so that the Y2-coordinate will remain the same, and the height is adjusted\n   * @param shrinkToHeight remaining height after call\n   * @return self\n   */\n  shrinkToHeightFromBottom(shrinkToHeight: number): Rectangle {\n    this.y1 = this.y2 - shrinkToHeight;\n    return this;\n  }\n\n  /**\n   * Will shrink the rectangle by a given amount and move it to a certain location. This way a\n   * rectangle can be shrunk on four sides while the center remains the same.\n   * @param moveX1 delta value to move x1-coordinate\n   * @param moveY1 delta value to move y1-coordinate\n   * @param shrinkWidthBy delta value to shrink the width\n   * @param shrinkHeightBy delta value to shrink the height\n   */\n  shrinkAndMove(moveX1: number, moveY1: number, shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.X1 += moveX1;\n    this.Y1 += moveY1;\n    this.internalUpdate();\n\n    this.shrinkFromTopLeft(shrinkWidthBy , shrinkHeightBy );\n    return this;\n  }\n\n  set x1(v: number) { this.X1 = v; this.internalUpdate(); }\n  get x1(): number  { return this.X1; }\n  set x2(v: number) { this.X2 = v; this.internalUpdate(); }\n  get x2(): number  { return this.X2; }\n  set y1(v: number) { this.Y1 = v; this.internalUpdate(); }\n  get y1(): number  { return this.Y1; }\n  set y2(v: number) { this.Y2 = v; this.internalUpdate(); }\n  get y2(): number  { return this.Y2; }\n\n  get w(): number  { return this.dimensions.w; }\n  set w(v: number) { this.setWidth(v); }\n  get h(): number  { return this.dimensions.h; }\n  set h(v: number) { this.setHeight(v); }\n\n}// Rectangle\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Line.html":{"url":"classes/Line.html","title":"class - Line","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Line\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/s-v-g-factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                x1\n                            \n                            \n                                    Public\n                                x2\n                            \n                            \n                                    Public\n                                y1\n                            \n                            \n                                    Public\n                                y2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    w\n                                \n                                \n                                    h\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(x1: number, y1: number, x2: number, y2: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/s-v-g-factory.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        x1\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        y1\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        x2\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        y2\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        x1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        x2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        y1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        y2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        w\n                    \n                \n\n                \n                    \n                        getw()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:77\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        h\n                    \n                \n\n                \n                    \n                        geth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:81\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {ElementRef} from '@angular/core';\n\nexport enum SVGElementType {\n  SVG,\n  Rect,\n  Circle,\n  Line,\n  Group,\n  Text,\n  Polyline,\n  Polygon\n}\n\n\nexport class SVGFactory {\n  private static svgNS = 'http://www.w3.org/2000/svg';\n\n  public static createElement(type: SVGElementType, ...args: any[]): Node | undefined {\n    switch (type) {\n      case SVGElementType.SVG:\n        return document.createElementNS(this.svgNS, 'svg');\n      case SVGElementType.Circle:\n        return document.createElementNS(this.svgNS, 'circle');\n      case SVGElementType.Line:\n        return document.createElementNS(this.svgNS, 'line');\n      case SVGElementType.Rect:\n        return document.createElementNS(this.svgNS, 'rect');\n      case SVGElementType.Text:\n        return document.createElementNS(this.svgNS, 'text');\n      case SVGElementType.Group:\n        return document.createElementNS(this.svgNS, 'g');\n      case SVGElementType.Polyline:\n        return document.createElementNS(this.svgNS, 'polyline');\n      case SVGElementType.Polygon:\n        return document.createElementNS(this.svgNS, 'polygon');\n      default:\n        console.error('#Error request SVG Factory type');\n        break;\n    }\n    return undefined;\n  }\n\n}\n\n\nexport class Dimensions {\n  private Width: number;\n  private Height: number;\n\n  constructor(w: number, h: number) {\n    this.Width = 0;\n    this.Height = 0;\n    this.update(w, h);\n  }\n\n  get h(): number  { return this.Height; }\n  set h(v: number) { this.Height = v; }\n  get w(): number  { return this.Width; }\n  set w(v: number) { this.Width = v; }\n\n  update(w: number, h: number): void {\n    this.Width  = w;\n    this.Height = h;\n  }\n\n  updateFromSVGElement(svg: ElementRef): Dimensions {\n    const svgBBox = svg.nativeElement.getBoundingClientRect();\n    this.update(svgBBox.width, svgBBox.height);\n    return this;\n  }\n}\n\nexport class Line {\n  constructor(public x1: number, public y1: number, public x2: number, public y2: number) {\n  }\n\n  get w(): number {\n    return Math.abs(this.x2 - this.x1);\n  }\n\n  get h(): number {\n    return Math.abs(this.y2 - this.y1);\n  }\n}\n\nexport class Rectangle {\n  public dimensions: Dimensions;\n  public ratioWH: number;\n  public ratioHW: number;\n  public X1: number;\n  public X2: number;\n  public Y1: number;\n  public Y2: number;\n\n  constructor(x1: number, y1: number, x2: number, y2: number) {\n    this.ratioHW = 0;\n    this.ratioWH = 0;\n    this.X1 = 0;\n    this.X2 = 0;\n    this.Y1 = 0;\n    this.Y2 = 0;\n    this.dimensions = new Dimensions(0, 0);\n    this.update(x1, y1, x2, y2);\n  }\n\n  update(x1: number, y1: number, x2: number, y2: number): Rectangle {\n    this.X1 = x1;\n    this.X2 = x2;\n    this.Y1 = y1;\n    this.Y2 = y2;\n    this.internalUpdate();\n    return this;\n  }\n\n  /**\n   * First resizes, then moves by a given factor in the horizontal direction\n   * @param factor  a multiplication factor (so use numbers smaller than zero for division)\n   */\n  moveAndScaleHorizontal(factor: number): Rectangle {\n    this.scaleWidth(factor).moveByFactorHorizontal(factor);\n    return this;\n  }\n\n  moveAndScaleVertical(factor: number): Rectangle {\n    this.scaleHeight(factor).moveByFactorVertical(factor);\n    return this;\n  }\n\n  /**\n   * Resizes by a certain factor in the horizontal direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleWidth(factor: number): Rectangle {\n    this.w *= factor;\n    return this;\n  }\n\n  /**\n   * Resizes by a given factor in the vertical direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleHeight(factor: number): Rectangle {\n    this.h *= factor;\n    return this;\n  }\n\n  moveByFactorHorizontal(factor: number): Rectangle {\n    this.X1 *= factor;\n    this.X2 = this.X1 + this.w;\n    return this;\n  }\n\n  moveByFactorVertical(factor: number): Rectangle {\n    this.Y1 *= factor;\n    this.Y2 += this.Y1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  setWidth(w: number): Rectangle {\n    this.X2 = this.X1 + w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteHorizontal(newX1: number): Rectangle {\n    this.X1 = newX1;\n    this.X2 = this.X1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaHorizontal(delta: number): Rectangle {\n    this.X1 += delta;\n    this.X2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteVertical(newY1: number): Rectangle {\n    this.Y1 = newY1;\n    this.Y2 += this.h;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaVertical(delta: number): Rectangle {\n    this.Y1 += delta;\n    this.Y2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  setHeight(h: number): Rectangle {\n    this.Y2 = this.Y1 + h;\n    this.internalUpdate();\n    return this;\n  }\n\n  setDimensions(dim: Dimensions): Rectangle {\n    this.setHeight(dim.h);\n    this.setWidth(dim.w);\n    return this;\n  }\n\n  setWidthHeight(w: number, h: number): Rectangle {\n    this.setWidth(w);\n    this.setHeight(h);\n    return this;\n  }\n\n  private internalUpdate(): void {\n    this.dimensions.w = Math.abs(this.x2 - this.x1);\n    this.dimensions.h = Math.abs(this.y2 - this.y1);\n\n    this.ratioWH = this.dimensions.w / this.dimensions.h;\n    this.ratioHW = this.dimensions.h / this.dimensions.w;\n  }\n\n  clone(): Rectangle {\n    return new Rectangle(this.x1, this.y1, this.x2, this.y2);\n  }\n\n  updateFromRect(rect: Rectangle): Rectangle {\n    this.update(rect.x1, rect.y1, rect.x2, rect.y2);\n    return this;\n  }\n\n  /**\n   * Convenience method to growFromTopLeft so no negative values have to be supplied\n   * @param shrinkWidthBy number of pixels to shrink horizontally\n   * @param shrinkHeightBy number of pixels to shrink vertically\n   */\n  shrinkFromTopLeft(shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.growFromTopLeft(-shrinkWidthBy, -shrinkHeightBy);\n    return this;\n  }\n\n  /**\n   * Will increase the size of the rectangle by moving the (x2,y2) coordinates with a given amount.\n   * (x1,y1) will remain the same\n   * @param growWidthBy number of pixels to grow horizontally\n   * @param growHeightBy number of pixels to grow vertically\n   */\n  growFromTopLeft(growWidthBy: number, growHeightBy: number): Rectangle {\n    this.w += growWidthBy;\n    this.h += growHeightBy;\n    return this;\n  }\n\n  /**\n   * Moves the top of the rectangle down so that the Y2-coordinate will remain the same, and the height is adjusted\n   * @param shrinkToHeight remaining height after call\n   * @return self\n   */\n  shrinkToHeightFromBottom(shrinkToHeight: number): Rectangle {\n    this.y1 = this.y2 - shrinkToHeight;\n    return this;\n  }\n\n  /**\n   * Will shrink the rectangle by a given amount and move it to a certain location. This way a\n   * rectangle can be shrunk on four sides while the center remains the same.\n   * @param moveX1 delta value to move x1-coordinate\n   * @param moveY1 delta value to move y1-coordinate\n   * @param shrinkWidthBy delta value to shrink the width\n   * @param shrinkHeightBy delta value to shrink the height\n   */\n  shrinkAndMove(moveX1: number, moveY1: number, shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.X1 += moveX1;\n    this.Y1 += moveY1;\n    this.internalUpdate();\n\n    this.shrinkFromTopLeft(shrinkWidthBy , shrinkHeightBy );\n    return this;\n  }\n\n  set x1(v: number) { this.X1 = v; this.internalUpdate(); }\n  get x1(): number  { return this.X1; }\n  set x2(v: number) { this.X2 = v; this.internalUpdate(); }\n  get x2(): number  { return this.X2; }\n  set y1(v: number) { this.Y1 = v; this.internalUpdate(); }\n  get y1(): number  { return this.Y1; }\n  set y2(v: number) { this.Y2 = v; this.internalUpdate(); }\n  get y2(): number  { return this.Y2; }\n\n  get w(): number  { return this.dimensions.w; }\n  set w(v: number) { this.setWidth(v); }\n  get h(): number  { return this.dimensions.h; }\n  set h(v: number) { this.setHeight(v); }\n\n}// Rectangle\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SVGFactory.html":{"url":"classes/SVGFactory.html","title":"class - SVGFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SVGFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/s-v-g-factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                svgNS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        svgNS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://www.w3.org/2000/svg'\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    createElement(type: SVGElementType, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/s-v-g-factory.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                SVGElementType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Node | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ElementRef} from '@angular/core';\n\nexport enum SVGElementType {\n  SVG,\n  Rect,\n  Circle,\n  Line,\n  Group,\n  Text,\n  Polyline,\n  Polygon\n}\n\n\nexport class SVGFactory {\n  private static svgNS = 'http://www.w3.org/2000/svg';\n\n  public static createElement(type: SVGElementType, ...args: any[]): Node | undefined {\n    switch (type) {\n      case SVGElementType.SVG:\n        return document.createElementNS(this.svgNS, 'svg');\n      case SVGElementType.Circle:\n        return document.createElementNS(this.svgNS, 'circle');\n      case SVGElementType.Line:\n        return document.createElementNS(this.svgNS, 'line');\n      case SVGElementType.Rect:\n        return document.createElementNS(this.svgNS, 'rect');\n      case SVGElementType.Text:\n        return document.createElementNS(this.svgNS, 'text');\n      case SVGElementType.Group:\n        return document.createElementNS(this.svgNS, 'g');\n      case SVGElementType.Polyline:\n        return document.createElementNS(this.svgNS, 'polyline');\n      case SVGElementType.Polygon:\n        return document.createElementNS(this.svgNS, 'polygon');\n      default:\n        console.error('#Error request SVG Factory type');\n        break;\n    }\n    return undefined;\n  }\n\n}\n\n\nexport class Dimensions {\n  private Width: number;\n  private Height: number;\n\n  constructor(w: number, h: number) {\n    this.Width = 0;\n    this.Height = 0;\n    this.update(w, h);\n  }\n\n  get h(): number  { return this.Height; }\n  set h(v: number) { this.Height = v; }\n  get w(): number  { return this.Width; }\n  set w(v: number) { this.Width = v; }\n\n  update(w: number, h: number): void {\n    this.Width  = w;\n    this.Height = h;\n  }\n\n  updateFromSVGElement(svg: ElementRef): Dimensions {\n    const svgBBox = svg.nativeElement.getBoundingClientRect();\n    this.update(svgBBox.width, svgBBox.height);\n    return this;\n  }\n}\n\nexport class Line {\n  constructor(public x1: number, public y1: number, public x2: number, public y2: number) {\n  }\n\n  get w(): number {\n    return Math.abs(this.x2 - this.x1);\n  }\n\n  get h(): number {\n    return Math.abs(this.y2 - this.y1);\n  }\n}\n\nexport class Rectangle {\n  public dimensions: Dimensions;\n  public ratioWH: number;\n  public ratioHW: number;\n  public X1: number;\n  public X2: number;\n  public Y1: number;\n  public Y2: number;\n\n  constructor(x1: number, y1: number, x2: number, y2: number) {\n    this.ratioHW = 0;\n    this.ratioWH = 0;\n    this.X1 = 0;\n    this.X2 = 0;\n    this.Y1 = 0;\n    this.Y2 = 0;\n    this.dimensions = new Dimensions(0, 0);\n    this.update(x1, y1, x2, y2);\n  }\n\n  update(x1: number, y1: number, x2: number, y2: number): Rectangle {\n    this.X1 = x1;\n    this.X2 = x2;\n    this.Y1 = y1;\n    this.Y2 = y2;\n    this.internalUpdate();\n    return this;\n  }\n\n  /**\n   * First resizes, then moves by a given factor in the horizontal direction\n   * @param factor  a multiplication factor (so use numbers smaller than zero for division)\n   */\n  moveAndScaleHorizontal(factor: number): Rectangle {\n    this.scaleWidth(factor).moveByFactorHorizontal(factor);\n    return this;\n  }\n\n  moveAndScaleVertical(factor: number): Rectangle {\n    this.scaleHeight(factor).moveByFactorVertical(factor);\n    return this;\n  }\n\n  /**\n   * Resizes by a certain factor in the horizontal direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleWidth(factor: number): Rectangle {\n    this.w *= factor;\n    return this;\n  }\n\n  /**\n   * Resizes by a given factor in the vertical direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleHeight(factor: number): Rectangle {\n    this.h *= factor;\n    return this;\n  }\n\n  moveByFactorHorizontal(factor: number): Rectangle {\n    this.X1 *= factor;\n    this.X2 = this.X1 + this.w;\n    return this;\n  }\n\n  moveByFactorVertical(factor: number): Rectangle {\n    this.Y1 *= factor;\n    this.Y2 += this.Y1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  setWidth(w: number): Rectangle {\n    this.X2 = this.X1 + w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteHorizontal(newX1: number): Rectangle {\n    this.X1 = newX1;\n    this.X2 = this.X1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaHorizontal(delta: number): Rectangle {\n    this.X1 += delta;\n    this.X2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteVertical(newY1: number): Rectangle {\n    this.Y1 = newY1;\n    this.Y2 += this.h;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaVertical(delta: number): Rectangle {\n    this.Y1 += delta;\n    this.Y2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  setHeight(h: number): Rectangle {\n    this.Y2 = this.Y1 + h;\n    this.internalUpdate();\n    return this;\n  }\n\n  setDimensions(dim: Dimensions): Rectangle {\n    this.setHeight(dim.h);\n    this.setWidth(dim.w);\n    return this;\n  }\n\n  setWidthHeight(w: number, h: number): Rectangle {\n    this.setWidth(w);\n    this.setHeight(h);\n    return this;\n  }\n\n  private internalUpdate(): void {\n    this.dimensions.w = Math.abs(this.x2 - this.x1);\n    this.dimensions.h = Math.abs(this.y2 - this.y1);\n\n    this.ratioWH = this.dimensions.w / this.dimensions.h;\n    this.ratioHW = this.dimensions.h / this.dimensions.w;\n  }\n\n  clone(): Rectangle {\n    return new Rectangle(this.x1, this.y1, this.x2, this.y2);\n  }\n\n  updateFromRect(rect: Rectangle): Rectangle {\n    this.update(rect.x1, rect.y1, rect.x2, rect.y2);\n    return this;\n  }\n\n  /**\n   * Convenience method to growFromTopLeft so no negative values have to be supplied\n   * @param shrinkWidthBy number of pixels to shrink horizontally\n   * @param shrinkHeightBy number of pixels to shrink vertically\n   */\n  shrinkFromTopLeft(shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.growFromTopLeft(-shrinkWidthBy, -shrinkHeightBy);\n    return this;\n  }\n\n  /**\n   * Will increase the size of the rectangle by moving the (x2,y2) coordinates with a given amount.\n   * (x1,y1) will remain the same\n   * @param growWidthBy number of pixels to grow horizontally\n   * @param growHeightBy number of pixels to grow vertically\n   */\n  growFromTopLeft(growWidthBy: number, growHeightBy: number): Rectangle {\n    this.w += growWidthBy;\n    this.h += growHeightBy;\n    return this;\n  }\n\n  /**\n   * Moves the top of the rectangle down so that the Y2-coordinate will remain the same, and the height is adjusted\n   * @param shrinkToHeight remaining height after call\n   * @return self\n   */\n  shrinkToHeightFromBottom(shrinkToHeight: number): Rectangle {\n    this.y1 = this.y2 - shrinkToHeight;\n    return this;\n  }\n\n  /**\n   * Will shrink the rectangle by a given amount and move it to a certain location. This way a\n   * rectangle can be shrunk on four sides while the center remains the same.\n   * @param moveX1 delta value to move x1-coordinate\n   * @param moveY1 delta value to move y1-coordinate\n   * @param shrinkWidthBy delta value to shrink the width\n   * @param shrinkHeightBy delta value to shrink the height\n   */\n  shrinkAndMove(moveX1: number, moveY1: number, shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.X1 += moveX1;\n    this.Y1 += moveY1;\n    this.internalUpdate();\n\n    this.shrinkFromTopLeft(shrinkWidthBy , shrinkHeightBy );\n    return this;\n  }\n\n  set x1(v: number) { this.X1 = v; this.internalUpdate(); }\n  get x1(): number  { return this.X1; }\n  set x2(v: number) { this.X2 = v; this.internalUpdate(); }\n  get x2(): number  { return this.X2; }\n  set y1(v: number) { this.Y1 = v; this.internalUpdate(); }\n  get y1(): number  { return this.Y1; }\n  set y2(v: number) { this.Y2 = v; this.internalUpdate(); }\n  get y2(): number  { return this.Y2; }\n\n  get w(): number  { return this.dimensions.w; }\n  set w(v: number) { this.setWidth(v); }\n  get h(): number  { return this.dimensions.h; }\n  set h(v: number) { this.setHeight(v); }\n\n}// Rectangle\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/classes/s-v-g-factory.ts\n            \n            class\n            Dimensions\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/classes/s-v-g-factory.ts\n            \n            class\n            Line\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/classes/s-v-g-factory.ts\n            \n            class\n            Rectangle\n            \n                22 %\n                (7/31)\n            \n        \n        \n            \n                \n                src/app/classes/s-v-g-factory.ts\n            \n            class\n            SVGFactory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/vu-meter/vu-meter.component.ts\n            \n            component\n            VuMeterComponent\n            \n                50 %\n                (33/66)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.3.0\n        \n            @angular/common : ~13.3.0\n        \n            @angular/compiler : ~13.3.0\n        \n            @angular/core : ~13.3.0\n        \n            @angular/forms : ~13.3.0\n        \n            @angular/platform-browser : ~13.3.0\n        \n            @angular/platform-browser-dynamic : ~13.3.0\n        \n            @angular/router : ~13.3.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SVGElementType   (src/.../s-v-g-factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/classes/s-v-g-factory.ts\n    \n        \n            \n                \n                    \n                        \n                        SVGElementType\n                    \n                \n                        \n                            \n                                 SVG\n                            \n                        \n                        \n                            \n                                 Rect\n                            \n                        \n                        \n                            \n                                 Circle\n                            \n                        \n                        \n                            \n                                 Line\n                            \n                        \n                        \n                            \n                                 Group\n                            \n                        \n                        \n                            \n                                 Text\n                            \n                        \n                        \n                            \n                                 Polyline\n                            \n                        \n                        \n                            \n                                 Polygon\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGaugev13\nThis component builds a Gauge or VU-meter using Scalable Vector Graphics. The current value is indicated\nusing a customisable needle.\n\nFeatures\n\nThe arc of the VU-meter can have multiple parts in different colors.\noptional shadow of needle and arc-parts\ncaption and footer\noptional labels for current value (center) and minimal/maximal values\noptional extra class to direct styling (using :host ::ng-deep)\nneedle will use animation when value is changed (using ease-in-out schema) with customisable delay\noptional margins for top/bottom/sides\nneedle size can be adjusted\nuse percentage between 0 and 100 as a needle value instead of absolute values\nguards against impossible values (null, undefined, out of range)\n\nDocumentation\nDocumentation is generated using Compodoc. \nAngular info\nThis project was generated with Angular CLI version 12.2.17.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nVuMeterComponent\n\nVuMeterComponent\n\nAppModule -->\n\nVuMeterComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.215,1,1]],["body/components/AppComponent.html",[0,1.497,1,1.37,2,1.894,3,0.562,4,0.685,5,1.636,6,1.636,7,1.636,8,1.636,9,0.562,10,1.262,11,1.636,12,3.274,13,3.684,14,2.455,15,2.455,16,2.947,17,2.455,18,2.455,19,0.457,20,0.843,21,2.947,22,2.947,23,2.947,24,2.947,25,2.947,26,2.203,27,2.947,28,2.947,29,2.947,30,2.947,31,2.947,32,2.947,33,2.947,34,2.947,35,2.947,36,2.947,37,2.947,38,1.447,39,0.078,40,1.827,41,1.567,42,4.094,43,4.094,44,4.094,45,2.219,46,1.636,47,2.455,48,1.636,49,3.684,50,1.636,51,1.636,52,1.636,53,2.455,54,1.636,55,2.455,56,1.636,57,0.832,58,3.684,59,1.636,60,2.455,61,1.636,62,2.455,63,1.636,64,1.447,65,2.526,66,2.526,67,3.274,68,1.636,69,1.894,70,2.455,71,3.684,72,2.455,73,1.636,74,2.455,75,1.636,76,3.274,77,3.274,78,1.636,79,1.636,80,1.262,81,1.894,82,1.636,83,0.685,84,0.562,85,0.685,86,0.211,87,1.262,88,1.262,89,1.636,90,4.094,91,1.894,92,2.455,93,1.636,94,1.636,95,2.947,96,0.832,97,1.636,98,2.455,99,1.829,100,2.273,101,1.636,102,1.636,103,1.636,104,2.706,105,1.636,106,2.455,107,2.455,108,3.274,109,2.455,110,2.455,111,2.455,112,1.636,113,1.636,114,2.455,115,3.031,116,3.031,117,1.636,118,3.509,119,2.455,120,2.455,121,2.455,122,1.636,123,1.636,124,1.636,125,2.947,126,1.636,127,3.274,128,1.636,129,1.636,130,1.636,131,1.636,132,1.636,133,3.509,134,2.455,135,1.636,136,1.636,137,2.947,138,2.455,139,2.455,140,1.636,141,3.274,142,1.636,143,1.636,144,1.636,145,1.636,146,1.636,147,1.636,148,0.685,149,1.636,150,1.636,151,2.455,152,2.455,153,1.636,154,3.274,155,1.636,156,1.248,157,1.636,158,0.832,159,1.636,160,1.636,161,0.04,162,0.04]],["title/modules/AppModule.html",[163,1.844,164,1.215]],["body/modules/AppModule.html",[1,1.96,3,1.063,4,1.295,9,1.063,39,0.078,83,1.839,84,1.063,85,1.295,86,0.399,99,1.921,158,2.274,161,0.062,162,0.062,164,2.344,165,1.921,166,1.93,167,2.388,168,2.388,169,2.388,170,2.93,171,2.388,172,1.921,173,3.096,174,3.798,175,3.798,176,3.798,177,3.798,178,2.388,179,1.921,180,3.096,181,2.388,182,3.096,183,3.798,184,2.388,185,3.096,186,3.096]],["title/classes/Dimensions.html",[86,0.308,187,1]],["body/classes/Dimensions.html",[3,0.394,4,0.479,9,0.394,19,0.32,20,0.638,26,1.922,38,1.236,39,0.079,40,0.479,41,0.926,45,1.829,57,2.402,64,1.236,83,0.479,84,0.394,85,1.24,86,0.347,96,1.191,148,0.479,156,1.506,161,0.03,162,0.03,187,1.399,188,0.582,189,1.547,190,1.738,191,1.582,192,0.479,193,2.161,194,1.97,195,1.674,196,1.433,197,1.858,198,1.858,199,1.433,200,2.501,201,2.234,202,0.884,203,1.153,204,1.858,205,1.84,206,1.506,207,1.146,208,1.153,209,1.146,210,2.08,211,1.84,212,1.153,213,1.674,214,1.146,215,1.128,216,0.884,217,1.146,218,1.146,219,1.146,220,0.884,221,1.146,222,1.146,223,1.146,224,0.711,225,0.944,226,0.944,227,0.944,228,0.805,229,0.582,230,0.944,231,0.944,232,0.944,233,0.479,234,1.153,235,0.711,236,0.711,237,0.711,238,0.711,239,0.711,240,0.944,241,0.711,242,2.161,243,0.711,244,2.828,245,2.161,246,0.711,247,0.711,248,0.711,249,0.711,250,0.711,251,0.711,252,0.711,253,0.711,254,0.711,255,0.711,256,0.711,257,1.674,258,1.674,259,0.711,260,2.161,261,1.153,262,1.153,263,0.711,264,0.711,265,0.711,266,0.711,267,0.711,268,0.711,269,1.84,270,2.161,271,2.075,272,2.161,273,1.153,274,2.434,275,1.153,276,2.47,277,2.235,278,0.711,279,0.711,280,0.711,281,1.153,282,1.153,283,2.234,284,2.295,285,0.711,286,0.944,287,0.711,288,0.711,289,0.711,290,2.434,291,0.711,292,1.455,293,1.153,294,1.674,295,2.434,296,1.153,297,2.394,298,1.455,299,1.191,300,1.455,301,1.455,302,1.455,303,1.455,304,0.711,305,0.711,306,0.711,307,0.711,308,1.153,309,0.711,310,1.84,311,0.711,312,0.711,313,1.455,314,0.711,315,0.711,316,0.711,317,0.711,318,0.711,319,0.711,320,2.161,321,0.711,322,0.711,323,0.711,324,0.711,325,0.711,326,0.711,327,0.711,328,0.711,329,0.711,330,0.711,331,0.711,332,1.674,333,1.674,334,0.711,335,0.711,336,0.711,337,0.711,338,0.711,339,0.711,340,0.711,341,0.711,342,0.711,343,0.711,344,0.711,345,0.582,346,0.711,347,1.674,348,1.674,349,1.84,350,1.153,351,1.97,352,1.153,353,0.711,354,0.711,355,0.711,356,0.711,357,0.711,358,0.711,359,1.153,360,0.711,361,1.153,362,1.455,363,1.153,364,1.153,365,1.455,366,0.711,367,0.711,368,0.711,369,1.455,370,0.582,371,1.153,372,0.711,373,0.711,374,0.711,375,0.711,376,1.455,377,0.711,378,0.711,379,0.711,380,0.711,381,0.711,382,0.582,383,0.711,384,1.153,385,1.455,386,0.711,387,0.711,388,0.711,389,0.711,390,0.711,391,0.711,392,0.711,393,0.711]],["title/classes/Line.html",[86,0.308,228,0.821]],["body/classes/Line.html",[3,0.407,4,0.496,9,0.407,19,0.331,20,0.656,26,2.142,38,1.165,39,0.079,40,0.496,41,0.945,45,1.723,57,2.404,64,1.251,83,0.496,84,0.407,85,1.262,86,0.354,96,1.219,148,0.496,156,0.602,161,0.031,162,0.031,187,1.262,188,0.602,189,1.475,190,1.678,191,1.523,192,0.496,193,1.707,194,1.707,195,1.185,199,1.473,200,2.372,201,2.104,202,0.914,203,0.736,205,0.736,206,0.602,208,0.736,211,1.185,212,0.736,213,1.185,215,1.003,216,0.914,220,0.914,224,0.736,225,0.97,226,0.97,227,0.97,228,0.945,229,0.602,230,0.97,231,0.97,232,0.97,233,0.496,234,1.185,235,0.736,236,0.736,237,0.736,238,0.736,239,0.736,240,0.97,241,0.736,242,2.189,243,0.736,244,2.837,245,2.189,246,0.736,247,0.736,248,0.736,249,0.736,250,0.736,251,0.736,252,0.736,253,0.736,254,0.736,255,0.736,256,0.736,257,1.707,258,1.707,259,0.736,260,2.189,261,1.185,262,1.185,263,0.736,264,0.736,265,0.736,266,0.736,267,0.736,268,0.736,269,2.189,270,2.416,271,2.372,272,2.416,273,1.185,274,2.456,275,1.185,276,2.49,277,2.245,278,0.736,279,0.736,280,1.185,281,1.185,282,1.185,283,2.26,284,2.32,285,0.736,286,0.97,287,0.736,288,0.736,289,0.736,290,2.456,291,0.736,292,1.489,293,1.185,294,1.707,295,2.456,296,1.185,297,2.416,298,1.489,299,1.219,300,1.489,301,1.489,302,1.489,303,1.489,304,0.736,305,0.736,306,0.736,307,0.736,308,1.185,309,0.736,310,1.872,311,0.736,312,0.736,313,1.489,314,0.736,315,0.736,316,0.736,317,0.736,318,0.736,319,0.736,320,2.189,321,0.736,322,0.736,323,0.736,324,0.736,325,0.736,326,0.736,327,0.736,328,0.736,329,0.736,330,0.736,331,0.736,332,1.707,333,1.707,334,0.736,335,0.736,336,0.736,337,0.736,338,0.736,339,0.736,340,0.736,341,0.736,342,0.736,343,0.736,344,0.736,345,0.602,346,0.736,347,1.707,348,1.707,349,1.872,350,1.185,351,2.001,352,1.185,353,0.736,354,0.736,355,0.736,356,0.736,357,0.736,358,0.736,359,1.185,360,0.736,361,1.185,362,1.489,363,1.185,364,1.185,365,1.489,366,0.736,367,0.736,368,0.736,369,1.489,370,0.602,371,1.185,372,0.736,373,0.736,374,0.736,375,0.736,376,1.489,377,0.736,378,0.736,379,0.736,380,0.736,381,0.736,382,0.602,383,0.736,384,1.185,385,1.489,386,0.736,387,0.736,388,0.736,389,0.736,390,0.736,391,0.736,392,0.736,393,0.736,394,1.185,395,2.75,396,1.185,397,1.185]],["title/classes/SVGFactory.html",[86,0.308,233,1]],["body/classes/SVGFactory.html",[3,0.422,4,0.514,9,0.422,19,0.343,20,0.675,26,1.962,38,1.055,39,0.079,40,0.823,41,1.055,45,0.999,57,2.393,64,1.266,80,0.948,83,0.514,84,0.422,85,1.285,86,0.362,96,1.249,148,0.514,156,0.625,161,0.032,162,0.032,187,1.285,188,0.625,189,1.028,190,1.542,191,1.175,192,0.514,193,2.034,194,1.743,195,1.22,196,1.517,200,2.288,201,1.907,203,0.763,205,0.763,206,0.625,208,0.763,210,0.948,211,1.22,212,0.763,213,1.22,215,1.028,224,0.763,225,1.427,226,0.999,227,0.999,228,0.844,229,0.625,230,0.999,231,0.999,232,0.999,233,0.823,234,2.034,235,1.525,236,1.22,237,1.22,238,1.525,239,1.22,240,1.249,241,0.763,242,2.219,243,0.763,244,2.847,245,2.219,246,0.763,247,0.763,248,0.763,249,0.763,250,0.763,251,0.763,252,0.763,253,0.763,254,0.763,255,0.763,256,0.763,257,1.743,258,1.743,259,0.763,260,2.219,261,1.22,262,1.22,263,0.763,264,0.763,265,0.763,266,0.763,267,0.763,268,0.763,269,1.907,270,2.219,271,2.135,272,2.219,273,1.22,274,2.478,275,1.22,276,2.512,277,2.255,278,0.763,279,0.763,280,0.763,281,1.22,282,1.22,283,2.288,284,2.346,285,0.763,286,0.999,287,0.763,288,0.763,289,0.763,290,2.478,291,0.763,292,1.525,293,1.22,294,1.743,295,2.478,296,1.22,297,2.44,298,1.525,299,1.249,300,1.525,301,1.525,302,1.525,303,1.525,304,0.763,305,0.763,306,0.763,307,0.763,308,1.22,309,0.763,310,1.907,311,0.763,312,0.763,313,1.525,314,0.763,315,0.763,316,0.763,317,0.763,318,0.763,319,0.763,320,2.219,321,0.763,322,0.763,323,0.763,324,0.763,325,0.763,326,0.763,327,0.763,328,0.763,329,0.763,330,0.763,331,0.763,332,1.743,333,1.743,334,0.763,335,0.763,336,0.763,337,0.763,338,0.763,339,0.763,340,0.763,341,0.763,342,0.763,343,0.763,344,0.763,345,0.625,346,0.763,347,1.743,348,1.743,349,1.907,350,1.22,351,2.034,352,1.22,353,0.763,354,0.763,355,0.763,356,0.763,357,0.763,358,0.763,359,1.22,360,0.763,361,1.22,362,1.525,363,1.22,364,1.22,365,1.525,366,0.763,367,0.763,368,0.763,369,1.525,370,0.625,371,1.22,372,0.763,373,0.763,374,0.763,375,0.763,376,1.525,377,0.763,378,0.763,379,0.763,380,0.763,381,0.763,382,0.625,383,0.763,384,1.22,385,1.525,386,0.763,387,0.763,388,0.763,389,0.763,390,0.763,391,0.763,392,0.763,393,0.763,398,1.966,399,1.229,400,1.229]],["title/coverage.html",[401,2.481]],["body/coverage.html",[0,1.939,1,1.305,9,1.072,10,2.406,38,1.072,39,0.076,64,1.575,86,0.553,158,1.585,161,0.062,162,0.062,181,2.406,187,1.305,189,1.797,190,1.797,191,1.797,192,1.797,228,1.072,233,1.305,277,1.585,286,1.585,401,2.406,402,2.406,403,3.12,404,3.12,405,3.12,406,3.817,407,3.12,408,3.12,409,3.12,410,3.12,411,3.12,412,3.12,413,3.12,414,2.406,415,4.296,416,2.944,417,4.296,418,2.406,419,2.944,420,2.406,421,2.406,422,3.12,423,3.12]],["title/dependencies.html",[166,1.455,424,1.558]],["body/dependencies.html",[39,0.078,84,1.17,161,0.066,162,0.066,166,1.731,178,3.104,179,2.498,184,2.628,425,3.407,426,4.657,427,3.407,428,3.407,429,3.407,430,3.407,431,3.407,432,3.407,433,3.407,434,3.407,435,3.407,436,3.407,437,3.407,438,3.407]],["title/miscellaneous/enumerations.html",[439,1.027,440,2.209]],["body/miscellaneous/enumerations.html",[19,0.993,39,0.067,161,0.067,162,0.067,189,1.486,190,1.725,191,1.725,192,1.725,215,1.486,225,2.095,226,1.805,227,1.805,228,1.22,229,1.805,230,1.805,231,1.805,232,1.805,439,1.805,440,2.74,441,3.552]],["title/index.html",[19,0.565,442,2.02,443,2.02]],["body/index.html",[0,1.549,3,1.047,39,0.061,41,1.464,64,1.047,69,2.351,81,2.351,86,0.393,87,2.351,88,2.351,99,2.335,100,2.902,104,2.351,115,2.351,116,2.351,125,2.351,148,1.275,161,0.061,162,0.061,172,2.335,206,2.166,240,1.549,299,1.912,345,2.074,370,1.549,382,1.549,402,2.902,444,3.048,445,3.048,446,4.378,447,3.048,448,3.048,449,3.048,450,3.762,451,3.048,452,3.762,453,4.378,454,3.048,455,3.762,456,3.048,457,3.762,458,3.048,459,3.048,460,3.048,461,3.048,462,3.048,463,3.048,464,3.048,465,3.048,466,3.048,467,3.048,468,3.048,469,3.048,470,3.048,471,3.048,472,3.048,473,3.048,474,3.048,475,3.048,476,3.048,477,3.048,478,3.048,479,3.048,480,3.048,481,3.762,482,3.048,483,3.762,484,3.048,485,3.048,486,2.351,487,3.048]],["title/modules.html",[165,1.997]],["body/modules.html",[39,0.068,161,0.068,162,0.068,164,1.867,165,2.281,179,2.281,215,1.537,488,3.675,489,3.675]],["title/overview.html",[490,2.481]],["body/overview.html",[1,1.937,2,2.651,39,0.074,65,2.651,66,2.651,91,2.651,158,2.184,161,0.066,162,0.066,163,2.651,164,2.353,166,2.055,167,2.651,168,2.651,169,2.651,170,3.12,171,2.651,172,2.133,188,1.746,490,2.651]],["title/properties.html",[20,0.984,424,1.558]],["body/properties.html",[20,1.268,39,0.072,161,0.069,162,0.069,486,2.848,491,3.692]],["title/miscellaneous/variables.html",[439,1.027,492,2.209]],["body/miscellaneous/variables.html",[19,0.936,38,1.512,39,0.077,40,1.779,41,1.461,161,0.065,162,0.065,414,2.584,416,3.394,418,2.584,419,2.584,420,3.073,421,3.073,439,1.702,492,2.584,493,3.984,494,3.35,495,3.35,496,3.35,497,3.984,498,3.35,499,3.35,500,3.984,501,3.984,502,3.35]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"index.html":{}}}],["0.0.0",{"_index":491,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["1.1.19",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["100",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["12.2.17",{"_index":487,"title":{},"body":{"index.html":{}}}],["13.3.0",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["20px",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["22",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["30",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["3px",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["47/83",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["50",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["56",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["7",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["7,10,20,30,40",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["7.5.0",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["7/31",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["8pt",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["absolute",{"_index":476,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":199,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{}}}],["actual_component",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["adjusted",{"_index":370,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["against",{"_index":478,"title":{},"body":{"index.html":{}}}],["amount",{"_index":359,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["angular",{"_index":483,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["animation",{"_index":467,"title":{},"body":{"index.html":{}}}],["antiquewhite",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":164,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arc",{"_index":455,"title":{},"body":{"index.html":{}}}],["args",{"_index":238,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["article.gauge",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["article.gauge.martin",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["between",{"_index":474,"title":{},"body":{"index.html":{}}}],["black",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["blue",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["bold",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["bootstrap",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["box",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":256,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["browse",{"_index":489,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["builds",{"_index":445,"title":{},"body":{"index.html":{}}}],["call",{"_index":373,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["caption",{"_index":460,"title":{},"body":{"index.html":{}}}],["case",{"_index":242,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["center",{"_index":382,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["certain",{"_index":308,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["changed",{"_index":468,"title":{},"body":{"index.html":{}}}],["circle",{"_index":227,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["circle.gauge.needle.martin",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["class",{"_index":86,"title":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":188,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"overview.html":{}}}],["cli",{"_index":485,"title":{},"body":{"index.html":{}}}],["clone",{"_index":334,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["cluster_appmodule",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["colors",{"_index":459,"title":{},"body":{"index.html":{}}}],["colors1",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["colors2",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["colors3",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["colors4",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["colors5",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["compodoc",{"_index":482,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["console.error('#error",{"_index":253,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["const",{"_index":263,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["constructor",{"_index":202,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{}}}],["constructor(public",{"_index":268,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["constructor(w",{"_index":203,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["constructor(x1",{"_index":280,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["container",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["context",{"_index":420,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["convenience",{"_index":341,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["coordinate",{"_index":369,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["coordinates",{"_index":358,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["coverage",{"_index":401,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createelement",{"_index":398,"title":{},"body":{"classes/SVGFactory.html":{}}}],["createelement(type",{"_index":237,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["current",{"_index":450,"title":{},"body":{"index.html":{}}}],["customisable",{"_index":452,"title":{},"body":{"index.html":{}}}],["darkgray",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["darkred",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["declarations",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["deep",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["default",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["delay",{"_index":471,"title":{},"body":{"index.html":{}}}],["delta",{"_index":320,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["dependencies",{"_index":166,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["different",{"_index":458,"title":{},"body":{"index.html":{}}}],["dimensions",{"_index":187,"title":{"classes/Dimensions.html":{}},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{}}}],["dimensions(0",{"_index":287,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["direct",{"_index":465,"title":{},"body":{"index.html":{}}}],["direction",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["directive",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["directives",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["display",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["division",{"_index":303,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["document.createelementns(this.svgns",{"_index":245,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["documentation",{"_index":402,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{}}}],["down",{"_index":368,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["drop",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["dynamic",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["ease",{"_index":469,"title":{},"body":{"index.html":{}}}],["element",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["elementref",{"_index":213,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["enum",{"_index":224,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["enumerations",{"_index":440,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":416,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["extra",{"_index":464,"title":{},"body":{"index.html":{}}}],["factor",{"_index":295,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["factory",{"_index":255,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["factory.ts",{"_index":192,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["factory.ts:16",{"_index":399,"title":{},"body":{"classes/SVGFactory.html":{}}}],["factory.ts:18",{"_index":400,"title":{},"body":{"classes/SVGFactory.html":{}}}],["factory.ts:47",{"_index":207,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:48",{"_index":204,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:56",{"_index":217,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:57",{"_index":219,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:58",{"_index":221,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:59",{"_index":223,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:61",{"_index":209,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:66",{"_index":214,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:73",{"_index":394,"title":{},"body":{"classes/Line.html":{}}}],["factory.ts:74",{"_index":395,"title":{},"body":{"classes/Line.html":{}}}],["factory.ts:77",{"_index":396,"title":{},"body":{"classes/Line.html":{}}}],["factory.ts:81",{"_index":397,"title":{},"body":{"classes/Line.html":{}}}],["false",{"_index":502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["family",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["features",{"_index":454,"title":{},"body":{"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{}}}],["fill",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["filter",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["first",{"_index":291,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["flex",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["font",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["footer",{"_index":461,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["four",{"_index":380,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["g",{"_index":191,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["gauge",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["gauge.needle.pointer.martin",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["gaugev13",{"_index":444,"title":{},"body":{"index.html":{}}}],["generated",{"_index":481,"title":{},"body":{"index.html":{}}}],["geth",{"_index":216,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{}}}],["getting",{"_index":442,"title":{"index.html":{}},"body":{}}],["getw",{"_index":220,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{}}}],["given",{"_index":294,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["graph",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["graphics",{"_index":449,"title":{},"body":{"index.html":{}}}],["gray",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["green",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["group",{"_index":229,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["grow",{"_index":364,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["growfromtopleft",{"_index":343,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["growfromtopleft(growwidthby",{"_index":366,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["growheightby",{"_index":365,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["growwidthby",{"_index":363,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["guards",{"_index":477,"title":{},"body":{"index.html":{}}}],["h",{"_index":200,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["h(v",{"_index":261,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["height",{"_index":194,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["horizontal",{"_index":296,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["horizontally",{"_index":350,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["host",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["html",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["http://www.w3.org/2000/svg",{"_index":236,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["identifier",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["imports",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["impossible",{"_index":479,"title":{},"body":{"index.html":{}}}],["increase",{"_index":355,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":451,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["input",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["instead",{"_index":475,"title":{},"body":{"index.html":{}}}],["internalupdate",{"_index":331,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["labels",{"_index":462,"title":{},"body":{"index.html":{}}}],["left",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["lightgray",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["line",{"_index":228,"title":{"classes/Line.html":{}},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["literal",{"_index":499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location",{"_index":377,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["margin",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["margins",{"_index":472,"title":{},"body":{"index.html":{}}}],["matching",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.abs(this.x2",{"_index":273,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["math.abs(this.y2",{"_index":275,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["meter",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["meter.component",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["meter.component.ts",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["meter/vu",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["method",{"_index":342,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["methods",{"_index":196,"title":{},"body":{"classes/Dimensions.html":{},"classes/SVGFactory.html":{}}}],["minimal/maximal",{"_index":463,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":439,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":163,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":165,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["move",{"_index":376,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moveabsolutehorizontal(newx1",{"_index":317,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moveabsolutevertical(newy1",{"_index":321,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moveandscalehorizontal(factor",{"_index":304,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moveandscalevertical(factor",{"_index":306,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movebyfactorhorizontal(factor",{"_index":314,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movebyfactorvertical(factor",{"_index":315,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movedeltahorizontal(delta",{"_index":319,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movedeltavertical(delta",{"_index":323,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moves",{"_index":293,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movex1",{"_index":384,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movey1",{"_index":385,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moving",{"_index":356,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["multiple",{"_index":456,"title":{},"body":{"index.html":{}}}],["multiplication",{"_index":298,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["name",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["needle",{"_index":453,"title":{},"body":{"index.html":{}}}],["needlevalue1",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["needlevalue2",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["needlevalue3",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["needlevalue4",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["needlevalue5",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["negative",{"_index":344,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["new",{"_index":286,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{}}}],["newx1",{"_index":318,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["newy1",{"_index":322,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["ng",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["node",{"_index":239,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["null",{"_index":480,"title":{},"body":{"index.html":{}}}],["number",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["numbers",{"_index":300,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["object",{"_index":500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":206,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["orange",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":490,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":424,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["param",{"_index":297,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["parameters",{"_index":205,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["parts",{"_index":457,"title":{},"body":{"index.html":{}}}],["path.gauge.arcs.background",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["path.gauge.arcs.background.martin",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["percentage",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["pixels",{"_index":348,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["polygon",{"_index":232,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["polyline",{"_index":231,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["private",{"_index":193,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["production",{"_index":501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":484,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"properties.html":{}}}],["providers",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["radius",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["range",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ranges1",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["ranges2",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["ranges3",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["ranges4",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["ranges5",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["ratiohw",{"_index":279,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["ratiowh",{"_index":278,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["rect",{"_index":226,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["rect.x2",{"_index":339,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["rect.y1",{"_index":338,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["rect.y2",{"_index":340,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["rectangle",{"_index":277,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{}}}],["rectangle(this.x1",{"_index":335,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["red",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["remain",{"_index":361,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["remaining",{"_index":372,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["remains",{"_index":383,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["request",{"_index":254,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["require",{"_index":421,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resizes",{"_index":292,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["results",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":244,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["returns",{"_index":210,"title":{},"body":{"classes/Dimensions.html":{},"classes/SVGFactory.html":{}}}],["rgba(0",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["row",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":362,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["sans",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["scalable",{"_index":447,"title":{},"body":{"index.html":{}}}],["scaleheight(factor",{"_index":312,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["scalewidth(factor",{"_index":309,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["schema",{"_index":470,"title":{},"body":{"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["self",{"_index":374,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["serif",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["set",{"_index":260,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["setdimensions(dim",{"_index":325,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["seth(v",{"_index":218,"title":{},"body":{"classes/Dimensions.html":{}}}],["setheight(h",{"_index":324,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["setw(v",{"_index":222,"title":{},"body":{"classes/Dimensions.html":{}}}],["setwidth(w",{"_index":316,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["setwidthheight(w",{"_index":328,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shadow",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["shrink",{"_index":349,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinkandmove(movex1",{"_index":386,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinkfromtopleft(shrinkwidthby",{"_index":353,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinkheightby",{"_index":351,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinktoheight",{"_index":371,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinktoheightfrombottom(shrinktoheight",{"_index":375,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinkwidthby",{"_index":347,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrunk",{"_index":379,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["sides",{"_index":381,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["similar",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["size:10pt",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["smaller",{"_index":301,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["solid",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["spec\\.ts",{"_index":498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../s",{"_index":441,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:9",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/s",{"_index":189,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/vu",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":414,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":418,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":419,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":443,"title":{"index.html":{}},"body":{}}],["statements",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":234,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["string",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"classes/SVGFactory.html":{}}}],["stroke",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["stroke:white",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["styling",{"_index":466,"title":{},"body":{"index.html":{}}}],["supplied",{"_index":346,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["support",{"_index":488,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":215,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["svg.nativeelement.getboundingclientrect",{"_index":265,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgbbox",{"_index":264,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgbbox.height",{"_index":267,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype",{"_index":225,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["svgelementtype.circle",{"_index":246,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.group",{"_index":250,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.line",{"_index":247,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.polygon",{"_index":252,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.polyline",{"_index":251,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.rect",{"_index":248,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.svg",{"_index":243,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.text",{"_index":249,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgfactory",{"_index":233,"title":{"classes/SVGFactory.html":{}},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{}}}],["svgns",{"_index":235,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["switch",{"_index":241,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["syntax",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["table",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["text",{"_index":230,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["text.gauge.label",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["text.gauge.marker.text",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dimensions",{"_index":285,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.dimensions.h",{"_index":333,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.dimensions.w",{"_index":332,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.growfromtopleft",{"_index":354,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.h",{"_index":313,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.height",{"_index":258,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.internalupdate",{"_index":290,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.ranges1[0",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ranges2[0",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ranges4[0",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ranges5[0",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ratiohw",{"_index":281,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.ratiowh",{"_index":282,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.scaleheight(factor).movebyfactorvertical(factor",{"_index":307,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.scalewidth(factor).movebyfactorhorizontal(factor",{"_index":305,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setheight(dim.h",{"_index":326,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setheight(h",{"_index":330,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setheight(v",{"_index":393,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setwidth(dim.w",{"_index":327,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setwidth(v",{"_index":392,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setwidth(w",{"_index":329,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.shrinkfromtopleft(shrinkwidthby",{"_index":387,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.update(rect.x1",{"_index":337,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.update(svgbbox.width",{"_index":266,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.update(w",{"_index":259,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.update(x1",{"_index":288,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.w",{"_index":310,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.width",{"_index":257,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.x1",{"_index":274,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.x2",{"_index":283,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.y1",{"_index":276,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.y2",{"_index":284,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["title",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":367,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["top/bottom/sides",{"_index":473,"title":{},"body":{"index.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{}}}],["true",{"_index":497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":240,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["update",{"_index":197,"title":{},"body":{"classes/Dimensions.html":{}}}],["update(w",{"_index":208,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["update(x1",{"_index":289,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["updatefromrect(rect",{"_index":336,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["updatefromsvgelement",{"_index":198,"title":{},"body":{"classes/Dimensions.html":{}}}],["updatefromsvgelement(svg",{"_index":212,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["use",{"_index":299,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["using",{"_index":446,"title":{},"body":{"index.html":{}}}],["v",{"_index":190,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["value",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":345,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["var",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["variable",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":492,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vector",{"_index":448,"title":{},"body":{"index.html":{}}}],["version",{"_index":486,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":311,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["vertically",{"_index":352,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["void",{"_index":211,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["vu",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{}}}],["vumetercomponent",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["w",{"_index":201,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["w(v",{"_index":262,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["way",{"_index":378,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["webkit",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["weight",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":195,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["wrap",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["x1",{"_index":269,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x1(v",{"_index":388,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x1,y1",{"_index":360,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x2",{"_index":271,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x2(v",{"_index":389,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x2,y2",{"_index":357,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["y1",{"_index":270,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["y1(v",{"_index":390,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["y2",{"_index":272,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["y2(v",{"_index":391,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["zero",{"_index":302,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["zone.js",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colors1\n                            \n                            \n                                colors2\n                            \n                            \n                                colors3\n                            \n                            \n                                colors4\n                            \n                            \n                                colors5\n                            \n                            \n                                    Public\n                                needleValue1\n                            \n                            \n                                    Public\n                                needleValue2\n                            \n                            \n                                    Public\n                                needleValue3\n                            \n                            \n                                    Public\n                                needleValue4\n                            \n                            \n                                    Public\n                                needleValue5\n                            \n                            \n                                ranges1\n                            \n                            \n                                ranges2\n                            \n                            \n                                ranges3\n                            \n                            \n                                ranges4\n                            \n                            \n                                ranges5\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colors1\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['green', 'orange', 'red']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colors2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['green', 'orange', 'red', 'blue']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colors3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['green', 'orange', 'red', 'darkred']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colors4\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['green', 'orange', 'red', 'darkred']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colors5\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['green', 'orange', 'red', 'darkred']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        needleValue1\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.ranges1[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        needleValue2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.ranges2[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        needleValue3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        needleValue4\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.ranges4[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        needleValue5\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.ranges5[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranges1\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [0, 2, 4, 5]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranges2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [-100, -80, -20, 0, 15]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranges3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [7,10,20,30,40]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranges4\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [0, 10, 20, 30, 50]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranges5\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [0, 10, 20, 30, 50]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'gauge'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'gauge';\n  ranges1 = [0, 2, 4, 5];\n  colors1 = ['green', 'orange', 'red'];\n\n  ranges2 = [-100, -80, -20, 0, 15];\n  colors2 = ['green', 'orange', 'red', 'blue'];\n\n  ranges3 = [7,10,20,30,40];\n  colors3 = ['green', 'orange', 'red', 'darkred'];\n\n  ranges4 = [0, 10, 20, 30, 50];\n  colors4 = ['green', 'orange', 'red', 'darkred'];\n\n  ranges5 = [0, 10, 20, 30, 50];\n  colors5 = ['green', 'orange', 'red', 'darkred'];\n\n  public needleValue1 = this.ranges1[0];\n  public needleValue2 = this.ranges2[0];\n  public needleValue3 = 50; // this range is a percentage input\n  public needleValue4 = this.ranges4[0];\n  public needleValue5 = this.ranges5[0];\n}\n\n    \n\n    \n        \n\n  \n  \n  \n  \n  \n\nValue for graph 1: \nValue for graph 2: \nValue for graph 3: %\nValue for graph 4: \nValue for graph 5: \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .container {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\napp-vu-meter + app-vu-meter {\n  margin-left: 20px;\n}\n\n.shadow {\n  -webkit-filter: drop-shadow( 3px 3px 2px rgba(0, 0, 0, .7));\n  filter: drop-shadow( 3px 3px 2px rgba(0, 0, 0, .7));\n  /* Similar syntax to box-shadow */\n}\n\n::ng-deep text.gauge.label {\n  font-family: sans-serif;\n  font-size:10pt;\n  font-weight: bold;\n}\n:host ::ng-deep path.gauge.arcs.background.martin {\n  fill: antiquewhite;\n}\n:host ::ng-deep path.gauge.arcs.background {\n  fill: lightgray;\n  stroke:white;\n}\n\n:host ::ng-deep .gauge.needle.pointer.martin {\n  fill: black;\n  stroke: black;\n}\n\n:host ::ng-deep .circle.gauge.needle.martin  {\n  fill: black;\n  stroke: black;\n}\n\n\n:host ::ng-deep article.gauge {\n  border: 1px solid black;\n  padding: 4px;\n}\n\n\n\n:host ::ng-deep article.gauge.martin {\n  border: 1px solid darkgray;\n  box-shadow: 4px 4px 4px gray;\n  border-radius: 5px;\n}\n\n:host ::ng-deep text.gauge.marker.text {\n  font-family: sans-serif;\n  font-size: 8pt;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Value for graph 1: Value for graph 2: Value for graph 3: %Value for graph 4: Value for graph 5: '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'VuMeterComponent', 'selector': 'app-vu-meter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nVuMeterComponent\n\nVuMeterComponent\n\nAppModule -->\n\nVuMeterComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            VuMeterComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { VuMeterComponent } from './vu-meter/vu-meter.component';\nimport {FormsModule} from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    VuMeterComponent\n  ],\n    imports: [\n        BrowserModule,\n        FormsModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Dimensions.html":{"url":"classes/Dimensions.html","title":"class - Dimensions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Dimensions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/s-v-g-factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                Height\n                            \n                            \n                                    Private\n                                Width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                            \n                                updateFromSVGElement\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    h\n                                \n                                \n                                    w\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(w: number, h: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/s-v-g-factory.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        w\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        h\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        Height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        Width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:47\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(w: number, h: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/s-v-g-factory.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    w\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    h\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFromSVGElement\n                        \n                    \n                \n            \n            \n                \nupdateFromSVGElement(svg: ElementRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/s-v-g-factory.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    svg\n                                    \n                                                ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Dimensions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        h\n                    \n                \n\n                \n                    \n                        geth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:56\n                                \n                            \n\n                \n                    \n                        seth(v: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:57\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        w\n                    \n                \n\n                \n                    \n                        getw()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:58\n                                \n                            \n\n                \n                    \n                        setw(v: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:59\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {ElementRef} from '@angular/core';\n\nexport enum SVGElementType {\n  SVG,\n  Rect,\n  Circle,\n  Line,\n  Group,\n  Text,\n  Polyline,\n  Polygon\n}\n\n\nexport class SVGFactory {\n  private static svgNS = 'http://www.w3.org/2000/svg';\n\n  public static createElement(type: SVGElementType, ...args: any[]): Node | undefined {\n    switch (type) {\n      case SVGElementType.SVG:\n        return document.createElementNS(this.svgNS, 'svg');\n      case SVGElementType.Circle:\n        return document.createElementNS(this.svgNS, 'circle');\n      case SVGElementType.Line:\n        return document.createElementNS(this.svgNS, 'line');\n      case SVGElementType.Rect:\n        return document.createElementNS(this.svgNS, 'rect');\n      case SVGElementType.Text:\n        return document.createElementNS(this.svgNS, 'text');\n      case SVGElementType.Group:\n        return document.createElementNS(this.svgNS, 'g');\n      case SVGElementType.Polyline:\n        return document.createElementNS(this.svgNS, 'polyline');\n      case SVGElementType.Polygon:\n        return document.createElementNS(this.svgNS, 'polygon');\n      default:\n        console.error('#Error request SVG Factory type');\n        break;\n    }\n    return undefined;\n  }\n\n}\n\n\nexport class Dimensions {\n  private Width: number;\n  private Height: number;\n\n  constructor(w: number, h: number) {\n    this.Width = 0;\n    this.Height = 0;\n    this.update(w, h);\n  }\n\n  get h(): number  { return this.Height; }\n  set h(v: number) { this.Height = v; }\n  get w(): number  { return this.Width; }\n  set w(v: number) { this.Width = v; }\n\n  update(w: number, h: number): void {\n    this.Width  = w;\n    this.Height = h;\n  }\n\n  updateFromSVGElement(svg: ElementRef): Dimensions {\n    const svgBBox = svg.nativeElement.getBoundingClientRect();\n    this.update(svgBBox.width, svgBBox.height);\n    return this;\n  }\n}\n\nexport class Line {\n  constructor(public x1: number, public y1: number, public x2: number, public y2: number) {\n  }\n\n  get w(): number {\n    return Math.abs(this.x2 - this.x1);\n  }\n\n  get h(): number {\n    return Math.abs(this.y2 - this.y1);\n  }\n}\n\nexport class Rectangle {\n  public dimensions: Dimensions;\n  public ratioWH: number;\n  public ratioHW: number;\n  public X1: number;\n  public X2: number;\n  public Y1: number;\n  public Y2: number;\n\n  constructor(x1: number, y1: number, x2: number, y2: number) {\n    this.ratioHW = 0;\n    this.ratioWH = 0;\n    this.X1 = 0;\n    this.X2 = 0;\n    this.Y1 = 0;\n    this.Y2 = 0;\n    this.dimensions = new Dimensions(0, 0);\n    this.update(x1, y1, x2, y2);\n  }\n\n  update(x1: number, y1: number, x2: number, y2: number): Rectangle {\n    this.X1 = x1;\n    this.X2 = x2;\n    this.Y1 = y1;\n    this.Y2 = y2;\n    this.internalUpdate();\n    return this;\n  }\n\n  /**\n   * First resizes, then moves by a given factor in the horizontal direction\n   * @param factor  a multiplication factor (so use numbers smaller than zero for division)\n   */\n  moveAndScaleHorizontal(factor: number): Rectangle {\n    this.scaleWidth(factor).moveByFactorHorizontal(factor);\n    return this;\n  }\n\n  moveAndScaleVertical(factor: number): Rectangle {\n    this.scaleHeight(factor).moveByFactorVertical(factor);\n    return this;\n  }\n\n  /**\n   * Resizes by a certain factor in the horizontal direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleWidth(factor: number): Rectangle {\n    this.w *= factor;\n    return this;\n  }\n\n  /**\n   * Resizes by a given factor in the vertical direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleHeight(factor: number): Rectangle {\n    this.h *= factor;\n    return this;\n  }\n\n  moveByFactorHorizontal(factor: number): Rectangle {\n    this.X1 *= factor;\n    this.X2 = this.X1 + this.w;\n    return this;\n  }\n\n  moveByFactorVertical(factor: number): Rectangle {\n    this.Y1 *= factor;\n    this.Y2 += this.Y1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  setWidth(w: number): Rectangle {\n    this.X2 = this.X1 + w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteHorizontal(newX1: number): Rectangle {\n    this.X1 = newX1;\n    this.X2 = this.X1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaHorizontal(delta: number): Rectangle {\n    this.X1 += delta;\n    this.X2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteVertical(newY1: number): Rectangle {\n    this.Y1 = newY1;\n    this.Y2 += this.h;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaVertical(delta: number): Rectangle {\n    this.Y1 += delta;\n    this.Y2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  setHeight(h: number): Rectangle {\n    this.Y2 = this.Y1 + h;\n    this.internalUpdate();\n    return this;\n  }\n\n  setDimensions(dim: Dimensions): Rectangle {\n    this.setHeight(dim.h);\n    this.setWidth(dim.w);\n    return this;\n  }\n\n  setWidthHeight(w: number, h: number): Rectangle {\n    this.setWidth(w);\n    this.setHeight(h);\n    return this;\n  }\n\n  private internalUpdate(): void {\n    this.dimensions.w = Math.abs(this.x2 - this.x1);\n    this.dimensions.h = Math.abs(this.y2 - this.y1);\n\n    this.ratioWH = this.dimensions.w / this.dimensions.h;\n    this.ratioHW = this.dimensions.h / this.dimensions.w;\n  }\n\n  clone(): Rectangle {\n    return new Rectangle(this.x1, this.y1, this.x2, this.y2);\n  }\n\n  updateFromRect(rect: Rectangle): Rectangle {\n    this.update(rect.x1, rect.y1, rect.x2, rect.y2);\n    return this;\n  }\n\n  /**\n   * Convenience method to growFromTopLeft so no negative values have to be supplied\n   * @param shrinkWidthBy number of pixels to shrink horizontally\n   * @param shrinkHeightBy number of pixels to shrink vertically\n   */\n  shrinkFromTopLeft(shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.growFromTopLeft(-shrinkWidthBy, -shrinkHeightBy);\n    return this;\n  }\n\n  /**\n   * Will increase the size of the rectangle by moving the (x2,y2) coordinates with a given amount.\n   * (x1,y1) will remain the same\n   * @param growWidthBy number of pixels to grow horizontally\n   * @param growHeightBy number of pixels to grow vertically\n   */\n  growFromTopLeft(growWidthBy: number, growHeightBy: number): Rectangle {\n    this.w += growWidthBy;\n    this.h += growHeightBy;\n    return this;\n  }\n\n  /**\n   * Moves the top of the rectangle down so that the Y2-coordinate will remain the same, and the height is adjusted\n   * @param shrinkToHeight remaining height after call\n   * @return self\n   */\n  shrinkToHeightFromBottom(shrinkToHeight: number): Rectangle {\n    this.y1 = this.y2 - shrinkToHeight;\n    return this;\n  }\n\n  /**\n   * Will shrink the rectangle by a given amount and move it to a certain location. This way a\n   * rectangle can be shrunk on four sides while the center remains the same.\n   * @param moveX1 delta value to move x1-coordinate\n   * @param moveY1 delta value to move y1-coordinate\n   * @param shrinkWidthBy delta value to shrink the width\n   * @param shrinkHeightBy delta value to shrink the height\n   */\n  shrinkAndMove(moveX1: number, moveY1: number, shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.X1 += moveX1;\n    this.Y1 += moveY1;\n    this.internalUpdate();\n\n    this.shrinkFromTopLeft(shrinkWidthBy , shrinkHeightBy );\n    return this;\n  }\n\n  set x1(v: number) { this.X1 = v; this.internalUpdate(); }\n  get x1(): number  { return this.X1; }\n  set x2(v: number) { this.X2 = v; this.internalUpdate(); }\n  get x2(): number  { return this.X2; }\n  set y1(v: number) { this.Y1 = v; this.internalUpdate(); }\n  get y1(): number  { return this.Y1; }\n  set y2(v: number) { this.Y2 = v; this.internalUpdate(); }\n  get y2(): number  { return this.Y2; }\n\n  get w(): number  { return this.dimensions.w; }\n  set w(v: number) { this.setWidth(v); }\n  get h(): number  { return this.dimensions.h; }\n  set h(v: number) { this.setHeight(v); }\n\n}// Rectangle\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Line.html":{"url":"classes/Line.html","title":"class - Line","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Line\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/s-v-g-factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                x1\n                            \n                            \n                                    Public\n                                x2\n                            \n                            \n                                    Public\n                                y1\n                            \n                            \n                                    Public\n                                y2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    w\n                                \n                                \n                                    h\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(x1: number, y1: number, x2: number, y2: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/s-v-g-factory.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        x1\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        y1\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        x2\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        y2\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        x1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        x2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        y1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        y2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        w\n                    \n                \n\n                \n                    \n                        getw()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:77\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        h\n                    \n                \n\n                \n                    \n                        geth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:81\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {ElementRef} from '@angular/core';\n\nexport enum SVGElementType {\n  SVG,\n  Rect,\n  Circle,\n  Line,\n  Group,\n  Text,\n  Polyline,\n  Polygon\n}\n\n\nexport class SVGFactory {\n  private static svgNS = 'http://www.w3.org/2000/svg';\n\n  public static createElement(type: SVGElementType, ...args: any[]): Node | undefined {\n    switch (type) {\n      case SVGElementType.SVG:\n        return document.createElementNS(this.svgNS, 'svg');\n      case SVGElementType.Circle:\n        return document.createElementNS(this.svgNS, 'circle');\n      case SVGElementType.Line:\n        return document.createElementNS(this.svgNS, 'line');\n      case SVGElementType.Rect:\n        return document.createElementNS(this.svgNS, 'rect');\n      case SVGElementType.Text:\n        return document.createElementNS(this.svgNS, 'text');\n      case SVGElementType.Group:\n        return document.createElementNS(this.svgNS, 'g');\n      case SVGElementType.Polyline:\n        return document.createElementNS(this.svgNS, 'polyline');\n      case SVGElementType.Polygon:\n        return document.createElementNS(this.svgNS, 'polygon');\n      default:\n        console.error('#Error request SVG Factory type');\n        break;\n    }\n    return undefined;\n  }\n\n}\n\n\nexport class Dimensions {\n  private Width: number;\n  private Height: number;\n\n  constructor(w: number, h: number) {\n    this.Width = 0;\n    this.Height = 0;\n    this.update(w, h);\n  }\n\n  get h(): number  { return this.Height; }\n  set h(v: number) { this.Height = v; }\n  get w(): number  { return this.Width; }\n  set w(v: number) { this.Width = v; }\n\n  update(w: number, h: number): void {\n    this.Width  = w;\n    this.Height = h;\n  }\n\n  updateFromSVGElement(svg: ElementRef): Dimensions {\n    const svgBBox = svg.nativeElement.getBoundingClientRect();\n    this.update(svgBBox.width, svgBBox.height);\n    return this;\n  }\n}\n\nexport class Line {\n  constructor(public x1: number, public y1: number, public x2: number, public y2: number) {\n  }\n\n  get w(): number {\n    return Math.abs(this.x2 - this.x1);\n  }\n\n  get h(): number {\n    return Math.abs(this.y2 - this.y1);\n  }\n}\n\nexport class Rectangle {\n  public dimensions: Dimensions;\n  public ratioWH: number;\n  public ratioHW: number;\n  public X1: number;\n  public X2: number;\n  public Y1: number;\n  public Y2: number;\n\n  constructor(x1: number, y1: number, x2: number, y2: number) {\n    this.ratioHW = 0;\n    this.ratioWH = 0;\n    this.X1 = 0;\n    this.X2 = 0;\n    this.Y1 = 0;\n    this.Y2 = 0;\n    this.dimensions = new Dimensions(0, 0);\n    this.update(x1, y1, x2, y2);\n  }\n\n  update(x1: number, y1: number, x2: number, y2: number): Rectangle {\n    this.X1 = x1;\n    this.X2 = x2;\n    this.Y1 = y1;\n    this.Y2 = y2;\n    this.internalUpdate();\n    return this;\n  }\n\n  /**\n   * First resizes, then moves by a given factor in the horizontal direction\n   * @param factor  a multiplication factor (so use numbers smaller than zero for division)\n   */\n  moveAndScaleHorizontal(factor: number): Rectangle {\n    this.scaleWidth(factor).moveByFactorHorizontal(factor);\n    return this;\n  }\n\n  moveAndScaleVertical(factor: number): Rectangle {\n    this.scaleHeight(factor).moveByFactorVertical(factor);\n    return this;\n  }\n\n  /**\n   * Resizes by a certain factor in the horizontal direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleWidth(factor: number): Rectangle {\n    this.w *= factor;\n    return this;\n  }\n\n  /**\n   * Resizes by a given factor in the vertical direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleHeight(factor: number): Rectangle {\n    this.h *= factor;\n    return this;\n  }\n\n  moveByFactorHorizontal(factor: number): Rectangle {\n    this.X1 *= factor;\n    this.X2 = this.X1 + this.w;\n    return this;\n  }\n\n  moveByFactorVertical(factor: number): Rectangle {\n    this.Y1 *= factor;\n    this.Y2 += this.Y1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  setWidth(w: number): Rectangle {\n    this.X2 = this.X1 + w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteHorizontal(newX1: number): Rectangle {\n    this.X1 = newX1;\n    this.X2 = this.X1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaHorizontal(delta: number): Rectangle {\n    this.X1 += delta;\n    this.X2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteVertical(newY1: number): Rectangle {\n    this.Y1 = newY1;\n    this.Y2 += this.h;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaVertical(delta: number): Rectangle {\n    this.Y1 += delta;\n    this.Y2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  setHeight(h: number): Rectangle {\n    this.Y2 = this.Y1 + h;\n    this.internalUpdate();\n    return this;\n  }\n\n  setDimensions(dim: Dimensions): Rectangle {\n    this.setHeight(dim.h);\n    this.setWidth(dim.w);\n    return this;\n  }\n\n  setWidthHeight(w: number, h: number): Rectangle {\n    this.setWidth(w);\n    this.setHeight(h);\n    return this;\n  }\n\n  private internalUpdate(): void {\n    this.dimensions.w = Math.abs(this.x2 - this.x1);\n    this.dimensions.h = Math.abs(this.y2 - this.y1);\n\n    this.ratioWH = this.dimensions.w / this.dimensions.h;\n    this.ratioHW = this.dimensions.h / this.dimensions.w;\n  }\n\n  clone(): Rectangle {\n    return new Rectangle(this.x1, this.y1, this.x2, this.y2);\n  }\n\n  updateFromRect(rect: Rectangle): Rectangle {\n    this.update(rect.x1, rect.y1, rect.x2, rect.y2);\n    return this;\n  }\n\n  /**\n   * Convenience method to growFromTopLeft so no negative values have to be supplied\n   * @param shrinkWidthBy number of pixels to shrink horizontally\n   * @param shrinkHeightBy number of pixels to shrink vertically\n   */\n  shrinkFromTopLeft(shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.growFromTopLeft(-shrinkWidthBy, -shrinkHeightBy);\n    return this;\n  }\n\n  /**\n   * Will increase the size of the rectangle by moving the (x2,y2) coordinates with a given amount.\n   * (x1,y1) will remain the same\n   * @param growWidthBy number of pixels to grow horizontally\n   * @param growHeightBy number of pixels to grow vertically\n   */\n  growFromTopLeft(growWidthBy: number, growHeightBy: number): Rectangle {\n    this.w += growWidthBy;\n    this.h += growHeightBy;\n    return this;\n  }\n\n  /**\n   * Moves the top of the rectangle down so that the Y2-coordinate will remain the same, and the height is adjusted\n   * @param shrinkToHeight remaining height after call\n   * @return self\n   */\n  shrinkToHeightFromBottom(shrinkToHeight: number): Rectangle {\n    this.y1 = this.y2 - shrinkToHeight;\n    return this;\n  }\n\n  /**\n   * Will shrink the rectangle by a given amount and move it to a certain location. This way a\n   * rectangle can be shrunk on four sides while the center remains the same.\n   * @param moveX1 delta value to move x1-coordinate\n   * @param moveY1 delta value to move y1-coordinate\n   * @param shrinkWidthBy delta value to shrink the width\n   * @param shrinkHeightBy delta value to shrink the height\n   */\n  shrinkAndMove(moveX1: number, moveY1: number, shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.X1 += moveX1;\n    this.Y1 += moveY1;\n    this.internalUpdate();\n\n    this.shrinkFromTopLeft(shrinkWidthBy , shrinkHeightBy );\n    return this;\n  }\n\n  set x1(v: number) { this.X1 = v; this.internalUpdate(); }\n  get x1(): number  { return this.X1; }\n  set x2(v: number) { this.X2 = v; this.internalUpdate(); }\n  get x2(): number  { return this.X2; }\n  set y1(v: number) { this.Y1 = v; this.internalUpdate(); }\n  get y1(): number  { return this.Y1; }\n  set y2(v: number) { this.Y2 = v; this.internalUpdate(); }\n  get y2(): number  { return this.Y2; }\n\n  get w(): number  { return this.dimensions.w; }\n  set w(v: number) { this.setWidth(v); }\n  get h(): number  { return this.dimensions.h; }\n  set h(v: number) { this.setHeight(v); }\n\n}// Rectangle\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SVGFactory.html":{"url":"classes/SVGFactory.html","title":"class - SVGFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SVGFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/s-v-g-factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                svgNS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        svgNS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://www.w3.org/2000/svg'\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    createElement(type: SVGElementType, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/s-v-g-factory.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                SVGElementType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Node | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ElementRef} from '@angular/core';\n\nexport enum SVGElementType {\n  SVG,\n  Rect,\n  Circle,\n  Line,\n  Group,\n  Text,\n  Polyline,\n  Polygon\n}\n\n\nexport class SVGFactory {\n  private static svgNS = 'http://www.w3.org/2000/svg';\n\n  public static createElement(type: SVGElementType, ...args: any[]): Node | undefined {\n    switch (type) {\n      case SVGElementType.SVG:\n        return document.createElementNS(this.svgNS, 'svg');\n      case SVGElementType.Circle:\n        return document.createElementNS(this.svgNS, 'circle');\n      case SVGElementType.Line:\n        return document.createElementNS(this.svgNS, 'line');\n      case SVGElementType.Rect:\n        return document.createElementNS(this.svgNS, 'rect');\n      case SVGElementType.Text:\n        return document.createElementNS(this.svgNS, 'text');\n      case SVGElementType.Group:\n        return document.createElementNS(this.svgNS, 'g');\n      case SVGElementType.Polyline:\n        return document.createElementNS(this.svgNS, 'polyline');\n      case SVGElementType.Polygon:\n        return document.createElementNS(this.svgNS, 'polygon');\n      default:\n        console.error('#Error request SVG Factory type');\n        break;\n    }\n    return undefined;\n  }\n\n}\n\n\nexport class Dimensions {\n  private Width: number;\n  private Height: number;\n\n  constructor(w: number, h: number) {\n    this.Width = 0;\n    this.Height = 0;\n    this.update(w, h);\n  }\n\n  get h(): number  { return this.Height; }\n  set h(v: number) { this.Height = v; }\n  get w(): number  { return this.Width; }\n  set w(v: number) { this.Width = v; }\n\n  update(w: number, h: number): void {\n    this.Width  = w;\n    this.Height = h;\n  }\n\n  updateFromSVGElement(svg: ElementRef): Dimensions {\n    const svgBBox = svg.nativeElement.getBoundingClientRect();\n    this.update(svgBBox.width, svgBBox.height);\n    return this;\n  }\n}\n\nexport class Line {\n  constructor(public x1: number, public y1: number, public x2: number, public y2: number) {\n  }\n\n  get w(): number {\n    return Math.abs(this.x2 - this.x1);\n  }\n\n  get h(): number {\n    return Math.abs(this.y2 - this.y1);\n  }\n}\n\nexport class Rectangle {\n  public dimensions: Dimensions;\n  public ratioWH: number;\n  public ratioHW: number;\n  public X1: number;\n  public X2: number;\n  public Y1: number;\n  public Y2: number;\n\n  constructor(x1: number, y1: number, x2: number, y2: number) {\n    this.ratioHW = 0;\n    this.ratioWH = 0;\n    this.X1 = 0;\n    this.X2 = 0;\n    this.Y1 = 0;\n    this.Y2 = 0;\n    this.dimensions = new Dimensions(0, 0);\n    this.update(x1, y1, x2, y2);\n  }\n\n  update(x1: number, y1: number, x2: number, y2: number): Rectangle {\n    this.X1 = x1;\n    this.X2 = x2;\n    this.Y1 = y1;\n    this.Y2 = y2;\n    this.internalUpdate();\n    return this;\n  }\n\n  /**\n   * First resizes, then moves by a given factor in the horizontal direction\n   * @param factor  a multiplication factor (so use numbers smaller than zero for division)\n   */\n  moveAndScaleHorizontal(factor: number): Rectangle {\n    this.scaleWidth(factor).moveByFactorHorizontal(factor);\n    return this;\n  }\n\n  moveAndScaleVertical(factor: number): Rectangle {\n    this.scaleHeight(factor).moveByFactorVertical(factor);\n    return this;\n  }\n\n  /**\n   * Resizes by a certain factor in the horizontal direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleWidth(factor: number): Rectangle {\n    this.w *= factor;\n    return this;\n  }\n\n  /**\n   * Resizes by a given factor in the vertical direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleHeight(factor: number): Rectangle {\n    this.h *= factor;\n    return this;\n  }\n\n  moveByFactorHorizontal(factor: number): Rectangle {\n    this.X1 *= factor;\n    this.X2 = this.X1 + this.w;\n    return this;\n  }\n\n  moveByFactorVertical(factor: number): Rectangle {\n    this.Y1 *= factor;\n    this.Y2 += this.Y1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  setWidth(w: number): Rectangle {\n    this.X2 = this.X1 + w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteHorizontal(newX1: number): Rectangle {\n    this.X1 = newX1;\n    this.X2 = this.X1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaHorizontal(delta: number): Rectangle {\n    this.X1 += delta;\n    this.X2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteVertical(newY1: number): Rectangle {\n    this.Y1 = newY1;\n    this.Y2 += this.h;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaVertical(delta: number): Rectangle {\n    this.Y1 += delta;\n    this.Y2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  setHeight(h: number): Rectangle {\n    this.Y2 = this.Y1 + h;\n    this.internalUpdate();\n    return this;\n  }\n\n  setDimensions(dim: Dimensions): Rectangle {\n    this.setHeight(dim.h);\n    this.setWidth(dim.w);\n    return this;\n  }\n\n  setWidthHeight(w: number, h: number): Rectangle {\n    this.setWidth(w);\n    this.setHeight(h);\n    return this;\n  }\n\n  private internalUpdate(): void {\n    this.dimensions.w = Math.abs(this.x2 - this.x1);\n    this.dimensions.h = Math.abs(this.y2 - this.y1);\n\n    this.ratioWH = this.dimensions.w / this.dimensions.h;\n    this.ratioHW = this.dimensions.h / this.dimensions.w;\n  }\n\n  clone(): Rectangle {\n    return new Rectangle(this.x1, this.y1, this.x2, this.y2);\n  }\n\n  updateFromRect(rect: Rectangle): Rectangle {\n    this.update(rect.x1, rect.y1, rect.x2, rect.y2);\n    return this;\n  }\n\n  /**\n   * Convenience method to growFromTopLeft so no negative values have to be supplied\n   * @param shrinkWidthBy number of pixels to shrink horizontally\n   * @param shrinkHeightBy number of pixels to shrink vertically\n   */\n  shrinkFromTopLeft(shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.growFromTopLeft(-shrinkWidthBy, -shrinkHeightBy);\n    return this;\n  }\n\n  /**\n   * Will increase the size of the rectangle by moving the (x2,y2) coordinates with a given amount.\n   * (x1,y1) will remain the same\n   * @param growWidthBy number of pixels to grow horizontally\n   * @param growHeightBy number of pixels to grow vertically\n   */\n  growFromTopLeft(growWidthBy: number, growHeightBy: number): Rectangle {\n    this.w += growWidthBy;\n    this.h += growHeightBy;\n    return this;\n  }\n\n  /**\n   * Moves the top of the rectangle down so that the Y2-coordinate will remain the same, and the height is adjusted\n   * @param shrinkToHeight remaining height after call\n   * @return self\n   */\n  shrinkToHeightFromBottom(shrinkToHeight: number): Rectangle {\n    this.y1 = this.y2 - shrinkToHeight;\n    return this;\n  }\n\n  /**\n   * Will shrink the rectangle by a given amount and move it to a certain location. This way a\n   * rectangle can be shrunk on four sides while the center remains the same.\n   * @param moveX1 delta value to move x1-coordinate\n   * @param moveY1 delta value to move y1-coordinate\n   * @param shrinkWidthBy delta value to shrink the width\n   * @param shrinkHeightBy delta value to shrink the height\n   */\n  shrinkAndMove(moveX1: number, moveY1: number, shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.X1 += moveX1;\n    this.Y1 += moveY1;\n    this.internalUpdate();\n\n    this.shrinkFromTopLeft(shrinkWidthBy , shrinkHeightBy );\n    return this;\n  }\n\n  set x1(v: number) { this.X1 = v; this.internalUpdate(); }\n  get x1(): number  { return this.X1; }\n  set x2(v: number) { this.X2 = v; this.internalUpdate(); }\n  get x2(): number  { return this.X2; }\n  set y1(v: number) { this.Y1 = v; this.internalUpdate(); }\n  get y1(): number  { return this.Y1; }\n  set y2(v: number) { this.Y2 = v; this.internalUpdate(); }\n  get y2(): number  { return this.Y2; }\n\n  get w(): number  { return this.dimensions.w; }\n  set w(v: number) { this.setWidth(v); }\n  get h(): number  { return this.dimensions.h; }\n  set h(v: number) { this.setHeight(v); }\n\n}// Rectangle\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/classes/s-v-g-factory.ts\n            \n            class\n            Dimensions\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/classes/s-v-g-factory.ts\n            \n            class\n            Line\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/classes/s-v-g-factory.ts\n            \n            class\n            Rectangle\n            \n                22 %\n                (7/31)\n            \n        \n        \n            \n                \n                src/app/classes/s-v-g-factory.ts\n            \n            class\n            SVGFactory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/vu-meter/vu-meter.component.ts\n            \n            component\n            VuMeterComponent\n            \n                56 %\n                (47/83)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.3.0\n        \n            @angular/common : ~13.3.0\n        \n            @angular/compiler : ~13.3.0\n        \n            @angular/core : ~13.3.0\n        \n            @angular/forms : ~13.3.0\n        \n            @angular/platform-browser : ~13.3.0\n        \n            @angular/platform-browser-dynamic : ~13.3.0\n        \n            @angular/router : ~13.3.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SVGElementType   (src/.../s-v-g-factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/classes/s-v-g-factory.ts\n    \n        \n            \n                \n                    \n                        \n                        SVGElementType\n                    \n                \n                        \n                            \n                                 SVG\n                            \n                        \n                        \n                            \n                                 Rect\n                            \n                        \n                        \n                            \n                                 Circle\n                            \n                        \n                        \n                            \n                                 Line\n                            \n                        \n                        \n                            \n                                 Group\n                            \n                        \n                        \n                            \n                                 Text\n                            \n                        \n                        \n                            \n                                 Polyline\n                            \n                        \n                        \n                            \n                                 Polygon\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGaugev13\nThis component builds a Gauge or VU-meter using Scalable Vector Graphics. The current value is indicated\nusing a customisable needle.\n\nFeatures\n\nThe arc of the VU-meter can have multiple parts in different colors.\noptional shadow of needle and arc-parts\ncaption and footer\noptional labels for current value (center) and minimal/maximal values\noptional extra class to direct styling (using :host ::ng-deep)\nneedle will use animation when value is changed (using ease-in-out schema) with customisable delay\noptional margins for top/bottom/sides\nneedle size can be adjusted\nuse percentage between 0 and 100 as a needle value instead of absolute values\nguards against impossible values (null, undefined, out of range)\n\nDocumentation\nDocumentation is generated using Compodoc. \nAngular info\nThis project was generated with Angular CLI version 12.2.17.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nVuMeterComponent\n\nVuMeterComponent\n\nAppModule -->\n\nVuMeterComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.215,1,1]],["body/components/AppComponent.html",[0,1.454,1,1.337,2,1.826,3,0.536,4,0.652,5,1.56,6,1.56,7,1.56,8,1.56,9,0.536,10,1.203,11,1.56,12,3.196,13,3.617,14,2.368,15,2.368,16,2.862,17,2.368,18,2.368,19,0.436,20,0.813,21,2.862,22,2.862,23,2.862,24,2.862,25,2.862,26,2.184,27,2.862,28,2.862,29,2.862,30,2.862,31,2.862,32,2.862,33,2.862,34,2.862,35,2.862,36,2.862,37,2.862,38,1.431,39,0.079,40,1.812,41,1.559,42,4.044,43,4.044,44,4.044,45,2.201,46,1.56,47,2.368,48,1.56,49,3.617,50,1.56,51,1.56,52,1.56,53,2.368,54,1.56,55,2.368,56,1.56,57,0.793,58,3.617,59,1.56,60,2.368,61,1.56,62,2.368,63,1.56,64,1.431,65,2.465,66,2.465,67,3.196,68,1.56,69,1.826,70,2.368,71,3.617,72,2.368,73,1.56,74,2.368,75,1.56,76,3.196,77,3.196,78,1.56,79,1.56,80,1.203,81,2.79,82,1.56,83,0.652,84,0.536,85,0.652,86,0.201,87,1.203,88,1.203,89,1.56,90,4.044,91,2.208,92,2.368,93,1.56,94,1.56,95,2.862,96,0.793,97,1.56,98,2.368,99,1.776,100,2.208,101,1.56,102,1.56,103,1.56,104,2.65,105,1.56,106,2.368,107,2.368,108,3.196,109,2.368,110,2.368,111,2.368,112,1.56,113,1.56,114,3.196,115,1.56,116,2.368,117,2.368,118,3.17,119,3.17,120,3.17,121,1.56,122,3.966,123,1.56,124,3.196,125,1.56,126,1.203,127,1.56,128,1.56,129,1.56,130,1.56,131,1.56,132,1.56,133,1.56,134,1.56,135,1.56,136,1.56,137,1.203,138,0.652,139,1.56,140,1.56,141,3.436,142,1.56,143,2.368,144,1.56,145,2.368,146,2.368,147,1.56,148,1.56,149,2.862,150,2.368,151,2.368,152,1.56,153,3.196,154,1.56,155,1.56,156,1.56,157,1.56,158,1.56,159,1.56,160,1.203,161,1.203,162,1.56,163,2.368,164,1.56,165,1.56,166,1.56,167,0.652,168,1.56,169,1.56,170,2.368,171,2.368,172,1.56,173,3.196,174,1.56,175,1.203,176,1.56,177,0.793,178,1.56,179,1.56,180,0.039,181,0.039]],["title/modules/AppModule.html",[182,1.844,183,1.215]],["body/modules/AppModule.html",[1,1.96,3,1.067,4,1.299,9,1.067,39,0.078,83,1.841,84,1.067,85,1.299,86,0.4,99,1.927,177,2.276,180,0.062,181,0.062,183,2.345,184,1.927,185,1.934,186,2.395,187,2.395,188,2.395,189,2.935,190,2.395,191,1.927,192,3.105,193,3.805,194,3.805,195,3.805,196,3.805,197,2.395,198,1.927,199,3.105,200,2.395,201,3.105,202,3.805,203,2.395,204,3.105,205,3.105]],["title/classes/Dimensions.html",[86,0.308,206,1]],["body/classes/Dimensions.html",[3,0.398,4,0.485,9,0.398,19,0.324,20,0.644,26,1.929,38,1.241,39,0.079,40,0.485,41,0.933,45,1.836,57,2.403,64,1.241,83,0.485,84,0.398,85,1.247,86,0.35,96,1.201,126,1.777,138,0.785,167,0.485,175,1.515,180,0.031,181,0.031,206,1.405,207,0.589,208,1.553,209,1.742,210,1.588,211,0.485,212,2.171,213,1.981,214,1.685,215,1.447,216,1.876,217,1.876,218,1.447,219,2.508,220,2.243,221,0.894,222,1.164,223,1.876,224,1.851,225,1.515,226,1.159,227,1.164,228,1.159,229,2.094,230,1.851,231,1.164,232,1.685,233,1.159,234,1.136,235,0.894,236,1.159,237,1.159,238,1.159,239,0.894,240,1.159,241,1.159,242,1.159,243,0.72,244,0.953,245,0.953,246,0.812,247,0.589,248,0.953,249,0.953,250,0.953,251,0.485,252,1.164,253,0.72,254,0.72,255,0.72,256,0.72,257,0.72,258,0.953,259,0.72,260,2.171,261,0.72,262,2.832,263,2.171,264,0.72,265,0.72,266,0.72,267,0.72,268,0.72,269,0.72,270,0.72,271,0.72,272,0.72,273,0.72,274,0.72,275,1.685,276,1.685,277,0.72,278,1.164,279,1.164,280,0.72,281,0.72,282,0.72,283,0.72,284,0.72,285,0.72,286,1.851,287,2.171,288,2.085,289,2.171,290,1.164,291,2.442,292,1.164,293,2.477,294,2.238,295,0.72,296,0.72,297,0.72,298,1.164,299,1.164,300,2.243,301,2.304,302,0.72,303,0.953,304,0.72,305,0.72,306,0.72,307,2.442,308,0.72,309,1.467,310,1.164,311,1.685,312,2.442,313,1.164,314,2.402,315,1.467,316,1.201,317,1.467,318,1.467,319,1.467,320,1.467,321,0.72,322,0.72,323,0.72,324,0.72,325,1.164,326,0.72,327,1.851,328,0.72,329,0.72,330,1.467,331,0.72,332,0.72,333,0.72,334,0.72,335,0.72,336,0.72,337,2.171,338,0.72,339,0.72,340,0.72,341,0.72,342,0.72,343,0.72,344,0.72,345,0.72,346,0.72,347,0.72,348,0.72,349,1.685,350,1.685,351,0.72,352,0.72,353,0.72,354,0.72,355,0.72,356,0.72,357,0.72,358,0.72,359,0.72,360,0.72,361,0.72,362,0.589,363,0.72,364,1.685,365,1.685,366,1.851,367,1.164,368,1.981,369,1.164,370,0.72,371,0.72,372,0.72,373,0.72,374,0.72,375,0.72,376,1.164,377,0.72,378,1.164,379,1.467,380,1.164,381,1.164,382,1.467,383,0.72,384,0.72,385,0.72,386,1.467,387,0.589,388,1.164,389,0.72,390,0.72,391,0.72,392,0.72,393,1.467,394,0.72,395,0.72,396,0.72,397,0.72,398,0.72,399,0.589,400,0.72,401,1.164,402,1.467,403,0.72,404,0.72,405,0.72,406,0.72,407,0.72,408,0.72,409,0.72,410,0.72]],["title/classes/Line.html",[86,0.308,246,0.821]],["body/classes/Line.html",[3,0.412,4,0.501,9,0.412,19,0.335,20,0.662,26,2.147,38,1.17,39,0.079,40,0.501,41,0.951,45,1.731,57,2.405,64,1.256,83,0.501,84,0.412,85,1.269,86,0.357,96,1.228,126,1.8,138,0.806,167,0.501,175,0.609,180,0.031,181,0.031,206,1.269,207,0.609,208,1.482,209,1.683,210,1.529,211,0.501,212,1.718,213,1.718,214,1.196,218,1.487,219,2.38,220,2.114,221,0.925,222,0.744,224,0.744,225,0.609,227,0.744,230,1.196,231,0.744,232,1.196,234,1.011,235,0.925,239,0.925,243,0.744,244,0.979,245,0.979,246,0.951,247,0.609,248,0.979,249,0.979,250,0.979,251,0.501,252,1.196,253,0.744,254,0.744,255,0.744,256,0.744,257,0.744,258,0.979,259,0.744,260,2.198,261,0.744,262,2.84,263,2.198,264,0.744,265,0.744,266,0.744,267,0.744,268,0.744,269,0.744,270,0.744,271,0.744,272,0.744,273,0.744,274,0.744,275,1.718,276,1.718,277,0.744,278,1.196,279,1.196,280,0.744,281,0.744,282,0.744,283,0.744,284,0.744,285,0.744,286,2.198,287,2.424,288,2.38,289,2.424,290,1.196,291,2.463,292,1.196,293,2.497,294,2.248,295,0.744,296,0.744,297,1.196,298,1.196,299,1.196,300,2.269,301,2.328,302,0.744,303,0.979,304,0.744,305,0.744,306,0.744,307,2.463,308,0.744,309,1.5,310,1.196,311,1.718,312,2.463,313,1.196,314,2.424,315,1.5,316,1.228,317,1.5,318,1.5,319,1.5,320,1.5,321,0.744,322,0.744,323,0.744,324,0.744,325,1.196,326,0.744,327,1.883,328,0.744,329,0.744,330,1.5,331,0.744,332,0.744,333,0.744,334,0.744,335,0.744,336,0.744,337,2.198,338,0.744,339,0.744,340,0.744,341,0.744,342,0.744,343,0.744,344,0.744,345,0.744,346,0.744,347,0.744,348,0.744,349,1.718,350,1.718,351,0.744,352,0.744,353,0.744,354,0.744,355,0.744,356,0.744,357,0.744,358,0.744,359,0.744,360,0.744,361,0.744,362,0.609,363,0.744,364,1.718,365,1.718,366,1.883,367,1.196,368,2.011,369,1.196,370,0.744,371,0.744,372,0.744,373,0.744,374,0.744,375,0.744,376,1.196,377,0.744,378,1.196,379,1.5,380,1.196,381,1.196,382,1.5,383,0.744,384,0.744,385,0.744,386,1.5,387,0.609,388,1.196,389,0.744,390,0.744,391,0.744,392,0.744,393,1.5,394,0.744,395,0.744,396,0.744,397,0.744,398,0.744,399,0.609,400,0.744,401,1.196,402,1.5,403,0.744,404,0.744,405,0.744,406,0.744,407,0.744,408,0.744,409,0.744,410,0.744,411,1.199,412,2.769,413,1.199,414,1.199]],["title/classes/SVGFactory.html",[86,0.308,251,1]],["body/classes/SVGFactory.html",[3,0.427,4,0.52,9,0.427,19,0.347,20,0.682,26,1.969,38,1.061,39,0.079,40,0.83,41,1.061,45,1.008,57,2.394,64,1.271,80,0.959,83,0.52,84,0.427,85,1.292,86,0.364,96,1.258,126,1.824,138,0.83,167,0.52,175,0.632,180,0.032,181,0.032,206,1.292,207,0.632,208,1.036,209,1.548,210,1.182,211,0.52,212,2.044,213,1.755,214,1.232,215,1.53,219,2.296,220,1.917,222,0.772,224,0.772,225,0.632,227,0.772,229,0.959,230,1.232,231,0.772,232,1.232,234,1.036,243,0.772,244,1.436,245,1.008,246,0.851,247,0.632,248,1.008,249,1.008,250,1.008,251,0.83,252,2.044,253,1.537,254,1.232,255,1.232,256,1.537,257,1.232,258,1.258,259,0.772,260,2.228,261,0.772,262,2.849,263,2.228,264,0.772,265,0.772,266,0.772,267,0.772,268,0.772,269,0.772,270,0.772,271,0.772,272,0.772,273,0.772,274,0.772,275,1.755,276,1.755,277,0.772,278,1.232,279,1.232,280,0.772,281,0.772,282,0.772,283,0.772,284,0.772,285,0.772,286,1.917,287,2.228,288,2.145,289,2.228,290,1.232,291,2.485,292,1.232,293,2.519,294,2.259,295,0.772,296,0.772,297,0.772,298,1.232,299,1.232,300,2.296,301,2.355,302,0.772,303,1.008,304,0.772,305,0.772,306,0.772,307,2.485,308,0.772,309,1.537,310,1.232,311,1.755,312,2.485,313,1.232,314,2.448,315,1.537,316,1.258,317,1.537,318,1.537,319,1.537,320,1.537,321,0.772,322,0.772,323,0.772,324,0.772,325,1.232,326,0.772,327,1.917,328,0.772,329,0.772,330,1.537,331,0.772,332,0.772,333,0.772,334,0.772,335,0.772,336,0.772,337,2.228,338,0.772,339,0.772,340,0.772,341,0.772,342,0.772,343,0.772,344,0.772,345,0.772,346,0.772,347,0.772,348,0.772,349,1.755,350,1.755,351,0.772,352,0.772,353,0.772,354,0.772,355,0.772,356,0.772,357,0.772,358,0.772,359,0.772,360,0.772,361,0.772,362,0.632,363,0.772,364,1.755,365,1.755,366,1.917,367,1.232,368,2.044,369,1.232,370,0.772,371,0.772,372,0.772,373,0.772,374,0.772,375,0.772,376,1.232,377,0.772,378,1.232,379,1.537,380,1.232,381,1.232,382,1.537,383,0.772,384,0.772,385,0.772,386,1.537,387,0.632,388,1.232,389,0.772,390,0.772,391,0.772,392,0.772,393,1.537,394,0.772,395,0.772,396,0.772,397,0.772,398,0.772,399,0.632,400,0.772,401,1.232,402,1.537,403,0.772,404,0.772,405,0.772,406,0.772,407,0.772,408,0.772,409,0.772,410,0.772,415,1.984,416,1.243,417,1.243]],["title/coverage.html",[418,2.481]],["body/coverage.html",[0,1.943,1,1.309,9,1.075,10,2.413,38,1.075,39,0.076,64,1.576,86,0.554,177,1.59,180,0.062,181,0.062,200,2.413,206,1.309,208,1.799,209,1.799,210,1.799,211,1.799,246,1.075,251,1.309,294,1.59,303,1.59,418,2.413,419,2.413,420,3.129,421,3.129,422,3.129,423,3.823,424,3.129,425,3.129,426,3.129,427,3.129,428,3.129,429,3.129,430,3.129,431,2.413,432,4.301,433,2.949,434,4.301,435,2.413,436,2.949,437,2.413,438,2.413,439,3.129,440,3.129]],["title/dependencies.html",[185,1.455,441,1.558]],["body/dependencies.html",[39,0.078,84,1.172,180,0.066,181,0.066,185,1.734,197,3.107,198,2.5,203,2.632,442,3.413,443,4.658,444,3.413,445,3.413,446,3.413,447,3.413,448,3.413,449,3.413,450,3.413,451,3.413,452,3.413,453,3.413,454,3.413,455,3.413]],["title/miscellaneous/enumerations.html",[456,1.027,457,2.209]],["body/miscellaneous/enumerations.html",[19,0.994,39,0.067,138,1.487,180,0.067,181,0.067,208,1.487,209,1.726,210,1.726,211,1.726,234,1.487,244,2.096,245,1.807,246,1.221,247,1.807,248,1.807,249,1.807,250,1.807,456,1.807,457,2.742,458,3.556]],["title/index.html",[19,0.565,459,2.02,460,2.02]],["body/index.html",[0,1.536,3,1.039,39,0.061,41,1.46,64,1.039,69,2.332,81,2.332,86,0.389,87,2.332,88,2.332,99,2.324,100,2.887,104,2.887,118,2.332,119,2.332,120,2.332,137,3.369,160,2.332,161,2.332,167,1.265,180,0.061,181,0.061,191,2.324,225,2.159,258,1.536,316,1.902,362,2.066,387,1.536,399,1.536,419,2.887,461,3.024,462,3.024,463,4.45,464,3.024,465,3.024,466,3.024,467,3.744,468,3.024,469,4.066,470,3.024,471,3.744,472,3.024,473,3.744,474,3.024,475,3.024,476,3.024,477,3.024,478,3.024,479,3.024,480,3.024,481,3.024,482,3.024,483,3.024,484,3.024,485,3.024,486,3.024,487,3.024,488,3.024,489,3.024,490,3.024,491,3.024,492,3.024,493,3.024,494,3.024,495,3.024,496,3.024,497,3.024,498,3.744,499,3.024,500,3.744,501,3.024,502,3.024,503,2.332,504,3.024]],["title/modules.html",[184,1.997]],["body/modules.html",[39,0.068,180,0.068,181,0.068,183,1.868,184,2.282,198,2.282,234,1.538,505,3.677,506,3.677]],["title/overview.html",[507,2.481]],["body/overview.html",[1,1.937,2,2.655,39,0.074,65,2.655,66,2.655,91,2.655,177,2.185,180,0.066,181,0.066,182,2.655,183,2.353,185,2.057,186,2.655,187,2.655,188,2.655,189,3.122,190,2.655,191,2.136,207,1.749,507,2.655]],["title/properties.html",[20,0.984,441,1.558]],["body/properties.html",[20,1.269,39,0.072,180,0.069,181,0.069,503,2.849,508,3.694]],["title/miscellaneous/variables.html",[456,1.027,509,2.209]],["body/miscellaneous/variables.html",[19,0.938,38,1.512,39,0.077,40,1.78,41,1.462,180,0.065,181,0.065,431,2.589,433,3.396,435,2.589,436,2.589,437,3.076,438,3.076,456,1.705,509,2.589,510,3.988,511,3.356,512,3.356,513,3.356,514,3.988,515,3.356,516,3.356,517,3.988,518,3.988,519,3.356]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"index.html":{}}}],["0.0.0",{"_index":508,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":434,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":426,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["1.1.19",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["100",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["12.2.17",{"_index":504,"title":{},"body":{"index.html":{}}}],["13.3.0",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["20px",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["22",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["30",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["3px",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["47/86",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["50",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["54",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["7",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["7,10,20,30,40",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["7.5.0",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["7/31",{"_index":425,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["8pt",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["absolute",{"_index":492,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":218,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{}}}],["actual_component",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["adjusted",{"_index":387,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["against",{"_index":494,"title":{},"body":{"index.html":{}}}],["amount",{"_index":376,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["angular",{"_index":500,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["animation",{"_index":483,"title":{},"body":{"index.html":{}}}],["antiquewhite",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":183,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arc",{"_index":471,"title":{},"body":{"index.html":{}}}],["args",{"_index":256,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["around",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["article.gauge",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["article.gauge.mygauge1",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["backgrounds",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["between",{"_index":490,"title":{},"body":{"index.html":{}}}],["black",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["blue",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["bootstrap",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["box",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":274,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["browse",{"_index":506,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["builds",{"_index":462,"title":{},"body":{"index.html":{}}}],["call",{"_index":390,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["caption",{"_index":476,"title":{},"body":{"index.html":{}}}],["case",{"_index":260,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["center",{"_index":399,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["certain",{"_index":325,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["changed",{"_index":484,"title":{},"body":{"index.html":{}}}],["circle",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["class",{"_index":86,"title":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":207,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"overview.html":{}}}],["cli",{"_index":502,"title":{},"body":{"index.html":{}}}],["clone",{"_index":351,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["cluster_appmodule",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["color",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["colors",{"_index":475,"title":{},"body":{"index.html":{}}}],["colors1",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["colors2",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["colors3",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["colors4",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["colors5",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["compodoc",{"_index":499,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["console.error('#error",{"_index":271,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["const",{"_index":280,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["constructor",{"_index":221,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{}}}],["constructor(public",{"_index":285,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["constructor(w",{"_index":222,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["constructor(x1",{"_index":297,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["container",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["context",{"_index":437,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["convenience",{"_index":358,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["coordinate",{"_index":386,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["coordinates",{"_index":375,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["coverage",{"_index":418,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["createelement",{"_index":415,"title":{},"body":{"classes/SVGFactory.html":{}}}],["createelement(type",{"_index":255,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["current",{"_index":467,"title":{},"body":{"index.html":{}}}],["custom",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["customisable",{"_index":469,"title":{},"body":{"index.html":{}}}],["darkgray",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["darkred",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["declarations",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["deep",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["default",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["delay",{"_index":487,"title":{},"body":{"index.html":{}}}],["delta",{"_index":337,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["dependencies",{"_index":185,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["different",{"_index":474,"title":{},"body":{"index.html":{}}}],["dimensions",{"_index":206,"title":{"classes/Dimensions.html":{}},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{}}}],["dimensions(0",{"_index":304,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["direct",{"_index":481,"title":{},"body":{"index.html":{}}}],["direction",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["directive",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["directives",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["display",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["division",{"_index":320,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["document.createelementns(this.svgns",{"_index":263,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["documentation",{"_index":419,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{}}}],["down",{"_index":385,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["drop",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["dynamic",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["ease",{"_index":485,"title":{},"body":{"index.html":{}}}],["element",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["elementref",{"_index":232,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["enum",{"_index":243,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["enumerations",{"_index":457,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":433,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["extra",{"_index":480,"title":{},"body":{"index.html":{}}}],["factor",{"_index":312,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["factory",{"_index":273,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["factory.ts",{"_index":211,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["factory.ts:16",{"_index":416,"title":{},"body":{"classes/SVGFactory.html":{}}}],["factory.ts:18",{"_index":417,"title":{},"body":{"classes/SVGFactory.html":{}}}],["factory.ts:47",{"_index":226,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:48",{"_index":223,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:56",{"_index":236,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:57",{"_index":238,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:58",{"_index":240,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:59",{"_index":242,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:61",{"_index":228,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:66",{"_index":233,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:73",{"_index":411,"title":{},"body":{"classes/Line.html":{}}}],["factory.ts:74",{"_index":412,"title":{},"body":{"classes/Line.html":{}}}],["factory.ts:77",{"_index":413,"title":{},"body":{"classes/Line.html":{}}}],["factory.ts:81",{"_index":414,"title":{},"body":{"classes/Line.html":{}}}],["false",{"_index":519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["family",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["fancy",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["features",{"_index":470,"title":{},"body":{"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{}}}],["fill",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["filter",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["first",{"_index":308,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["flex",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["font",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["footer",{"_index":477,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["four",{"_index":397,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["g",{"_index":210,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["gauge",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["gauge.arcs.background",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["gauge.arcs.background.mygauge1",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["gauge.arcs.background.mygauge2",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["gauge.arcs.background.mygauge3",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["gauge.arcs.background.mygauge4",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["gauge.needle.circle.mygauge1",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["gauge.needle.pin.mygauge1",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["gauge.needle.pointer.mygauge1",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["gaugev13",{"_index":461,"title":{},"body":{"index.html":{}}}],["generated",{"_index":498,"title":{},"body":{"index.html":{}}}],["generic",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["geth",{"_index":235,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{}}}],["getting",{"_index":459,"title":{"index.html":{}},"body":{}}],["getw",{"_index":239,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{}}}],["given",{"_index":311,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["graph",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["graphics",{"_index":466,"title":{},"body":{"index.html":{}}}],["gray",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["green",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["group",{"_index":247,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["grow",{"_index":381,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["growfromtopleft",{"_index":360,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["growfromtopleft(growwidthby",{"_index":383,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["growheightby",{"_index":382,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["growwidthby",{"_index":380,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["guards",{"_index":493,"title":{},"body":{"index.html":{}}}],["h",{"_index":219,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["h(v",{"_index":278,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["height",{"_index":213,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["horizontal",{"_index":313,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["horizontally",{"_index":367,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["host",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["html",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["http://www.w3.org/2000/svg",{"_index":254,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["identifier",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["imports",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["impossible",{"_index":495,"title":{},"body":{"index.html":{}}}],["increase",{"_index":372,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":468,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["inner",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["input",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["instead",{"_index":491,"title":{},"body":{"index.html":{}}}],["internalupdate",{"_index":348,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["labels",{"_index":478,"title":{},"body":{"index.html":{}}}],["left",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["line",{"_index":246,"title":{"classes/Line.html":{}},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["literal",{"_index":516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location",{"_index":394,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["margin",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["margins",{"_index":488,"title":{},"body":{"index.html":{}}}],["marker",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["markers",{"_index":497,"title":{},"body":{"index.html":{}}}],["matching",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.abs(this.x2",{"_index":290,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["math.abs(this.y2",{"_index":292,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["meter",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["meter.component",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["meter.component.ts",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["meter/vu",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["method",{"_index":359,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["methods",{"_index":215,"title":{},"body":{"classes/Dimensions.html":{},"classes/SVGFactory.html":{}}}],["minimal/maximal",{"_index":479,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":456,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":182,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":184,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["move",{"_index":393,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moveabsolutehorizontal(newx1",{"_index":334,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moveabsolutevertical(newy1",{"_index":338,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moveandscalehorizontal(factor",{"_index":321,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moveandscalevertical(factor",{"_index":323,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movebyfactorhorizontal(factor",{"_index":331,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movebyfactorvertical(factor",{"_index":332,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movedeltahorizontal(delta",{"_index":336,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movedeltavertical(delta",{"_index":340,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moves",{"_index":310,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movex1",{"_index":401,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movey1",{"_index":402,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moving",{"_index":373,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["multiple",{"_index":472,"title":{},"body":{"index.html":{}}}],["multiplication",{"_index":315,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["name",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["needle",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["needlevalue1",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["needlevalue2",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["needlevalue3",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["needlevalue4",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["needlevalue5",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["negative",{"_index":361,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["new",{"_index":303,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{}}}],["newx1",{"_index":335,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["newy1",{"_index":339,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["ng",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["node",{"_index":257,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["none",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["null",{"_index":496,"title":{},"body":{"index.html":{}}}],["number",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["numbers",{"_index":317,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["object",{"_index":517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":225,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["orange",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":507,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":441,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["param",{"_index":314,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["parameters",{"_index":224,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["parts",{"_index":473,"title":{},"body":{"index.html":{}}}],["percentage",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["pin",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["pixels",{"_index":365,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["polygon",{"_index":250,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["polyline",{"_index":249,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["private",{"_index":212,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["production",{"_index":518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":501,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"properties.html":{}}}],["providers",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["radius",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["range",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ranges1",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["ranges2",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["ranges3",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["ranges4",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["ranges5",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["ratiohw",{"_index":296,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["ratiowh",{"_index":295,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["rect",{"_index":245,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["rect.x2",{"_index":356,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["rect.y1",{"_index":355,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["rect.y2",{"_index":357,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["rectangle",{"_index":294,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{}}}],["rectangle(this.x1",{"_index":352,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["red",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["remain",{"_index":378,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["remaining",{"_index":389,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["remains",{"_index":400,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["request",{"_index":272,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["require",{"_index":438,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resizes",{"_index":309,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["results",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":262,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["returns",{"_index":229,"title":{},"body":{"classes/Dimensions.html":{},"classes/SVGFactory.html":{}}}],["rgb(200,255,255",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["rgb(240,240,240",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(0",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["row",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":379,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["sans",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["scalable",{"_index":464,"title":{},"body":{"index.html":{}}}],["scaleheight(factor",{"_index":329,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["scalewidth(factor",{"_index":326,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["schema",{"_index":486,"title":{},"body":{"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["self",{"_index":391,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["serif",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["set",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["setdimensions(dim",{"_index":342,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["seth(v",{"_index":237,"title":{},"body":{"classes/Dimensions.html":{}}}],["setheight(h",{"_index":341,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["setw(v",{"_index":241,"title":{},"body":{"classes/Dimensions.html":{}}}],["setwidth(w",{"_index":333,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["setwidthheight(w",{"_index":345,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shadow",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["shrink",{"_index":366,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinkandmove(movex1",{"_index":403,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinkfromtopleft(shrinkwidthby",{"_index":370,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinkheightby",{"_index":368,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinktoheight",{"_index":388,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinktoheightfrombottom(shrinktoheight",{"_index":392,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinkwidthby",{"_index":364,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrunk",{"_index":396,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["sides",{"_index":398,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["similar",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["smaller",{"_index":318,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["solid",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["spec\\.ts",{"_index":515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../s",{"_index":458,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:9",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/s",{"_index":208,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/vu",{"_index":427,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":431,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":435,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":436,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":460,"title":{"index.html":{}},"body":{}}],["statements",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":252,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["string",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"classes/SVGFactory.html":{}}}],["stroke",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["styling",{"_index":482,"title":{},"body":{"index.html":{}}}],["supplied",{"_index":363,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["support",{"_index":505,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":234,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["svg.nativeelement.getboundingclientrect",{"_index":282,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgbbox",{"_index":281,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgbbox.height",{"_index":284,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype",{"_index":244,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["svgelementtype.circle",{"_index":264,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.group",{"_index":268,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.line",{"_index":265,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.polygon",{"_index":270,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.polyline",{"_index":269,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.rect",{"_index":266,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.svg",{"_index":261,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.text",{"_index":267,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgfactory",{"_index":251,"title":{"classes/SVGFactory.html":{}},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{}}}],["svgns",{"_index":253,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["switch",{"_index":259,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["syntax",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["table",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["text",{"_index":248,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["text.gauge.marker.text",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["texts",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["this.dimensions",{"_index":302,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.dimensions.h",{"_index":350,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.dimensions.w",{"_index":349,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.growfromtopleft",{"_index":371,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.h",{"_index":330,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.height",{"_index":276,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.internalupdate",{"_index":307,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.ranges1[0",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ranges2[0",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ranges4[0",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ranges5[0",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ratiohw",{"_index":298,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.ratiowh",{"_index":299,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.scaleheight(factor).movebyfactorvertical(factor",{"_index":324,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.scalewidth(factor).movebyfactorhorizontal(factor",{"_index":322,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setheight(dim.h",{"_index":343,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setheight(h",{"_index":347,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setheight(v",{"_index":410,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setwidth(dim.w",{"_index":344,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setwidth(v",{"_index":409,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setwidth(w",{"_index":346,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.shrinkfromtopleft(shrinkwidthby",{"_index":404,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.update(rect.x1",{"_index":354,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.update(svgbbox.width",{"_index":283,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.update(w",{"_index":277,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.update(x1",{"_index":305,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.w",{"_index":327,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.width",{"_index":275,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.x1",{"_index":291,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.x2",{"_index":300,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.y1",{"_index":293,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.y2",{"_index":301,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["title",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":384,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["top/bottom/sides",{"_index":489,"title":{},"body":{"index.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{}}}],["true",{"_index":514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":258,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["update",{"_index":216,"title":{},"body":{"classes/Dimensions.html":{}}}],["update(w",{"_index":227,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["update(x1",{"_index":306,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["updatefromrect(rect",{"_index":353,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["updatefromsvgelement",{"_index":217,"title":{},"body":{"classes/Dimensions.html":{}}}],["updatefromsvgelement(svg",{"_index":231,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["use",{"_index":316,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["using",{"_index":463,"title":{},"body":{"index.html":{}}}],["v",{"_index":209,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["value",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":362,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["var",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["variable",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":509,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vector",{"_index":465,"title":{},"body":{"index.html":{}}}],["version",{"_index":503,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":328,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["vertically",{"_index":369,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["void",{"_index":230,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["vu",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{}}}],["vumetercomponent",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["w",{"_index":220,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["w(v",{"_index":279,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["way",{"_index":395,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["webkit",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["white",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["whitesmoke",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":214,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["wrap",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["x1",{"_index":286,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x1(v",{"_index":405,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x1,y1",{"_index":377,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x2",{"_index":288,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x2(v",{"_index":406,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x2,y2",{"_index":374,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["y1",{"_index":287,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["y1(v",{"_index":407,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["y2",{"_index":289,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["y2(v",{"_index":408,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["yellow",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["zero",{"_index":319,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["zone.js",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colors1\n                            \n                            \n                                colors2\n                            \n                            \n                                colors3\n                            \n                            \n                                colors4\n                            \n                            \n                                colors5\n                            \n                            \n                                    Public\n                                needleValue1\n                            \n                            \n                                    Public\n                                needleValue2\n                            \n                            \n                                    Public\n                                needleValue3\n                            \n                            \n                                    Public\n                                needleValue4\n                            \n                            \n                                    Public\n                                needleValue5\n                            \n                            \n                                ranges1\n                            \n                            \n                                ranges2\n                            \n                            \n                                ranges3\n                            \n                            \n                                ranges4\n                            \n                            \n                                ranges5\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colors1\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['green', 'orange', 'red']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colors2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['green', 'orange', 'red', 'blue']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colors3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['green', 'orange', 'red', 'darkred']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colors4\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['green', 'orange', 'red', 'darkred']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colors5\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['green', 'orange', 'red', 'darkred']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        needleValue1\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.ranges1[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        needleValue2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.ranges2[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        needleValue3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        needleValue4\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.ranges4[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        needleValue5\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.ranges5[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranges1\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [0, 2, 4, 5]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranges2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [-100, -80, -20, 0, 15]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranges3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [7,10,20,30,40]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranges4\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [0, 10, 20, 30, 50]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranges5\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [0, 10, 20, 30, 50]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'gauge'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'gauge';\n  ranges1 = [0, 2, 4, 5];\n  colors1 = ['green', 'orange', 'red'];\n\n  ranges2 = [-100, -80, -20, 0, 15];\n  colors2 = ['green', 'orange', 'red', 'blue'];\n\n  ranges3 = [7,10,20,30,40];\n  colors3 = ['green', 'orange', 'red', 'darkred'];\n\n  ranges4 = [0, 10, 20, 30, 50];\n  colors4 = ['green', 'orange', 'red', 'darkred'];\n\n  ranges5 = [0, 10, 20, 30, 50];\n  colors5 = ['green', 'orange', 'red', 'darkred'];\n\n  public needleValue1 = this.ranges1[0];\n  public needleValue2 = this.ranges2[0];\n  public needleValue3 = 50; // this range is a percentage input\n  public needleValue4 = this.ranges4[0];\n  public needleValue5 = this.ranges5[0];\n}\n\n    \n\n    \n        \n\n  \n  \n  \n  \n  \n\nValue for graph 1: \nValue for graph 2: \nValue for graph 3: %\nValue for graph 4: \nValue for graph 5: \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .container {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\napp-vu-meter + app-vu-meter {\n  margin-left: 20px;\n}\n\n.shadow {\n  -webkit-filter: drop-shadow( 3px 3px 2px rgba(0, 0, 0, .7));\n  filter: drop-shadow( 3px 3px 2px rgba(0, 0, 0, .7));\n  /* Similar syntax to box-shadow */\n}\n/* Generic backgrounds for inner gauge */\n:host ::ng-deep .gauge.arcs.background { fill: rgb(240,240,240); stroke: none;}\n\n/* Set custom backgrounds for inner gauge */\n:host ::ng-deep .gauge.arcs.background.myGauge1 { fill: antiquewhite; }\n:host ::ng-deep .gauge.arcs.background.myGauge2 { fill: rgb(200,255,255); }\n:host ::ng-deep .gauge.arcs.background.myGauge3 { fill: whitesmoke; }\n:host ::ng-deep .gauge.arcs.background.myGauge4 { fill: yellow; }\n\n/* color and fill of the needle, circle and pin */\n:host ::ng-deep .gauge.needle.pointer.myGauge1 { fill: black; stroke: black; }\n:host ::ng-deep .gauge.needle.pin.myGauge1     { fill: black; stroke: white;}\n:host ::ng-deep .gauge.needle.circle.myGauge1  { fill: black; stroke: white;}\n\n/* Create a box around each gauge */\n:host ::ng-deep article.gauge {\n  border: 1px solid black;\n  padding: 4px;\n}\n\n/* Create a fancy box around gauge 1 */\n:host ::ng-deep article.gauge.myGauge1 {\n  border: 1px solid darkgray;\n  box-shadow: 4px 4px 4px gray;\n  border-radius: 5px;\n}\n\n/* set the marker texts */\n:host ::ng-deep text.gauge.marker.text {\n  font-family: sans-serif;\n  font-size: 8pt;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Value for graph 1: Value for graph 2: Value for graph 3: %Value for graph 4: Value for graph 5: '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'VuMeterComponent', 'selector': 'app-vu-meter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nVuMeterComponent\n\nVuMeterComponent\n\nAppModule -->\n\nVuMeterComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            VuMeterComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { VuMeterComponent } from './vu-meter/vu-meter.component';\nimport {FormsModule} from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    VuMeterComponent\n  ],\n    imports: [\n        BrowserModule,\n        FormsModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Dimensions.html":{"url":"classes/Dimensions.html","title":"class - Dimensions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Dimensions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/s-v-g-factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                Height\n                            \n                            \n                                    Private\n                                Width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                            \n                                updateFromSVGElement\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    h\n                                \n                                \n                                    w\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(w: number, h: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/s-v-g-factory.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        w\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        h\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        Height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        Width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:47\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(w: number, h: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/s-v-g-factory.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    w\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    h\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFromSVGElement\n                        \n                    \n                \n            \n            \n                \nupdateFromSVGElement(svg: ElementRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/s-v-g-factory.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    svg\n                                    \n                                                ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Dimensions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        h\n                    \n                \n\n                \n                    \n                        geth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:56\n                                \n                            \n\n                \n                    \n                        seth(v: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:57\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        w\n                    \n                \n\n                \n                    \n                        getw()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:58\n                                \n                            \n\n                \n                    \n                        setw(v: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:59\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {ElementRef} from '@angular/core';\n\nexport enum SVGElementType {\n  SVG,\n  Rect,\n  Circle,\n  Line,\n  Group,\n  Text,\n  Polyline,\n  Polygon\n}\n\n\nexport class SVGFactory {\n  private static svgNS = 'http://www.w3.org/2000/svg';\n\n  public static createElement(type: SVGElementType, ...args: any[]): Node | undefined {\n    switch (type) {\n      case SVGElementType.SVG:\n        return document.createElementNS(this.svgNS, 'svg');\n      case SVGElementType.Circle:\n        return document.createElementNS(this.svgNS, 'circle');\n      case SVGElementType.Line:\n        return document.createElementNS(this.svgNS, 'line');\n      case SVGElementType.Rect:\n        return document.createElementNS(this.svgNS, 'rect');\n      case SVGElementType.Text:\n        return document.createElementNS(this.svgNS, 'text');\n      case SVGElementType.Group:\n        return document.createElementNS(this.svgNS, 'g');\n      case SVGElementType.Polyline:\n        return document.createElementNS(this.svgNS, 'polyline');\n      case SVGElementType.Polygon:\n        return document.createElementNS(this.svgNS, 'polygon');\n      default:\n        console.error('#Error request SVG Factory type');\n        break;\n    }\n    return undefined;\n  }\n\n}\n\n\nexport class Dimensions {\n  private Width: number;\n  private Height: number;\n\n  constructor(w: number, h: number) {\n    this.Width = 0;\n    this.Height = 0;\n    this.update(w, h);\n  }\n\n  get h(): number  { return this.Height; }\n  set h(v: number) { this.Height = v; }\n  get w(): number  { return this.Width; }\n  set w(v: number) { this.Width = v; }\n\n  update(w: number, h: number): void {\n    this.Width  = w;\n    this.Height = h;\n  }\n\n  updateFromSVGElement(svg: ElementRef): Dimensions {\n    const svgBBox = svg.nativeElement.getBoundingClientRect();\n    this.update(svgBBox.width, svgBBox.height);\n    return this;\n  }\n}\n\nexport class Line {\n  constructor(public x1: number, public y1: number, public x2: number, public y2: number) {\n  }\n\n  get w(): number {\n    return Math.abs(this.x2 - this.x1);\n  }\n\n  get h(): number {\n    return Math.abs(this.y2 - this.y1);\n  }\n}\n\nexport class Rectangle {\n  public dimensions: Dimensions;\n  public ratioWH: number;\n  public ratioHW: number;\n  public X1: number;\n  public X2: number;\n  public Y1: number;\n  public Y2: number;\n\n  constructor(x1: number, y1: number, x2: number, y2: number) {\n    this.ratioHW = 0;\n    this.ratioWH = 0;\n    this.X1 = 0;\n    this.X2 = 0;\n    this.Y1 = 0;\n    this.Y2 = 0;\n    this.dimensions = new Dimensions(0, 0);\n    this.update(x1, y1, x2, y2);\n  }\n\n  update(x1: number, y1: number, x2: number, y2: number): Rectangle {\n    this.X1 = x1;\n    this.X2 = x2;\n    this.Y1 = y1;\n    this.Y2 = y2;\n    this.internalUpdate();\n    return this;\n  }\n\n  /**\n   * First resizes, then moves by a given factor in the horizontal direction\n   * @param factor  a multiplication factor (so use numbers smaller than zero for division)\n   */\n  moveAndScaleHorizontal(factor: number): Rectangle {\n    this.scaleWidth(factor).moveByFactorHorizontal(factor);\n    return this;\n  }\n\n  moveAndScaleVertical(factor: number): Rectangle {\n    this.scaleHeight(factor).moveByFactorVertical(factor);\n    return this;\n  }\n\n  /**\n   * Resizes by a certain factor in the horizontal direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleWidth(factor: number): Rectangle {\n    this.w *= factor;\n    return this;\n  }\n\n  /**\n   * Resizes by a given factor in the vertical direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleHeight(factor: number): Rectangle {\n    this.h *= factor;\n    return this;\n  }\n\n  moveByFactorHorizontal(factor: number): Rectangle {\n    this.X1 *= factor;\n    this.X2 = this.X1 + this.w;\n    return this;\n  }\n\n  moveByFactorVertical(factor: number): Rectangle {\n    this.Y1 *= factor;\n    this.Y2 += this.Y1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  setWidth(w: number): Rectangle {\n    this.X2 = this.X1 + w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteHorizontal(newX1: number): Rectangle {\n    this.X1 = newX1;\n    this.X2 = this.X1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaHorizontal(delta: number): Rectangle {\n    this.X1 += delta;\n    this.X2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteVertical(newY1: number): Rectangle {\n    this.Y1 = newY1;\n    this.Y2 += this.h;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaVertical(delta: number): Rectangle {\n    this.Y1 += delta;\n    this.Y2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  setHeight(h: number): Rectangle {\n    this.Y2 = this.Y1 + h;\n    this.internalUpdate();\n    return this;\n  }\n\n  setDimensions(dim: Dimensions): Rectangle {\n    this.setHeight(dim.h);\n    this.setWidth(dim.w);\n    return this;\n  }\n\n  setWidthHeight(w: number, h: number): Rectangle {\n    this.setWidth(w);\n    this.setHeight(h);\n    return this;\n  }\n\n  private internalUpdate(): void {\n    this.dimensions.w = Math.abs(this.x2 - this.x1);\n    this.dimensions.h = Math.abs(this.y2 - this.y1);\n\n    this.ratioWH = this.dimensions.w / this.dimensions.h;\n    this.ratioHW = this.dimensions.h / this.dimensions.w;\n  }\n\n  clone(): Rectangle {\n    return new Rectangle(this.x1, this.y1, this.x2, this.y2);\n  }\n\n  updateFromRect(rect: Rectangle): Rectangle {\n    this.update(rect.x1, rect.y1, rect.x2, rect.y2);\n    return this;\n  }\n\n  /**\n   * Convenience method to growFromTopLeft so no negative values have to be supplied\n   * @param shrinkWidthBy number of pixels to shrink horizontally\n   * @param shrinkHeightBy number of pixels to shrink vertically\n   */\n  shrinkFromTopLeft(shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.growFromTopLeft(-shrinkWidthBy, -shrinkHeightBy);\n    return this;\n  }\n\n  /**\n   * Will increase the size of the rectangle by moving the (x2,y2) coordinates with a given amount.\n   * (x1,y1) will remain the same\n   * @param growWidthBy number of pixels to grow horizontally\n   * @param growHeightBy number of pixels to grow vertically\n   */\n  growFromTopLeft(growWidthBy: number, growHeightBy: number): Rectangle {\n    this.w += growWidthBy;\n    this.h += growHeightBy;\n    return this;\n  }\n\n  /**\n   * Moves the top of the rectangle down so that the Y2-coordinate will remain the same, and the height is adjusted\n   * @param shrinkToHeight remaining height after call\n   * @return self\n   */\n  shrinkToHeightFromBottom(shrinkToHeight: number): Rectangle {\n    this.y1 = this.y2 - shrinkToHeight;\n    return this;\n  }\n\n  /**\n   * Will shrink the rectangle by a given amount and move it to a certain location. This way a\n   * rectangle can be shrunk on four sides while the center remains the same.\n   * @param moveX1 delta value to move x1-coordinate\n   * @param moveY1 delta value to move y1-coordinate\n   * @param shrinkWidthBy delta value to shrink the width\n   * @param shrinkHeightBy delta value to shrink the height\n   */\n  shrinkAndMove(moveX1: number, moveY1: number, shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.X1 += moveX1;\n    this.Y1 += moveY1;\n    this.internalUpdate();\n\n    this.shrinkFromTopLeft(shrinkWidthBy , shrinkHeightBy );\n    return this;\n  }\n\n  set x1(v: number) { this.X1 = v; this.internalUpdate(); }\n  get x1(): number  { return this.X1; }\n  set x2(v: number) { this.X2 = v; this.internalUpdate(); }\n  get x2(): number  { return this.X2; }\n  set y1(v: number) { this.Y1 = v; this.internalUpdate(); }\n  get y1(): number  { return this.Y1; }\n  set y2(v: number) { this.Y2 = v; this.internalUpdate(); }\n  get y2(): number  { return this.Y2; }\n\n  get w(): number  { return this.dimensions.w; }\n  set w(v: number) { this.setWidth(v); }\n  get h(): number  { return this.dimensions.h; }\n  set h(v: number) { this.setHeight(v); }\n\n}// Rectangle\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Line.html":{"url":"classes/Line.html","title":"class - Line","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Line\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/s-v-g-factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                x1\n                            \n                            \n                                    Public\n                                x2\n                            \n                            \n                                    Public\n                                y1\n                            \n                            \n                                    Public\n                                y2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    w\n                                \n                                \n                                    h\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(x1: number, y1: number, x2: number, y2: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/s-v-g-factory.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        x1\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        y1\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        x2\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        y2\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        x1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        x2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        y1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        y2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        w\n                    \n                \n\n                \n                    \n                        getw()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:77\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        h\n                    \n                \n\n                \n                    \n                        geth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:81\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {ElementRef} from '@angular/core';\n\nexport enum SVGElementType {\n  SVG,\n  Rect,\n  Circle,\n  Line,\n  Group,\n  Text,\n  Polyline,\n  Polygon\n}\n\n\nexport class SVGFactory {\n  private static svgNS = 'http://www.w3.org/2000/svg';\n\n  public static createElement(type: SVGElementType, ...args: any[]): Node | undefined {\n    switch (type) {\n      case SVGElementType.SVG:\n        return document.createElementNS(this.svgNS, 'svg');\n      case SVGElementType.Circle:\n        return document.createElementNS(this.svgNS, 'circle');\n      case SVGElementType.Line:\n        return document.createElementNS(this.svgNS, 'line');\n      case SVGElementType.Rect:\n        return document.createElementNS(this.svgNS, 'rect');\n      case SVGElementType.Text:\n        return document.createElementNS(this.svgNS, 'text');\n      case SVGElementType.Group:\n        return document.createElementNS(this.svgNS, 'g');\n      case SVGElementType.Polyline:\n        return document.createElementNS(this.svgNS, 'polyline');\n      case SVGElementType.Polygon:\n        return document.createElementNS(this.svgNS, 'polygon');\n      default:\n        console.error('#Error request SVG Factory type');\n        break;\n    }\n    return undefined;\n  }\n\n}\n\n\nexport class Dimensions {\n  private Width: number;\n  private Height: number;\n\n  constructor(w: number, h: number) {\n    this.Width = 0;\n    this.Height = 0;\n    this.update(w, h);\n  }\n\n  get h(): number  { return this.Height; }\n  set h(v: number) { this.Height = v; }\n  get w(): number  { return this.Width; }\n  set w(v: number) { this.Width = v; }\n\n  update(w: number, h: number): void {\n    this.Width  = w;\n    this.Height = h;\n  }\n\n  updateFromSVGElement(svg: ElementRef): Dimensions {\n    const svgBBox = svg.nativeElement.getBoundingClientRect();\n    this.update(svgBBox.width, svgBBox.height);\n    return this;\n  }\n}\n\nexport class Line {\n  constructor(public x1: number, public y1: number, public x2: number, public y2: number) {\n  }\n\n  get w(): number {\n    return Math.abs(this.x2 - this.x1);\n  }\n\n  get h(): number {\n    return Math.abs(this.y2 - this.y1);\n  }\n}\n\nexport class Rectangle {\n  public dimensions: Dimensions;\n  public ratioWH: number;\n  public ratioHW: number;\n  public X1: number;\n  public X2: number;\n  public Y1: number;\n  public Y2: number;\n\n  constructor(x1: number, y1: number, x2: number, y2: number) {\n    this.ratioHW = 0;\n    this.ratioWH = 0;\n    this.X1 = 0;\n    this.X2 = 0;\n    this.Y1 = 0;\n    this.Y2 = 0;\n    this.dimensions = new Dimensions(0, 0);\n    this.update(x1, y1, x2, y2);\n  }\n\n  update(x1: number, y1: number, x2: number, y2: number): Rectangle {\n    this.X1 = x1;\n    this.X2 = x2;\n    this.Y1 = y1;\n    this.Y2 = y2;\n    this.internalUpdate();\n    return this;\n  }\n\n  /**\n   * First resizes, then moves by a given factor in the horizontal direction\n   * @param factor  a multiplication factor (so use numbers smaller than zero for division)\n   */\n  moveAndScaleHorizontal(factor: number): Rectangle {\n    this.scaleWidth(factor).moveByFactorHorizontal(factor);\n    return this;\n  }\n\n  moveAndScaleVertical(factor: number): Rectangle {\n    this.scaleHeight(factor).moveByFactorVertical(factor);\n    return this;\n  }\n\n  /**\n   * Resizes by a certain factor in the horizontal direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleWidth(factor: number): Rectangle {\n    this.w *= factor;\n    return this;\n  }\n\n  /**\n   * Resizes by a given factor in the vertical direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleHeight(factor: number): Rectangle {\n    this.h *= factor;\n    return this;\n  }\n\n  moveByFactorHorizontal(factor: number): Rectangle {\n    this.X1 *= factor;\n    this.X2 = this.X1 + this.w;\n    return this;\n  }\n\n  moveByFactorVertical(factor: number): Rectangle {\n    this.Y1 *= factor;\n    this.Y2 += this.Y1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  setWidth(w: number): Rectangle {\n    this.X2 = this.X1 + w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteHorizontal(newX1: number): Rectangle {\n    this.X1 = newX1;\n    this.X2 = this.X1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaHorizontal(delta: number): Rectangle {\n    this.X1 += delta;\n    this.X2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteVertical(newY1: number): Rectangle {\n    this.Y1 = newY1;\n    this.Y2 += this.h;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaVertical(delta: number): Rectangle {\n    this.Y1 += delta;\n    this.Y2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  setHeight(h: number): Rectangle {\n    this.Y2 = this.Y1 + h;\n    this.internalUpdate();\n    return this;\n  }\n\n  setDimensions(dim: Dimensions): Rectangle {\n    this.setHeight(dim.h);\n    this.setWidth(dim.w);\n    return this;\n  }\n\n  setWidthHeight(w: number, h: number): Rectangle {\n    this.setWidth(w);\n    this.setHeight(h);\n    return this;\n  }\n\n  private internalUpdate(): void {\n    this.dimensions.w = Math.abs(this.x2 - this.x1);\n    this.dimensions.h = Math.abs(this.y2 - this.y1);\n\n    this.ratioWH = this.dimensions.w / this.dimensions.h;\n    this.ratioHW = this.dimensions.h / this.dimensions.w;\n  }\n\n  clone(): Rectangle {\n    return new Rectangle(this.x1, this.y1, this.x2, this.y2);\n  }\n\n  updateFromRect(rect: Rectangle): Rectangle {\n    this.update(rect.x1, rect.y1, rect.x2, rect.y2);\n    return this;\n  }\n\n  /**\n   * Convenience method to growFromTopLeft so no negative values have to be supplied\n   * @param shrinkWidthBy number of pixels to shrink horizontally\n   * @param shrinkHeightBy number of pixels to shrink vertically\n   */\n  shrinkFromTopLeft(shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.growFromTopLeft(-shrinkWidthBy, -shrinkHeightBy);\n    return this;\n  }\n\n  /**\n   * Will increase the size of the rectangle by moving the (x2,y2) coordinates with a given amount.\n   * (x1,y1) will remain the same\n   * @param growWidthBy number of pixels to grow horizontally\n   * @param growHeightBy number of pixels to grow vertically\n   */\n  growFromTopLeft(growWidthBy: number, growHeightBy: number): Rectangle {\n    this.w += growWidthBy;\n    this.h += growHeightBy;\n    return this;\n  }\n\n  /**\n   * Moves the top of the rectangle down so that the Y2-coordinate will remain the same, and the height is adjusted\n   * @param shrinkToHeight remaining height after call\n   * @return self\n   */\n  shrinkToHeightFromBottom(shrinkToHeight: number): Rectangle {\n    this.y1 = this.y2 - shrinkToHeight;\n    return this;\n  }\n\n  /**\n   * Will shrink the rectangle by a given amount and move it to a certain location. This way a\n   * rectangle can be shrunk on four sides while the center remains the same.\n   * @param moveX1 delta value to move x1-coordinate\n   * @param moveY1 delta value to move y1-coordinate\n   * @param shrinkWidthBy delta value to shrink the width\n   * @param shrinkHeightBy delta value to shrink the height\n   */\n  shrinkAndMove(moveX1: number, moveY1: number, shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.X1 += moveX1;\n    this.Y1 += moveY1;\n    this.internalUpdate();\n\n    this.shrinkFromTopLeft(shrinkWidthBy , shrinkHeightBy );\n    return this;\n  }\n\n  set x1(v: number) { this.X1 = v; this.internalUpdate(); }\n  get x1(): number  { return this.X1; }\n  set x2(v: number) { this.X2 = v; this.internalUpdate(); }\n  get x2(): number  { return this.X2; }\n  set y1(v: number) { this.Y1 = v; this.internalUpdate(); }\n  get y1(): number  { return this.Y1; }\n  set y2(v: number) { this.Y2 = v; this.internalUpdate(); }\n  get y2(): number  { return this.Y2; }\n\n  get w(): number  { return this.dimensions.w; }\n  set w(v: number) { this.setWidth(v); }\n  get h(): number  { return this.dimensions.h; }\n  set h(v: number) { this.setHeight(v); }\n\n}// Rectangle\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SVGFactory.html":{"url":"classes/SVGFactory.html","title":"class - SVGFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SVGFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/s-v-g-factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                svgNS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        svgNS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://www.w3.org/2000/svg'\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    createElement(type: SVGElementType, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/s-v-g-factory.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                SVGElementType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Node | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ElementRef} from '@angular/core';\n\nexport enum SVGElementType {\n  SVG,\n  Rect,\n  Circle,\n  Line,\n  Group,\n  Text,\n  Polyline,\n  Polygon\n}\n\n\nexport class SVGFactory {\n  private static svgNS = 'http://www.w3.org/2000/svg';\n\n  public static createElement(type: SVGElementType, ...args: any[]): Node | undefined {\n    switch (type) {\n      case SVGElementType.SVG:\n        return document.createElementNS(this.svgNS, 'svg');\n      case SVGElementType.Circle:\n        return document.createElementNS(this.svgNS, 'circle');\n      case SVGElementType.Line:\n        return document.createElementNS(this.svgNS, 'line');\n      case SVGElementType.Rect:\n        return document.createElementNS(this.svgNS, 'rect');\n      case SVGElementType.Text:\n        return document.createElementNS(this.svgNS, 'text');\n      case SVGElementType.Group:\n        return document.createElementNS(this.svgNS, 'g');\n      case SVGElementType.Polyline:\n        return document.createElementNS(this.svgNS, 'polyline');\n      case SVGElementType.Polygon:\n        return document.createElementNS(this.svgNS, 'polygon');\n      default:\n        console.error('#Error request SVG Factory type');\n        break;\n    }\n    return undefined;\n  }\n\n}\n\n\nexport class Dimensions {\n  private Width: number;\n  private Height: number;\n\n  constructor(w: number, h: number) {\n    this.Width = 0;\n    this.Height = 0;\n    this.update(w, h);\n  }\n\n  get h(): number  { return this.Height; }\n  set h(v: number) { this.Height = v; }\n  get w(): number  { return this.Width; }\n  set w(v: number) { this.Width = v; }\n\n  update(w: number, h: number): void {\n    this.Width  = w;\n    this.Height = h;\n  }\n\n  updateFromSVGElement(svg: ElementRef): Dimensions {\n    const svgBBox = svg.nativeElement.getBoundingClientRect();\n    this.update(svgBBox.width, svgBBox.height);\n    return this;\n  }\n}\n\nexport class Line {\n  constructor(public x1: number, public y1: number, public x2: number, public y2: number) {\n  }\n\n  get w(): number {\n    return Math.abs(this.x2 - this.x1);\n  }\n\n  get h(): number {\n    return Math.abs(this.y2 - this.y1);\n  }\n}\n\nexport class Rectangle {\n  public dimensions: Dimensions;\n  public ratioWH: number;\n  public ratioHW: number;\n  public X1: number;\n  public X2: number;\n  public Y1: number;\n  public Y2: number;\n\n  constructor(x1: number, y1: number, x2: number, y2: number) {\n    this.ratioHW = 0;\n    this.ratioWH = 0;\n    this.X1 = 0;\n    this.X2 = 0;\n    this.Y1 = 0;\n    this.Y2 = 0;\n    this.dimensions = new Dimensions(0, 0);\n    this.update(x1, y1, x2, y2);\n  }\n\n  update(x1: number, y1: number, x2: number, y2: number): Rectangle {\n    this.X1 = x1;\n    this.X2 = x2;\n    this.Y1 = y1;\n    this.Y2 = y2;\n    this.internalUpdate();\n    return this;\n  }\n\n  /**\n   * First resizes, then moves by a given factor in the horizontal direction\n   * @param factor  a multiplication factor (so use numbers smaller than zero for division)\n   */\n  moveAndScaleHorizontal(factor: number): Rectangle {\n    this.scaleWidth(factor).moveByFactorHorizontal(factor);\n    return this;\n  }\n\n  moveAndScaleVertical(factor: number): Rectangle {\n    this.scaleHeight(factor).moveByFactorVertical(factor);\n    return this;\n  }\n\n  /**\n   * Resizes by a certain factor in the horizontal direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleWidth(factor: number): Rectangle {\n    this.w *= factor;\n    return this;\n  }\n\n  /**\n   * Resizes by a given factor in the vertical direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleHeight(factor: number): Rectangle {\n    this.h *= factor;\n    return this;\n  }\n\n  moveByFactorHorizontal(factor: number): Rectangle {\n    this.X1 *= factor;\n    this.X2 = this.X1 + this.w;\n    return this;\n  }\n\n  moveByFactorVertical(factor: number): Rectangle {\n    this.Y1 *= factor;\n    this.Y2 += this.Y1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  setWidth(w: number): Rectangle {\n    this.X2 = this.X1 + w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteHorizontal(newX1: number): Rectangle {\n    this.X1 = newX1;\n    this.X2 = this.X1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaHorizontal(delta: number): Rectangle {\n    this.X1 += delta;\n    this.X2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteVertical(newY1: number): Rectangle {\n    this.Y1 = newY1;\n    this.Y2 += this.h;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaVertical(delta: number): Rectangle {\n    this.Y1 += delta;\n    this.Y2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  setHeight(h: number): Rectangle {\n    this.Y2 = this.Y1 + h;\n    this.internalUpdate();\n    return this;\n  }\n\n  setDimensions(dim: Dimensions): Rectangle {\n    this.setHeight(dim.h);\n    this.setWidth(dim.w);\n    return this;\n  }\n\n  setWidthHeight(w: number, h: number): Rectangle {\n    this.setWidth(w);\n    this.setHeight(h);\n    return this;\n  }\n\n  private internalUpdate(): void {\n    this.dimensions.w = Math.abs(this.x2 - this.x1);\n    this.dimensions.h = Math.abs(this.y2 - this.y1);\n\n    this.ratioWH = this.dimensions.w / this.dimensions.h;\n    this.ratioHW = this.dimensions.h / this.dimensions.w;\n  }\n\n  clone(): Rectangle {\n    return new Rectangle(this.x1, this.y1, this.x2, this.y2);\n  }\n\n  updateFromRect(rect: Rectangle): Rectangle {\n    this.update(rect.x1, rect.y1, rect.x2, rect.y2);\n    return this;\n  }\n\n  /**\n   * Convenience method to growFromTopLeft so no negative values have to be supplied\n   * @param shrinkWidthBy number of pixels to shrink horizontally\n   * @param shrinkHeightBy number of pixels to shrink vertically\n   */\n  shrinkFromTopLeft(shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.growFromTopLeft(-shrinkWidthBy, -shrinkHeightBy);\n    return this;\n  }\n\n  /**\n   * Will increase the size of the rectangle by moving the (x2,y2) coordinates with a given amount.\n   * (x1,y1) will remain the same\n   * @param growWidthBy number of pixels to grow horizontally\n   * @param growHeightBy number of pixels to grow vertically\n   */\n  growFromTopLeft(growWidthBy: number, growHeightBy: number): Rectangle {\n    this.w += growWidthBy;\n    this.h += growHeightBy;\n    return this;\n  }\n\n  /**\n   * Moves the top of the rectangle down so that the Y2-coordinate will remain the same, and the height is adjusted\n   * @param shrinkToHeight remaining height after call\n   * @return self\n   */\n  shrinkToHeightFromBottom(shrinkToHeight: number): Rectangle {\n    this.y1 = this.y2 - shrinkToHeight;\n    return this;\n  }\n\n  /**\n   * Will shrink the rectangle by a given amount and move it to a certain location. This way a\n   * rectangle can be shrunk on four sides while the center remains the same.\n   * @param moveX1 delta value to move x1-coordinate\n   * @param moveY1 delta value to move y1-coordinate\n   * @param shrinkWidthBy delta value to shrink the width\n   * @param shrinkHeightBy delta value to shrink the height\n   */\n  shrinkAndMove(moveX1: number, moveY1: number, shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.X1 += moveX1;\n    this.Y1 += moveY1;\n    this.internalUpdate();\n\n    this.shrinkFromTopLeft(shrinkWidthBy , shrinkHeightBy );\n    return this;\n  }\n\n  set x1(v: number) { this.X1 = v; this.internalUpdate(); }\n  get x1(): number  { return this.X1; }\n  set x2(v: number) { this.X2 = v; this.internalUpdate(); }\n  get x2(): number  { return this.X2; }\n  set y1(v: number) { this.Y1 = v; this.internalUpdate(); }\n  get y1(): number  { return this.Y1; }\n  set y2(v: number) { this.Y2 = v; this.internalUpdate(); }\n  get y2(): number  { return this.Y2; }\n\n  get w(): number  { return this.dimensions.w; }\n  set w(v: number) { this.setWidth(v); }\n  get h(): number  { return this.dimensions.h; }\n  set h(v: number) { this.setHeight(v); }\n\n}// Rectangle\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/classes/s-v-g-factory.ts\n            \n            class\n            Dimensions\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/classes/s-v-g-factory.ts\n            \n            class\n            Line\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/classes/s-v-g-factory.ts\n            \n            class\n            Rectangle\n            \n                22 %\n                (7/31)\n            \n        \n        \n            \n                \n                src/app/classes/s-v-g-factory.ts\n            \n            class\n            SVGFactory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/vu-meter/vu-meter.component.ts\n            \n            component\n            VuMeterComponent\n            \n                54 %\n                (47/86)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.3.0\n        \n            @angular/common : ~13.3.0\n        \n            @angular/compiler : ~13.3.0\n        \n            @angular/core : ~13.3.0\n        \n            @angular/forms : ~13.3.0\n        \n            @angular/platform-browser : ~13.3.0\n        \n            @angular/platform-browser-dynamic : ~13.3.0\n        \n            @angular/router : ~13.3.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SVGElementType   (src/.../s-v-g-factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/classes/s-v-g-factory.ts\n    \n        \n            \n                \n                    \n                        \n                        SVGElementType\n                    \n                \n                        \n                            \n                                 SVG\n                            \n                        \n                        \n                            \n                                 Rect\n                            \n                        \n                        \n                            \n                                 Circle\n                            \n                        \n                        \n                            \n                                 Line\n                            \n                        \n                        \n                            \n                                 Group\n                            \n                        \n                        \n                            \n                                 Text\n                            \n                        \n                        \n                            \n                                 Polyline\n                            \n                        \n                        \n                            \n                                 Polygon\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGaugev13\nThis component builds a Gauge or VU-meter using Scalable Vector Graphics. The current value is indicated\nusing a customisable needle.\n\n\nFeatures\n\nThe arc of the VU-meter can have multiple parts in different colors.\noptional shadow of needle and arc-parts\ncaption and footer\noptional labels for current value (center) and minimal/maximal values\noptional extra class to direct styling (using :host ::ng-deep)\nneedle will use animation when value is changed (using ease-in-out schema) with customisable delay\noptional margins for top/bottom/sides\nneedle size can be adjusted\nuse percentage between 0 and 100 as a needle value instead of absolute values\nguards against impossible values (null, undefined, out of range)\ncustomisable markers and marker texts using shadow\n\nDocumentation\nDocumentation is generated using Compodoc. \nAngular info\nThis project was generated with Angular CLI version 12.2.17.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nVuMeterComponent\n\nVuMeterComponent\n\nAppModule -->\n\nVuMeterComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

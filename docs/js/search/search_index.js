var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.215,1,1]],["body/components/AppComponent.html",[0,1.692,1,1.515,2,2.212,3,0.695,4,0.847,5,2.024,6,2.024,7,2.024,8,2.024,9,0.695,10,1.561,11,2.024,12,3.621,13,3.621,14,2.867,15,2.867,16,3.33,17,2.867,18,2.867,19,0.566,20,0.985,21,3.33,22,3.33,23,3.33,24,1.692,25,3.33,26,3.33,27,3.33,28,3.33,29,3.33,30,1.432,31,0.078,32,1.744,33,1.432,34,3.969,35,3.969,36,3.969,37,2.867,38,2.119,39,2.024,40,3.621,41,2.024,42,2.024,43,1.029,44,2.867,45,2.024,46,2.793,47,3.621,48,3.621,49,1.432,50,2.867,51,2.024,52,2.867,53,2.024,54,2.867,55,2.024,56,1.561,57,2.212,58,2.024,59,0.847,60,0.695,61,0.847,62,0.261,63,2.948,64,2.024,65,2.867,66,2.867,67,3.621,68,2.867,69,2.867,70,2.867,71,2.024,72,2.024,73,2.867,74,3.148,75,3.148,76,2.024,77,3.33,78,2.024,79,2.024,80,2.024,81,2.024,82,2.024,83,2.024,84,3.062,85,2.024,86,3.621,87,2.024,88,2.024,89,2.024,90,2.024,91,2.024,92,3.823,93,2.867,94,2.024,95,2.024,96,3.33,97,2.867,98,2.867,99,2.024,100,3.621,101,2.024,102,2.024,103,2.024,104,2.024,105,2.024,106,2.024,107,2.867,108,2.867,109,2.024,110,3.621,111,2.024,112,1.457,113,2.024,114,1.029,115,1.256,116,1.561,117,2.024,118,2.024,119,0.047,120,0.047]],["title/modules/AppModule.html",[121,1.844,122,1.215]],["body/modules/AppModule.html",[1,1.957,3,1.052,4,1.282,9,1.052,31,0.078,59,1.834,60,1.052,61,1.282,62,0.395,114,2.269,115,1.901,119,0.061,120,0.061,122,2.34,123,1.901,124,1.918,125,2.363,126,2.363,127,2.363,128,2.911,129,2.363,130,1.901,131,3.064,132,3.774,133,3.774,134,3.774,135,3.774,136,2.363,137,1.901,138,3.064,139,2.363,140,3.064,141,3.774,142,2.363,143,3.064,144,3.064]],["title/classes/Dimensions.html",[62,0.308,145,1]],["body/classes/Dimensions.html",[3,0.378,4,0.461,9,0.378,19,0.308,20,0.618,24,1.899,30,1.219,31,0.079,32,0.461,33,0.905,38,1.804,43,2.397,49,1.219,59,0.461,60,0.378,61,1.215,62,0.339,112,1.476,119,0.029,120,0.029,145,1.376,146,0.56,147,1.527,148,1.724,149,1.564,150,0.461,151,2.129,152,1.934,153,1.635,154,1.388,155,1.8,156,1.8,157,1.388,158,2.478,159,2.203,160,0.85,161,1.117,162,1.8,163,1.802,164,1.476,165,1.102,166,1.117,167,1.102,168,2.032,169,1.802,170,1.117,171,1.635,172,1.102,173,1.102,174,0.85,175,1.102,176,1.102,177,1.102,178,0.85,179,1.102,180,1.102,181,1.102,182,0.684,183,0.915,184,0.915,185,0.915,186,0.784,187,0.56,188,0.915,189,0.915,190,0.915,191,0.461,192,1.117,193,0.684,194,0.684,195,0.684,196,0.684,197,0.684,198,0.915,199,0.684,200,2.129,201,0.684,202,2.818,203,2.129,204,0.684,205,0.684,206,0.684,207,0.684,208,0.684,209,0.684,210,0.684,211,0.684,212,0.684,213,0.684,214,0.684,215,1.635,216,1.635,217,0.684,218,2.129,219,1.117,220,1.117,221,0.684,222,0.684,223,0.684,224,0.684,225,0.684,226,0.684,227,1.802,228,2.129,229,2.041,230,2.129,231,1.117,232,2.409,233,1.117,234,2.445,235,2.222,236,0.684,237,0.684,238,0.684,239,1.117,240,1.117,241,2.203,242,2.266,243,0.684,244,0.915,245,0.684,246,0.684,247,0.684,248,2.409,249,0.684,250,1.416,251,1.117,252,1.635,253,2.409,254,1.117,255,1.416,256,2.367,257,1.416,258,1.16,259,1.416,260,1.416,261,1.416,262,1.416,263,0.684,264,0.684,265,0.684,266,0.684,267,1.117,268,0.684,269,1.802,270,0.684,271,0.684,272,1.416,273,0.684,274,0.684,275,0.684,276,0.684,277,0.684,278,0.684,279,2.129,280,0.684,281,0.684,282,0.684,283,0.684,284,0.684,285,0.684,286,0.684,287,0.684,288,0.684,289,0.684,290,0.684,291,1.635,292,1.635,293,0.684,294,0.684,295,0.684,296,0.684,297,0.684,298,0.684,299,0.684,300,0.684,301,0.684,302,0.684,303,0.684,304,0.56,305,0.684,306,1.635,307,1.635,308,1.802,309,1.117,310,1.934,311,1.117,312,0.684,313,0.684,314,0.684,315,0.56,316,0.684,317,0.684,318,0.684,319,1.117,320,0.684,321,1.117,322,1.416,323,1.117,324,1.117,325,1.416,326,0.684,327,0.684,328,0.684,329,1.416,330,0.56,331,1.117,332,0.684,333,0.684,334,0.684,335,0.684,336,1.416,337,0.684,338,0.684,339,0.684,340,0.684,341,0.684,342,0.56,343,0.684,344,1.117,345,1.416,346,0.684,347,0.684,348,0.684,349,0.684,350,0.684,351,0.684,352,0.684,353,0.684]],["title/classes/Line.html",[62,0.308,186,0.821]],["body/classes/Line.html",[3,0.392,4,0.477,9,0.392,19,0.319,20,0.636,24,2.127,30,1.146,31,0.079,32,0.477,33,0.924,38,1.695,43,2.399,49,1.234,59,0.477,60,0.392,61,1.237,62,0.346,112,0.579,119,0.03,120,0.03,145,1.237,146,0.579,147,1.454,148,1.662,149,1.503,150,0.477,151,1.669,152,1.669,153,1.149,157,1.428,158,2.344,159,2.071,160,0.879,161,0.708,163,0.708,164,0.579,166,0.708,169,1.149,170,0.708,171,1.149,173,0.977,174,0.879,178,0.879,182,0.708,183,0.94,184,0.94,185,0.94,186,0.924,187,0.579,188,0.94,189,0.94,190,0.94,191,0.477,192,1.149,193,0.708,194,0.708,195,0.708,196,0.708,197,0.708,198,0.94,199,0.708,200,2.157,201,0.708,202,2.827,203,2.157,204,0.708,205,0.708,206,0.708,207,0.708,208,0.708,209,0.708,210,0.708,211,0.708,212,0.708,213,0.708,214,0.708,215,1.669,216,1.669,217,0.708,218,2.157,219,1.149,220,1.149,221,0.708,222,0.708,223,0.708,224,0.708,225,0.708,226,0.708,227,2.157,228,2.39,229,2.344,230,2.39,231,1.149,232,2.431,233,1.149,234,2.467,235,2.233,236,0.708,237,0.708,238,1.149,239,1.149,240,1.149,241,2.23,242,2.291,243,0.708,244,0.94,245,0.708,246,0.708,247,0.708,248,2.431,249,0.708,250,1.45,251,1.149,252,1.669,253,2.431,254,1.149,255,1.45,256,2.39,257,1.45,258,1.187,259,1.45,260,1.45,261,1.45,262,1.45,263,0.708,264,0.708,265,0.708,266,0.708,267,1.149,268,0.708,269,1.835,270,0.708,271,0.708,272,1.45,273,0.708,274,0.708,275,0.708,276,0.708,277,0.708,278,0.708,279,2.157,280,0.708,281,0.708,282,0.708,283,0.708,284,0.708,285,0.708,286,0.708,287,0.708,288,0.708,289,0.708,290,0.708,291,1.669,292,1.669,293,0.708,294,0.708,295,0.708,296,0.708,297,0.708,298,0.708,299,0.708,300,0.708,301,0.708,302,0.708,303,0.708,304,0.579,305,0.708,306,1.669,307,1.669,308,1.835,309,1.149,310,1.966,311,1.149,312,0.708,313,0.708,314,0.708,315,0.579,316,0.708,317,0.708,318,0.708,319,1.149,320,0.708,321,1.149,322,1.45,323,1.149,324,1.149,325,1.45,326,0.708,327,0.708,328,0.708,329,1.45,330,0.579,331,1.149,332,0.708,333,0.708,334,0.708,335,0.708,336,1.45,337,0.708,338,0.708,339,0.708,340,0.708,341,0.708,342,0.579,343,0.708,344,1.149,345,1.45,346,0.708,347,0.708,348,0.708,349,0.708,350,0.708,351,0.708,352,0.708,353,0.708,354,1.14,355,2.689,356,1.14,357,1.14]],["title/classes/SVGFactory.html",[62,0.308,191,1]],["body/classes/SVGFactory.html",[3,0.406,4,0.495,9,0.406,19,0.331,20,0.655,24,1.941,30,1.035,31,0.079,32,0.798,33,1.035,38,0.969,43,2.388,49,1.25,56,0.913,59,0.495,60,0.406,61,1.261,62,0.354,112,0.601,119,0.031,120,0.031,145,1.261,146,0.601,147,1.002,148,1.522,149,1.149,150,0.495,151,1.999,152,1.705,153,1.184,154,1.471,158,2.259,159,1.87,161,0.734,163,0.734,164,0.601,166,0.734,168,0.913,169,1.184,170,0.734,171,1.184,173,1.002,182,0.734,183,1.396,184,0.969,185,0.969,186,0.823,187,0.601,188,0.969,189,0.969,190,0.969,191,0.798,192,1.999,193,1.487,194,1.184,195,1.184,196,1.487,197,1.184,198,1.217,199,0.734,200,2.188,201,0.734,202,2.837,203,2.188,204,0.734,205,0.734,206,0.734,207,0.734,208,0.734,209,0.734,210,0.734,211,0.734,212,0.734,213,0.734,214,0.734,215,1.705,216,1.705,217,0.734,218,2.188,219,1.184,220,1.184,221,0.734,222,0.734,223,0.734,224,0.734,225,0.734,226,0.734,227,1.87,228,2.188,229,2.103,230,2.188,231,1.184,232,2.455,233,1.184,234,2.489,235,2.244,236,0.734,237,0.734,238,0.734,239,1.184,240,1.184,241,2.259,242,2.319,243,0.734,244,0.969,245,0.734,246,0.734,247,0.734,248,2.455,249,0.734,250,1.487,251,1.184,252,1.705,253,2.455,254,1.184,255,1.487,256,2.415,257,1.487,258,1.217,259,1.487,260,1.487,261,1.487,262,1.487,263,0.734,264,0.734,265,0.734,266,0.734,267,1.184,268,0.734,269,1.87,270,0.734,271,0.734,272,1.487,273,0.734,274,0.734,275,0.734,276,0.734,277,0.734,278,0.734,279,2.188,280,0.734,281,0.734,282,0.734,283,0.734,284,0.734,285,0.734,286,0.734,287,0.734,288,0.734,289,0.734,290,0.734,291,1.705,292,1.705,293,0.734,294,0.734,295,0.734,296,0.734,297,0.734,298,0.734,299,0.734,300,0.734,301,0.734,302,0.734,303,0.734,304,0.601,305,0.734,306,1.705,307,1.705,308,1.87,309,1.184,310,1.999,311,1.184,312,0.734,313,0.734,314,0.734,315,0.601,316,0.734,317,0.734,318,0.734,319,1.184,320,0.734,321,1.184,322,1.487,323,1.184,324,1.184,325,1.487,326,0.734,327,0.734,328,0.734,329,1.487,330,0.601,331,1.184,332,0.734,333,0.734,334,0.734,335,0.734,336,1.487,337,0.734,338,0.734,339,0.734,340,0.734,341,0.734,342,0.601,343,0.734,344,1.184,345,1.487,346,0.734,347,0.734,348,0.734,349,0.734,350,0.734,351,0.734,352,0.734,353,0.734,358,1.907,359,1.183,360,1.183]],["title/coverage.html",[361,2.481]],["body/coverage.html",[0,1.928,1,1.292,9,1.061,10,2.382,30,1.061,31,0.076,49,1.572,62,0.551,114,1.57,119,0.062,120,0.062,139,2.382,145,1.292,147,1.791,148,1.791,149,1.791,150,1.791,186,1.061,191,1.292,235,1.57,244,1.57,361,2.382,362,2.382,363,3.089,364,3.089,365,3.089,366,3.793,367,3.089,368,3.089,369,3.089,370,3.089,371,3.089,372,3.089,373,3.089,374,2.382,375,4.281,376,2.926,377,4.281,378,2.382,379,2.926,380,2.382,381,2.382,382,3.089,383,3.089]],["title/dependencies.html",[124,1.455,384,1.558]],["body/dependencies.html",[31,0.078,60,1.164,119,0.065,120,0.065,124,1.722,136,3.094,137,2.489,142,2.613,385,3.388,386,4.652,387,3.388,388,3.388,389,3.388,390,3.388,391,3.388,392,3.388,393,3.388,394,3.388,395,3.388,396,3.388,397,3.388,398,3.388]],["title/miscellaneous/enumerations.html",[399,1.027,400,2.209]],["body/miscellaneous/enumerations.html",[19,0.989,31,0.067,119,0.067,120,0.067,147,1.481,148,1.721,149,1.721,150,1.721,173,1.481,183,2.091,184,1.799,185,1.799,186,1.216,187,1.799,188,1.799,189,1.799,190,1.799,399,1.799,400,2.73,401,3.54]],["title/index.html",[19,0.565,402,2.02,403,2.02]],["body/index.html",[0,1.532,3,1.036,31,0.061,33,1.458,46,2.325,49,1.036,57,2.325,62,0.388,63,2.325,74,2.325,75,2.325,84,2.325,115,2.319,116,2.882,119,0.061,120,0.061,130,2.319,164,2.157,198,1.532,258,1.899,304,2.064,315,1.532,330,1.532,342,1.532,362,2.882,404,3.015,405,3.015,406,4.364,407,3.015,408,3.015,409,3.015,410,3.737,411,3.015,412,3.737,413,4.364,414,3.015,415,3.737,416,3.015,417,3.737,418,3.015,419,3.015,420,3.015,421,3.015,422,3.015,423,3.015,424,3.015,425,3.015,426,3.015,427,3.015,428,3.015,429,3.015,430,3.015,431,3.015,432,3.015,433,3.015,434,3.015,435,3.015,436,3.015,437,3.015,438,3.015,439,3.015,440,3.015,441,3.015,442,3.015,443,3.737,444,3.015,445,3.737,446,3.015,447,3.015,448,2.325,449,3.015]],["title/modules.html",[123,1.997]],["body/modules.html",[31,0.068,119,0.068,120,0.068,122,1.864,123,2.277,137,2.277,173,1.535,450,3.669,451,3.669]],["title/overview.html",[452,2.481]],["body/overview.html",[1,1.935,2,2.637,31,0.074,114,2.179,119,0.066,120,0.066,121,2.637,122,2.35,124,2.049,125,2.637,126,2.637,127,2.637,128,3.11,129,2.637,130,2.122,146,1.737,452,2.637,453,3.419,454,3.419,455,3.419]],["title/properties.html",[20,0.984,384,1.558]],["body/properties.html",[20,1.267,31,0.072,119,0.069,120,0.069,448,2.844,456,3.687]],["title/miscellaneous/variables.html",[399,1.027,457,2.209]],["body/miscellaneous/variables.html",[19,0.93,30,1.508,31,0.077,32,1.774,33,1.457,119,0.065,120,0.065,374,2.567,376,3.387,378,2.567,379,2.567,380,3.061,381,3.061,399,1.691,457,2.567,458,3.968,459,3.328,460,3.328,461,3.328,462,3.968,463,3.328,464,3.328,465,3.968,466,3.968,467,3.328]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"index.html":{}}}],["0.0.0",{"_index":456,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":453,"title":{},"body":{"overview.html":{}}}],["1.1.19",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["100",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["12.2.17",{"_index":449,"title":{},"body":{"index.html":{}}}],["13.3.0",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":454,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["22",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["23",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["2px",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["36/74",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":455,"title":{},"body":{"overview.html":{}}}],["48",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["5px",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["7",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["7,10,20,30,40",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["7.5.0",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["7/31",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["absolute",{"_index":437,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":157,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{}}}],["actual_component",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["adjusted",{"_index":330,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["against",{"_index":439,"title":{},"body":{"index.html":{}}}],["amount",{"_index":319,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["angular",{"_index":445,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["animation",{"_index":427,"title":{},"body":{"index.html":{}}}],["antiquewhite",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":122,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arc",{"_index":415,"title":{},"body":{"index.html":{}}}],["args",{"_index":196,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["article.gauge",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["article.gauge.martin",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["between",{"_index":435,"title":{},"body":{"index.html":{}}}],["black",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["blue",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["bold",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["bootstrap",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["box",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":214,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["browse",{"_index":451,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["builds",{"_index":405,"title":{},"body":{"index.html":{}}}],["call",{"_index":333,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["caption",{"_index":420,"title":{},"body":{"index.html":{}}}],["case",{"_index":200,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["center",{"_index":342,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["certain",{"_index":267,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["changed",{"_index":428,"title":{},"body":{"index.html":{}}}],["circle",{"_index":185,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["circle.gauge.needle.martin",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["class",{"_index":62,"title":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":146,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"overview.html":{}}}],["cli",{"_index":447,"title":{},"body":{"index.html":{}}}],["clone",{"_index":293,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["cluster_appmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["colors",{"_index":419,"title":{},"body":{"index.html":{}}}],["colors1",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["colors2",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["colors3",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["compodoc",{"_index":444,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["console.error('#error",{"_index":211,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["const",{"_index":221,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["constructor",{"_index":160,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{}}}],["constructor(public",{"_index":226,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["constructor(w",{"_index":161,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["constructor(x1",{"_index":238,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["context",{"_index":380,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["convenience",{"_index":300,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["coordinate",{"_index":329,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["coordinates",{"_index":318,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["coverage",{"_index":361,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createelement",{"_index":358,"title":{},"body":{"classes/SVGFactory.html":{}}}],["createelement(type",{"_index":195,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["current",{"_index":410,"title":{},"body":{"index.html":{}}}],["customisable",{"_index":412,"title":{},"body":{"index.html":{}}}],["darkgray",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["darkred",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["declarations",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["deep",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["default",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["delay",{"_index":431,"title":{},"body":{"index.html":{}}}],["delta",{"_index":279,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["dependencies",{"_index":124,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["different",{"_index":418,"title":{},"body":{"index.html":{}}}],["dimensions",{"_index":145,"title":{"classes/Dimensions.html":{}},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{}}}],["dimensions(0",{"_index":245,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["direct",{"_index":425,"title":{},"body":{"index.html":{}}}],["direction",{"_index":255,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["directive",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["directives",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["division",{"_index":262,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["document.createelementns(this.svgns",{"_index":203,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["documentation",{"_index":362,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{}}}],["down",{"_index":328,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["drop",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["dynamic",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["ease",{"_index":429,"title":{},"body":{"index.html":{}}}],["element",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["elementref",{"_index":171,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["enum",{"_index":182,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["enumerations",{"_index":400,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":376,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["extra",{"_index":424,"title":{},"body":{"index.html":{}}}],["factor",{"_index":253,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["factory",{"_index":213,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["factory.ts",{"_index":150,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["factory.ts:16",{"_index":359,"title":{},"body":{"classes/SVGFactory.html":{}}}],["factory.ts:18",{"_index":360,"title":{},"body":{"classes/SVGFactory.html":{}}}],["factory.ts:47",{"_index":165,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:48",{"_index":162,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:56",{"_index":175,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:57",{"_index":177,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:58",{"_index":179,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:59",{"_index":181,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:61",{"_index":167,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:66",{"_index":172,"title":{},"body":{"classes/Dimensions.html":{}}}],["factory.ts:73",{"_index":354,"title":{},"body":{"classes/Line.html":{}}}],["factory.ts:74",{"_index":355,"title":{},"body":{"classes/Line.html":{}}}],["factory.ts:77",{"_index":356,"title":{},"body":{"classes/Line.html":{}}}],["factory.ts:81",{"_index":357,"title":{},"body":{"classes/Line.html":{}}}],["false",{"_index":467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["family",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["features",{"_index":414,"title":{},"body":{"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{}}}],["fill",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["filter",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["first",{"_index":249,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["font",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["footer",{"_index":421,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["four",{"_index":340,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["g",{"_index":149,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["gauge",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["gauge.needle.pointer.martin",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["gaugev13",{"_index":404,"title":{},"body":{"index.html":{}}}],["generated",{"_index":443,"title":{},"body":{"index.html":{}}}],["geth",{"_index":174,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{}}}],["getting",{"_index":402,"title":{"index.html":{}},"body":{}}],["getw",{"_index":178,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{}}}],["given",{"_index":252,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["graphics",{"_index":409,"title":{},"body":{"index.html":{}}}],["gray",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["green",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["group",{"_index":187,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["grow",{"_index":324,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["growfromtopleft",{"_index":302,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["growfromtopleft(growwidthby",{"_index":326,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["growheightby",{"_index":325,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["growwidthby",{"_index":323,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["guards",{"_index":438,"title":{},"body":{"index.html":{}}}],["h",{"_index":158,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["h(v",{"_index":219,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["height",{"_index":152,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["horizontal",{"_index":254,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["horizontally",{"_index":309,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["host",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["html",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["http://www.w3.org/2000/svg",{"_index":194,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["identifier",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["imports",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["impossible",{"_index":440,"title":{},"body":{"index.html":{}}}],["increase",{"_index":314,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":411,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["instead",{"_index":436,"title":{},"body":{"index.html":{}}}],["internalupdate",{"_index":290,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["labels",{"_index":422,"title":{},"body":{"index.html":{}}}],["legend",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["lightgray",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["line",{"_index":186,"title":{"classes/Line.html":{}},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["literal",{"_index":464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location",{"_index":337,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["margins",{"_index":432,"title":{},"body":{"index.html":{}}}],["matching",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.abs(this.x2",{"_index":231,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["math.abs(this.y2",{"_index":233,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["meter",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["meter.component",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["meter.component.ts",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["meter/vu",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["method",{"_index":301,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["methods",{"_index":154,"title":{},"body":{"classes/Dimensions.html":{},"classes/SVGFactory.html":{}}}],["minimal/maximal",{"_index":423,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":399,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":121,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":123,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["move",{"_index":336,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moveabsolutehorizontal(newx1",{"_index":276,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moveabsolutevertical(newy1",{"_index":280,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moveandscalehorizontal(factor",{"_index":263,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moveandscalevertical(factor",{"_index":265,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movebyfactorhorizontal(factor",{"_index":273,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movebyfactorvertical(factor",{"_index":274,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movedeltahorizontal(delta",{"_index":278,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movedeltavertical(delta",{"_index":282,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moves",{"_index":251,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movex1",{"_index":344,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["movey1",{"_index":345,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["moving",{"_index":316,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["multiple",{"_index":416,"title":{},"body":{"index.html":{}}}],["multiplication",{"_index":257,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["needle",{"_index":413,"title":{},"body":{"index.html":{}}}],["needlevalue",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["negative",{"_index":303,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["new",{"_index":244,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{}}}],["newx1",{"_index":277,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["newy1",{"_index":281,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["ng",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["node",{"_index":197,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["null",{"_index":441,"title":{},"body":{"index.html":{}}}],["number",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["numbers",{"_index":259,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["object",{"_index":465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":164,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["orange",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":452,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":384,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["param",{"_index":256,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["parameters",{"_index":163,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["parts",{"_index":417,"title":{},"body":{"index.html":{}}}],["path.gauge.arcs.background",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["path.gauge.arcs.background.martin",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["percentage",{"_index":434,"title":{},"body":{"index.html":{}}}],["pixels",{"_index":307,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["polygon",{"_index":190,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["polyline",{"_index":189,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["private",{"_index":151,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["production",{"_index":466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":446,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"properties.html":{}}}],["providers",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["radius",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["range",{"_index":442,"title":{},"body":{"index.html":{}}}],["ranges1",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["ranges2",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["ranges3",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["ratiohw",{"_index":237,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["ratiowh",{"_index":236,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["rect",{"_index":184,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["rect.x2",{"_index":298,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["rect.y1",{"_index":297,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["rect.y2",{"_index":299,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["rectangle",{"_index":235,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{}}}],["rectangle(this.x1",{"_index":294,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["red",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["remain",{"_index":321,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["remaining",{"_index":332,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["remains",{"_index":343,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["request",{"_index":212,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["require",{"_index":381,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resizes",{"_index":250,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["results",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":202,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["returns",{"_index":168,"title":{},"body":{"classes/Dimensions.html":{},"classes/SVGFactory.html":{}}}],["rgba(0",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":322,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["sans",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["scalable",{"_index":407,"title":{},"body":{"index.html":{}}}],["scaleheight(factor",{"_index":271,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["scalewidth(factor",{"_index":268,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["schema",{"_index":430,"title":{},"body":{"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["self",{"_index":334,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["serif",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["set",{"_index":218,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["setdimensions(dim",{"_index":284,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["seth(v",{"_index":176,"title":{},"body":{"classes/Dimensions.html":{}}}],["setheight(h",{"_index":283,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["setw(v",{"_index":180,"title":{},"body":{"classes/Dimensions.html":{}}}],["setwidth(w",{"_index":275,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["setwidthheight(w",{"_index":287,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shadow",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["shrink",{"_index":308,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinkandmove(movex1",{"_index":346,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinkfromtopleft(shrinkwidthby",{"_index":312,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinkheightby",{"_index":310,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinktoheight",{"_index":331,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinktoheightfrombottom(shrinktoheight",{"_index":335,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrinkwidthby",{"_index":306,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["shrunk",{"_index":339,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["sides",{"_index":341,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["similar",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":315,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["size:10pt",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["smaller",{"_index":260,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["solid",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["spec\\.ts",{"_index":463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../s",{"_index":401,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:9",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/s",{"_index":147,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/vu",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":374,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":378,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":379,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":403,"title":{"index.html":{}},"body":{}}],["statements",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":192,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["string",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"classes/SVGFactory.html":{}}}],["stroke",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["stroke:white",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["styling",{"_index":426,"title":{},"body":{"index.html":{}}}],["supplied",{"_index":305,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["support",{"_index":450,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":173,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["svg.nativeelement.getboundingclientrect",{"_index":223,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgbbox",{"_index":222,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgbbox.height",{"_index":225,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype",{"_index":183,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["svgelementtype.circle",{"_index":204,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.group",{"_index":208,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.line",{"_index":205,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.polygon",{"_index":210,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.polyline",{"_index":209,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.rect",{"_index":206,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.svg",{"_index":201,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgelementtype.text",{"_index":207,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["svgfactory",{"_index":191,"title":{"classes/SVGFactory.html":{}},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{}}}],["svgns",{"_index":193,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["switch",{"_index":199,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["syntax",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["table",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["text",{"_index":188,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"miscellaneous/enumerations.html":{}}}],["text.gauge.label",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dimensions",{"_index":243,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.dimensions.h",{"_index":292,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.dimensions.w",{"_index":291,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.growfromtopleft",{"_index":313,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.h",{"_index":272,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.height",{"_index":216,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.internalupdate",{"_index":248,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.ratiohw",{"_index":239,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.ratiowh",{"_index":240,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.scaleheight(factor).movebyfactorvertical(factor",{"_index":266,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.scalewidth(factor).movebyfactorhorizontal(factor",{"_index":264,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setheight(dim.h",{"_index":285,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setheight(h",{"_index":289,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setheight(v",{"_index":353,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setwidth(dim.w",{"_index":286,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setwidth(v",{"_index":352,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.setwidth(w",{"_index":288,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.shrinkfromtopleft(shrinkwidthby",{"_index":347,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.update(rect.x1",{"_index":296,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.update(svgbbox.width",{"_index":224,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.update(w",{"_index":217,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.update(x1",{"_index":246,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.w",{"_index":269,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.width",{"_index":215,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.x1",{"_index":232,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.x2",{"_index":241,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.y1",{"_index":234,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["this.y2",{"_index":242,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["title",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":327,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["top/bottom/sides",{"_index":433,"title":{},"body":{"index.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{}}}],["true",{"_index":462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":198,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["update",{"_index":155,"title":{},"body":{"classes/Dimensions.html":{}}}],["update(w",{"_index":166,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["update(x1",{"_index":247,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["updatefromrect(rect",{"_index":295,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["updatefromsvgelement",{"_index":156,"title":{},"body":{"classes/Dimensions.html":{}}}],["updatefromsvgelement(svg",{"_index":170,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["use",{"_index":258,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["using",{"_index":406,"title":{},"body":{"index.html":{}}}],["v",{"_index":148,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["value",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":304,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{},"index.html":{}}}],["var",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["variable",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":457,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vector",{"_index":408,"title":{},"body":{"index.html":{}}}],["version",{"_index":448,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":270,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["vertically",{"_index":311,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["void",{"_index":169,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["vu",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{}}}],["vumetercomponent",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["w",{"_index":159,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["w(v",{"_index":220,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["way",{"_index":338,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["webkit",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["weight",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":153,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x1",{"_index":227,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x1(v",{"_index":348,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x1,y1",{"_index":320,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x2",{"_index":229,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x2(v",{"_index":349,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["x2,y2",{"_index":317,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["y1",{"_index":228,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["y1(v",{"_index":350,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["y2",{"_index":230,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["y2(v",{"_index":351,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["zero",{"_index":261,"title":{},"body":{"classes/Dimensions.html":{},"classes/Line.html":{},"classes/SVGFactory.html":{}}}],["zone.js",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colors1\n                            \n                            \n                                colors2\n                            \n                            \n                                colors3\n                            \n                            \n                                    Public\n                                needleValue\n                            \n                            \n                                ranges1\n                            \n                            \n                                ranges2\n                            \n                            \n                                ranges3\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colors1\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['green', 'orange', 'red', 'blue']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colors2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['green', 'orange', 'red', 'darkred']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colors3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['green', 'orange', 'red', 'darkred']\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        needleValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 23\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranges1\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [-100, -80, -20, 0, 15]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranges2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [7,10,20,30,40]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ranges3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [-100, -80, -20, 0, 10]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'gauge'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'gauge';\n  ranges1 = [-100, -80, -20, 0, 15];\n  colors1 = ['green', 'orange', 'red', 'blue'];\n\n  ranges2 = [7,10,20,30,40];\n  colors2 = ['green', 'orange', 'red', 'darkred'];\n\n  ranges3 = [-100, -80, -20, 0, 10];\n  colors3 = ['green', 'orange', 'red', 'darkred'];\n  public needleValue = 23;\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .shadow {\n  -webkit-filter: drop-shadow( 3px 3px 2px rgba(0, 0, 0, .7));\n  filter: drop-shadow( 3px 3px 2px rgba(0, 0, 0, .7));\n  /* Similar syntax to box-shadow */\n}\n\n::ng-deep text.gauge.label {\n  font-family: sans-serif;\n  font-size:10pt;\n  font-weight: bold;\n}\n:host ::ng-deep path.gauge.arcs.background.martin {\n  fill: antiquewhite;\n}\n:host ::ng-deep path.gauge.arcs.background {\n  fill: lightgray;\n  stroke:white;\n}\n\n:host ::ng-deep .gauge.needle.pointer.martin {\n  fill: black;\n  stroke: black;\n}\n\n:host ::ng-deep .circle.gauge.needle.martin  {\n  fill: black;\n  stroke: black;\n}\n\n\n:host ::ng-deep article.gauge {\n  border: 1px solid black;\n  padding: 4px;\n}\n\n\n\n:host ::ng-deep article.gauge.martin {\n  border: 1px solid darkgray;\n  box-shadow: 4px 4px 4px gray;\n  border-radius: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'VuMeterComponent', 'selector': 'app-vu-meter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nVuMeterComponent\n\nVuMeterComponent\n\nAppModule -->\n\nVuMeterComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            VuMeterComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { VuMeterComponent } from './vu-meter/vu-meter.component';\nimport {FormsModule} from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    VuMeterComponent\n  ],\n    imports: [\n        BrowserModule,\n        FormsModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Dimensions.html":{"url":"classes/Dimensions.html","title":"class - Dimensions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Dimensions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/s-v-g-factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                Height\n                            \n                            \n                                    Private\n                                Width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                            \n                                updateFromSVGElement\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    h\n                                \n                                \n                                    w\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(w: number, h: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/s-v-g-factory.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        w\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        h\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        Height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        Width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:47\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(w: number, h: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/s-v-g-factory.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    w\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    h\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFromSVGElement\n                        \n                    \n                \n            \n            \n                \nupdateFromSVGElement(svg: ElementRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/s-v-g-factory.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    svg\n                                    \n                                                ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Dimensions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        h\n                    \n                \n\n                \n                    \n                        geth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:56\n                                \n                            \n\n                \n                    \n                        seth(v: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:57\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        w\n                    \n                \n\n                \n                    \n                        getw()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:58\n                                \n                            \n\n                \n                    \n                        setw(v: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:59\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {ElementRef} from '@angular/core';\n\nexport enum SVGElementType {\n  SVG,\n  Rect,\n  Circle,\n  Line,\n  Group,\n  Text,\n  Polyline,\n  Polygon\n}\n\n\nexport class SVGFactory {\n  private static svgNS = 'http://www.w3.org/2000/svg';\n\n  public static createElement(type: SVGElementType, ...args: any[]): Node | undefined {\n    switch (type) {\n      case SVGElementType.SVG:\n        return document.createElementNS(this.svgNS, 'svg');\n      case SVGElementType.Circle:\n        return document.createElementNS(this.svgNS, 'circle');\n      case SVGElementType.Line:\n        return document.createElementNS(this.svgNS, 'line');\n      case SVGElementType.Rect:\n        return document.createElementNS(this.svgNS, 'rect');\n      case SVGElementType.Text:\n        return document.createElementNS(this.svgNS, 'text');\n      case SVGElementType.Group:\n        return document.createElementNS(this.svgNS, 'g');\n      case SVGElementType.Polyline:\n        return document.createElementNS(this.svgNS, 'polyline');\n      case SVGElementType.Polygon:\n        return document.createElementNS(this.svgNS, 'polygon');\n      default:\n        console.error('#Error request SVG Factory type');\n        break;\n    }\n    return undefined;\n  }\n\n}\n\n\nexport class Dimensions {\n  private Width: number;\n  private Height: number;\n\n  constructor(w: number, h: number) {\n    this.Width = 0;\n    this.Height = 0;\n    this.update(w, h);\n  }\n\n  get h(): number  { return this.Height; }\n  set h(v: number) { this.Height = v; }\n  get w(): number  { return this.Width; }\n  set w(v: number) { this.Width = v; }\n\n  update(w: number, h: number): void {\n    this.Width  = w;\n    this.Height = h;\n  }\n\n  updateFromSVGElement(svg: ElementRef): Dimensions {\n    const svgBBox = svg.nativeElement.getBoundingClientRect();\n    this.update(svgBBox.width, svgBBox.height);\n    return this;\n  }\n}\n\nexport class Line {\n  constructor(public x1: number, public y1: number, public x2: number, public y2: number) {\n  }\n\n  get w(): number {\n    return Math.abs(this.x2 - this.x1);\n  }\n\n  get h(): number {\n    return Math.abs(this.y2 - this.y1);\n  }\n}\n\nexport class Rectangle {\n  public dimensions: Dimensions;\n  public ratioWH: number;\n  public ratioHW: number;\n  public X1: number;\n  public X2: number;\n  public Y1: number;\n  public Y2: number;\n\n  constructor(x1: number, y1: number, x2: number, y2: number) {\n    this.ratioHW = 0;\n    this.ratioWH = 0;\n    this.X1 = 0;\n    this.X2 = 0;\n    this.Y1 = 0;\n    this.Y2 = 0;\n    this.dimensions = new Dimensions(0, 0);\n    this.update(x1, y1, x2, y2);\n  }\n\n  update(x1: number, y1: number, x2: number, y2: number): Rectangle {\n    this.X1 = x1;\n    this.X2 = x2;\n    this.Y1 = y1;\n    this.Y2 = y2;\n    this.internalUpdate();\n    return this;\n  }\n\n  /**\n   * First resizes, then moves by a given factor in the horizontal direction\n   * @param factor  a multiplication factor (so use numbers smaller than zero for division)\n   */\n  moveAndScaleHorizontal(factor: number): Rectangle {\n    this.scaleWidth(factor).moveByFactorHorizontal(factor);\n    return this;\n  }\n\n  moveAndScaleVertical(factor: number): Rectangle {\n    this.scaleHeight(factor).moveByFactorVertical(factor);\n    return this;\n  }\n\n  /**\n   * Resizes by a certain factor in the horizontal direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleWidth(factor: number): Rectangle {\n    this.w *= factor;\n    return this;\n  }\n\n  /**\n   * Resizes by a given factor in the vertical direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleHeight(factor: number): Rectangle {\n    this.h *= factor;\n    return this;\n  }\n\n  moveByFactorHorizontal(factor: number): Rectangle {\n    this.X1 *= factor;\n    this.X2 = this.X1 + this.w;\n    return this;\n  }\n\n  moveByFactorVertical(factor: number): Rectangle {\n    this.Y1 *= factor;\n    this.Y2 += this.Y1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  setWidth(w: number): Rectangle {\n    this.X2 = this.X1 + w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteHorizontal(newX1: number): Rectangle {\n    this.X1 = newX1;\n    this.X2 = this.X1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaHorizontal(delta: number): Rectangle {\n    this.X1 += delta;\n    this.X2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteVertical(newY1: number): Rectangle {\n    this.Y1 = newY1;\n    this.Y2 += this.h;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaVertical(delta: number): Rectangle {\n    this.Y1 += delta;\n    this.Y2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  setHeight(h: number): Rectangle {\n    this.Y2 = this.Y1 + h;\n    this.internalUpdate();\n    return this;\n  }\n\n  setDimensions(dim: Dimensions): Rectangle {\n    this.setHeight(dim.h);\n    this.setWidth(dim.w);\n    return this;\n  }\n\n  setWidthHeight(w: number, h: number): Rectangle {\n    this.setWidth(w);\n    this.setHeight(h);\n    return this;\n  }\n\n  private internalUpdate(): void {\n    this.dimensions.w = Math.abs(this.x2 - this.x1);\n    this.dimensions.h = Math.abs(this.y2 - this.y1);\n\n    this.ratioWH = this.dimensions.w / this.dimensions.h;\n    this.ratioHW = this.dimensions.h / this.dimensions.w;\n  }\n\n  clone(): Rectangle {\n    return new Rectangle(this.x1, this.y1, this.x2, this.y2);\n  }\n\n  updateFromRect(rect: Rectangle): Rectangle {\n    this.update(rect.x1, rect.y1, rect.x2, rect.y2);\n    return this;\n  }\n\n  /**\n   * Convenience method to growFromTopLeft so no negative values have to be supplied\n   * @param shrinkWidthBy number of pixels to shrink horizontally\n   * @param shrinkHeightBy number of pixels to shrink vertically\n   */\n  shrinkFromTopLeft(shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.growFromTopLeft(-shrinkWidthBy, -shrinkHeightBy);\n    return this;\n  }\n\n  /**\n   * Will increase the size of the rectangle by moving the (x2,y2) coordinates with a given amount.\n   * (x1,y1) will remain the same\n   * @param growWidthBy number of pixels to grow horizontally\n   * @param growHeightBy number of pixels to grow vertically\n   */\n  growFromTopLeft(growWidthBy: number, growHeightBy: number): Rectangle {\n    this.w += growWidthBy;\n    this.h += growHeightBy;\n    return this;\n  }\n\n  /**\n   * Moves the top of the rectangle down so that the Y2-coordinate will remain the same, and the height is adjusted\n   * @param shrinkToHeight remaining height after call\n   * @return self\n   */\n  shrinkToHeightFromBottom(shrinkToHeight: number): Rectangle {\n    this.y1 = this.y2 - shrinkToHeight;\n    return this;\n  }\n\n  /**\n   * Will shrink the rectangle by a given amount and move it to a certain location. This way a\n   * rectangle can be shrunk on four sides while the center remains the same.\n   * @param moveX1 delta value to move x1-coordinate\n   * @param moveY1 delta value to move y1-coordinate\n   * @param shrinkWidthBy delta value to shrink the width\n   * @param shrinkHeightBy delta value to shrink the height\n   */\n  shrinkAndMove(moveX1: number, moveY1: number, shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.X1 += moveX1;\n    this.Y1 += moveY1;\n    this.internalUpdate();\n\n    this.shrinkFromTopLeft(shrinkWidthBy , shrinkHeightBy );\n    return this;\n  }\n\n  set x1(v: number) { this.X1 = v; this.internalUpdate(); }\n  get x1(): number  { return this.X1; }\n  set x2(v: number) { this.X2 = v; this.internalUpdate(); }\n  get x2(): number  { return this.X2; }\n  set y1(v: number) { this.Y1 = v; this.internalUpdate(); }\n  get y1(): number  { return this.Y1; }\n  set y2(v: number) { this.Y2 = v; this.internalUpdate(); }\n  get y2(): number  { return this.Y2; }\n\n  get w(): number  { return this.dimensions.w; }\n  set w(v: number) { this.setWidth(v); }\n  get h(): number  { return this.dimensions.h; }\n  set h(v: number) { this.setHeight(v); }\n\n}// Rectangle\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Line.html":{"url":"classes/Line.html","title":"class - Line","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Line\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/s-v-g-factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                x1\n                            \n                            \n                                    Public\n                                x2\n                            \n                            \n                                    Public\n                                y1\n                            \n                            \n                                    Public\n                                y2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    w\n                                \n                                \n                                    h\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(x1: number, y1: number, x2: number, y2: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/s-v-g-factory.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        x1\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        y1\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        x2\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        y2\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        x1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        x2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        y1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        y2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        w\n                    \n                \n\n                \n                    \n                        getw()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:77\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        h\n                    \n                \n\n                \n                    \n                        geth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/s-v-g-factory.ts:81\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {ElementRef} from '@angular/core';\n\nexport enum SVGElementType {\n  SVG,\n  Rect,\n  Circle,\n  Line,\n  Group,\n  Text,\n  Polyline,\n  Polygon\n}\n\n\nexport class SVGFactory {\n  private static svgNS = 'http://www.w3.org/2000/svg';\n\n  public static createElement(type: SVGElementType, ...args: any[]): Node | undefined {\n    switch (type) {\n      case SVGElementType.SVG:\n        return document.createElementNS(this.svgNS, 'svg');\n      case SVGElementType.Circle:\n        return document.createElementNS(this.svgNS, 'circle');\n      case SVGElementType.Line:\n        return document.createElementNS(this.svgNS, 'line');\n      case SVGElementType.Rect:\n        return document.createElementNS(this.svgNS, 'rect');\n      case SVGElementType.Text:\n        return document.createElementNS(this.svgNS, 'text');\n      case SVGElementType.Group:\n        return document.createElementNS(this.svgNS, 'g');\n      case SVGElementType.Polyline:\n        return document.createElementNS(this.svgNS, 'polyline');\n      case SVGElementType.Polygon:\n        return document.createElementNS(this.svgNS, 'polygon');\n      default:\n        console.error('#Error request SVG Factory type');\n        break;\n    }\n    return undefined;\n  }\n\n}\n\n\nexport class Dimensions {\n  private Width: number;\n  private Height: number;\n\n  constructor(w: number, h: number) {\n    this.Width = 0;\n    this.Height = 0;\n    this.update(w, h);\n  }\n\n  get h(): number  { return this.Height; }\n  set h(v: number) { this.Height = v; }\n  get w(): number  { return this.Width; }\n  set w(v: number) { this.Width = v; }\n\n  update(w: number, h: number): void {\n    this.Width  = w;\n    this.Height = h;\n  }\n\n  updateFromSVGElement(svg: ElementRef): Dimensions {\n    const svgBBox = svg.nativeElement.getBoundingClientRect();\n    this.update(svgBBox.width, svgBBox.height);\n    return this;\n  }\n}\n\nexport class Line {\n  constructor(public x1: number, public y1: number, public x2: number, public y2: number) {\n  }\n\n  get w(): number {\n    return Math.abs(this.x2 - this.x1);\n  }\n\n  get h(): number {\n    return Math.abs(this.y2 - this.y1);\n  }\n}\n\nexport class Rectangle {\n  public dimensions: Dimensions;\n  public ratioWH: number;\n  public ratioHW: number;\n  public X1: number;\n  public X2: number;\n  public Y1: number;\n  public Y2: number;\n\n  constructor(x1: number, y1: number, x2: number, y2: number) {\n    this.ratioHW = 0;\n    this.ratioWH = 0;\n    this.X1 = 0;\n    this.X2 = 0;\n    this.Y1 = 0;\n    this.Y2 = 0;\n    this.dimensions = new Dimensions(0, 0);\n    this.update(x1, y1, x2, y2);\n  }\n\n  update(x1: number, y1: number, x2: number, y2: number): Rectangle {\n    this.X1 = x1;\n    this.X2 = x2;\n    this.Y1 = y1;\n    this.Y2 = y2;\n    this.internalUpdate();\n    return this;\n  }\n\n  /**\n   * First resizes, then moves by a given factor in the horizontal direction\n   * @param factor  a multiplication factor (so use numbers smaller than zero for division)\n   */\n  moveAndScaleHorizontal(factor: number): Rectangle {\n    this.scaleWidth(factor).moveByFactorHorizontal(factor);\n    return this;\n  }\n\n  moveAndScaleVertical(factor: number): Rectangle {\n    this.scaleHeight(factor).moveByFactorVertical(factor);\n    return this;\n  }\n\n  /**\n   * Resizes by a certain factor in the horizontal direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleWidth(factor: number): Rectangle {\n    this.w *= factor;\n    return this;\n  }\n\n  /**\n   * Resizes by a given factor in the vertical direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleHeight(factor: number): Rectangle {\n    this.h *= factor;\n    return this;\n  }\n\n  moveByFactorHorizontal(factor: number): Rectangle {\n    this.X1 *= factor;\n    this.X2 = this.X1 + this.w;\n    return this;\n  }\n\n  moveByFactorVertical(factor: number): Rectangle {\n    this.Y1 *= factor;\n    this.Y2 += this.Y1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  setWidth(w: number): Rectangle {\n    this.X2 = this.X1 + w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteHorizontal(newX1: number): Rectangle {\n    this.X1 = newX1;\n    this.X2 = this.X1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaHorizontal(delta: number): Rectangle {\n    this.X1 += delta;\n    this.X2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteVertical(newY1: number): Rectangle {\n    this.Y1 = newY1;\n    this.Y2 += this.h;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaVertical(delta: number): Rectangle {\n    this.Y1 += delta;\n    this.Y2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  setHeight(h: number): Rectangle {\n    this.Y2 = this.Y1 + h;\n    this.internalUpdate();\n    return this;\n  }\n\n  setDimensions(dim: Dimensions): Rectangle {\n    this.setHeight(dim.h);\n    this.setWidth(dim.w);\n    return this;\n  }\n\n  setWidthHeight(w: number, h: number): Rectangle {\n    this.setWidth(w);\n    this.setHeight(h);\n    return this;\n  }\n\n  private internalUpdate(): void {\n    this.dimensions.w = Math.abs(this.x2 - this.x1);\n    this.dimensions.h = Math.abs(this.y2 - this.y1);\n\n    this.ratioWH = this.dimensions.w / this.dimensions.h;\n    this.ratioHW = this.dimensions.h / this.dimensions.w;\n  }\n\n  clone(): Rectangle {\n    return new Rectangle(this.x1, this.y1, this.x2, this.y2);\n  }\n\n  updateFromRect(rect: Rectangle): Rectangle {\n    this.update(rect.x1, rect.y1, rect.x2, rect.y2);\n    return this;\n  }\n\n  /**\n   * Convenience method to growFromTopLeft so no negative values have to be supplied\n   * @param shrinkWidthBy number of pixels to shrink horizontally\n   * @param shrinkHeightBy number of pixels to shrink vertically\n   */\n  shrinkFromTopLeft(shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.growFromTopLeft(-shrinkWidthBy, -shrinkHeightBy);\n    return this;\n  }\n\n  /**\n   * Will increase the size of the rectangle by moving the (x2,y2) coordinates with a given amount.\n   * (x1,y1) will remain the same\n   * @param growWidthBy number of pixels to grow horizontally\n   * @param growHeightBy number of pixels to grow vertically\n   */\n  growFromTopLeft(growWidthBy: number, growHeightBy: number): Rectangle {\n    this.w += growWidthBy;\n    this.h += growHeightBy;\n    return this;\n  }\n\n  /**\n   * Moves the top of the rectangle down so that the Y2-coordinate will remain the same, and the height is adjusted\n   * @param shrinkToHeight remaining height after call\n   * @return self\n   */\n  shrinkToHeightFromBottom(shrinkToHeight: number): Rectangle {\n    this.y1 = this.y2 - shrinkToHeight;\n    return this;\n  }\n\n  /**\n   * Will shrink the rectangle by a given amount and move it to a certain location. This way a\n   * rectangle can be shrunk on four sides while the center remains the same.\n   * @param moveX1 delta value to move x1-coordinate\n   * @param moveY1 delta value to move y1-coordinate\n   * @param shrinkWidthBy delta value to shrink the width\n   * @param shrinkHeightBy delta value to shrink the height\n   */\n  shrinkAndMove(moveX1: number, moveY1: number, shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.X1 += moveX1;\n    this.Y1 += moveY1;\n    this.internalUpdate();\n\n    this.shrinkFromTopLeft(shrinkWidthBy , shrinkHeightBy );\n    return this;\n  }\n\n  set x1(v: number) { this.X1 = v; this.internalUpdate(); }\n  get x1(): number  { return this.X1; }\n  set x2(v: number) { this.X2 = v; this.internalUpdate(); }\n  get x2(): number  { return this.X2; }\n  set y1(v: number) { this.Y1 = v; this.internalUpdate(); }\n  get y1(): number  { return this.Y1; }\n  set y2(v: number) { this.Y2 = v; this.internalUpdate(); }\n  get y2(): number  { return this.Y2; }\n\n  get w(): number  { return this.dimensions.w; }\n  set w(v: number) { this.setWidth(v); }\n  get h(): number  { return this.dimensions.h; }\n  set h(v: number) { this.setHeight(v); }\n\n}// Rectangle\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SVGFactory.html":{"url":"classes/SVGFactory.html","title":"class - SVGFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SVGFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/s-v-g-factory.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                svgNS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        svgNS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://www.w3.org/2000/svg'\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/s-v-g-factory.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    createElement(type: SVGElementType, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/s-v-g-factory.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                SVGElementType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Node | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ElementRef} from '@angular/core';\n\nexport enum SVGElementType {\n  SVG,\n  Rect,\n  Circle,\n  Line,\n  Group,\n  Text,\n  Polyline,\n  Polygon\n}\n\n\nexport class SVGFactory {\n  private static svgNS = 'http://www.w3.org/2000/svg';\n\n  public static createElement(type: SVGElementType, ...args: any[]): Node | undefined {\n    switch (type) {\n      case SVGElementType.SVG:\n        return document.createElementNS(this.svgNS, 'svg');\n      case SVGElementType.Circle:\n        return document.createElementNS(this.svgNS, 'circle');\n      case SVGElementType.Line:\n        return document.createElementNS(this.svgNS, 'line');\n      case SVGElementType.Rect:\n        return document.createElementNS(this.svgNS, 'rect');\n      case SVGElementType.Text:\n        return document.createElementNS(this.svgNS, 'text');\n      case SVGElementType.Group:\n        return document.createElementNS(this.svgNS, 'g');\n      case SVGElementType.Polyline:\n        return document.createElementNS(this.svgNS, 'polyline');\n      case SVGElementType.Polygon:\n        return document.createElementNS(this.svgNS, 'polygon');\n      default:\n        console.error('#Error request SVG Factory type');\n        break;\n    }\n    return undefined;\n  }\n\n}\n\n\nexport class Dimensions {\n  private Width: number;\n  private Height: number;\n\n  constructor(w: number, h: number) {\n    this.Width = 0;\n    this.Height = 0;\n    this.update(w, h);\n  }\n\n  get h(): number  { return this.Height; }\n  set h(v: number) { this.Height = v; }\n  get w(): number  { return this.Width; }\n  set w(v: number) { this.Width = v; }\n\n  update(w: number, h: number): void {\n    this.Width  = w;\n    this.Height = h;\n  }\n\n  updateFromSVGElement(svg: ElementRef): Dimensions {\n    const svgBBox = svg.nativeElement.getBoundingClientRect();\n    this.update(svgBBox.width, svgBBox.height);\n    return this;\n  }\n}\n\nexport class Line {\n  constructor(public x1: number, public y1: number, public x2: number, public y2: number) {\n  }\n\n  get w(): number {\n    return Math.abs(this.x2 - this.x1);\n  }\n\n  get h(): number {\n    return Math.abs(this.y2 - this.y1);\n  }\n}\n\nexport class Rectangle {\n  public dimensions: Dimensions;\n  public ratioWH: number;\n  public ratioHW: number;\n  public X1: number;\n  public X2: number;\n  public Y1: number;\n  public Y2: number;\n\n  constructor(x1: number, y1: number, x2: number, y2: number) {\n    this.ratioHW = 0;\n    this.ratioWH = 0;\n    this.X1 = 0;\n    this.X2 = 0;\n    this.Y1 = 0;\n    this.Y2 = 0;\n    this.dimensions = new Dimensions(0, 0);\n    this.update(x1, y1, x2, y2);\n  }\n\n  update(x1: number, y1: number, x2: number, y2: number): Rectangle {\n    this.X1 = x1;\n    this.X2 = x2;\n    this.Y1 = y1;\n    this.Y2 = y2;\n    this.internalUpdate();\n    return this;\n  }\n\n  /**\n   * First resizes, then moves by a given factor in the horizontal direction\n   * @param factor  a multiplication factor (so use numbers smaller than zero for division)\n   */\n  moveAndScaleHorizontal(factor: number): Rectangle {\n    this.scaleWidth(factor).moveByFactorHorizontal(factor);\n    return this;\n  }\n\n  moveAndScaleVertical(factor: number): Rectangle {\n    this.scaleHeight(factor).moveByFactorVertical(factor);\n    return this;\n  }\n\n  /**\n   * Resizes by a certain factor in the horizontal direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleWidth(factor: number): Rectangle {\n    this.w *= factor;\n    return this;\n  }\n\n  /**\n   * Resizes by a given factor in the vertical direction\n   * @param factor a multiplication factor (so use numbers smaller than zero for division)\n   */\n  scaleHeight(factor: number): Rectangle {\n    this.h *= factor;\n    return this;\n  }\n\n  moveByFactorHorizontal(factor: number): Rectangle {\n    this.X1 *= factor;\n    this.X2 = this.X1 + this.w;\n    return this;\n  }\n\n  moveByFactorVertical(factor: number): Rectangle {\n    this.Y1 *= factor;\n    this.Y2 += this.Y1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  setWidth(w: number): Rectangle {\n    this.X2 = this.X1 + w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteHorizontal(newX1: number): Rectangle {\n    this.X1 = newX1;\n    this.X2 = this.X1 + this.w;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaHorizontal(delta: number): Rectangle {\n    this.X1 += delta;\n    this.X2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveAbsoluteVertical(newY1: number): Rectangle {\n    this.Y1 = newY1;\n    this.Y2 += this.h;\n    this.internalUpdate();\n    return this;\n  }\n\n  moveDeltaVertical(delta: number): Rectangle {\n    this.Y1 += delta;\n    this.Y2 += delta;\n    this.internalUpdate();\n    return this;\n  }\n\n  setHeight(h: number): Rectangle {\n    this.Y2 = this.Y1 + h;\n    this.internalUpdate();\n    return this;\n  }\n\n  setDimensions(dim: Dimensions): Rectangle {\n    this.setHeight(dim.h);\n    this.setWidth(dim.w);\n    return this;\n  }\n\n  setWidthHeight(w: number, h: number): Rectangle {\n    this.setWidth(w);\n    this.setHeight(h);\n    return this;\n  }\n\n  private internalUpdate(): void {\n    this.dimensions.w = Math.abs(this.x2 - this.x1);\n    this.dimensions.h = Math.abs(this.y2 - this.y1);\n\n    this.ratioWH = this.dimensions.w / this.dimensions.h;\n    this.ratioHW = this.dimensions.h / this.dimensions.w;\n  }\n\n  clone(): Rectangle {\n    return new Rectangle(this.x1, this.y1, this.x2, this.y2);\n  }\n\n  updateFromRect(rect: Rectangle): Rectangle {\n    this.update(rect.x1, rect.y1, rect.x2, rect.y2);\n    return this;\n  }\n\n  /**\n   * Convenience method to growFromTopLeft so no negative values have to be supplied\n   * @param shrinkWidthBy number of pixels to shrink horizontally\n   * @param shrinkHeightBy number of pixels to shrink vertically\n   */\n  shrinkFromTopLeft(shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.growFromTopLeft(-shrinkWidthBy, -shrinkHeightBy);\n    return this;\n  }\n\n  /**\n   * Will increase the size of the rectangle by moving the (x2,y2) coordinates with a given amount.\n   * (x1,y1) will remain the same\n   * @param growWidthBy number of pixels to grow horizontally\n   * @param growHeightBy number of pixels to grow vertically\n   */\n  growFromTopLeft(growWidthBy: number, growHeightBy: number): Rectangle {\n    this.w += growWidthBy;\n    this.h += growHeightBy;\n    return this;\n  }\n\n  /**\n   * Moves the top of the rectangle down so that the Y2-coordinate will remain the same, and the height is adjusted\n   * @param shrinkToHeight remaining height after call\n   * @return self\n   */\n  shrinkToHeightFromBottom(shrinkToHeight: number): Rectangle {\n    this.y1 = this.y2 - shrinkToHeight;\n    return this;\n  }\n\n  /**\n   * Will shrink the rectangle by a given amount and move it to a certain location. This way a\n   * rectangle can be shrunk on four sides while the center remains the same.\n   * @param moveX1 delta value to move x1-coordinate\n   * @param moveY1 delta value to move y1-coordinate\n   * @param shrinkWidthBy delta value to shrink the width\n   * @param shrinkHeightBy delta value to shrink the height\n   */\n  shrinkAndMove(moveX1: number, moveY1: number, shrinkWidthBy: number, shrinkHeightBy: number): Rectangle {\n    this.X1 += moveX1;\n    this.Y1 += moveY1;\n    this.internalUpdate();\n\n    this.shrinkFromTopLeft(shrinkWidthBy , shrinkHeightBy );\n    return this;\n  }\n\n  set x1(v: number) { this.X1 = v; this.internalUpdate(); }\n  get x1(): number  { return this.X1; }\n  set x2(v: number) { this.X2 = v; this.internalUpdate(); }\n  get x2(): number  { return this.X2; }\n  set y1(v: number) { this.Y1 = v; this.internalUpdate(); }\n  get y1(): number  { return this.Y1; }\n  set y2(v: number) { this.Y2 = v; this.internalUpdate(); }\n  get y2(): number  { return this.Y2; }\n\n  get w(): number  { return this.dimensions.w; }\n  set w(v: number) { this.setWidth(v); }\n  get h(): number  { return this.dimensions.h; }\n  set h(v: number) { this.setHeight(v); }\n\n}// Rectangle\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/classes/s-v-g-factory.ts\n            \n            class\n            Dimensions\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/classes/s-v-g-factory.ts\n            \n            class\n            Line\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/classes/s-v-g-factory.ts\n            \n            class\n            Rectangle\n            \n                22 %\n                (7/31)\n            \n        \n        \n            \n                \n                src/app/classes/s-v-g-factory.ts\n            \n            class\n            SVGFactory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/vu-meter/vu-meter.component.ts\n            \n            component\n            VuMeterComponent\n            \n                48 %\n                (36/74)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.3.0\n        \n            @angular/common : ~13.3.0\n        \n            @angular/compiler : ~13.3.0\n        \n            @angular/core : ~13.3.0\n        \n            @angular/forms : ~13.3.0\n        \n            @angular/platform-browser : ~13.3.0\n        \n            @angular/platform-browser-dynamic : ~13.3.0\n        \n            @angular/router : ~13.3.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SVGElementType   (src/.../s-v-g-factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/classes/s-v-g-factory.ts\n    \n        \n            \n                \n                    \n                        \n                        SVGElementType\n                    \n                \n                        \n                            \n                                 SVG\n                            \n                        \n                        \n                            \n                                 Rect\n                            \n                        \n                        \n                            \n                                 Circle\n                            \n                        \n                        \n                            \n                                 Line\n                            \n                        \n                        \n                            \n                                 Group\n                            \n                        \n                        \n                            \n                                 Text\n                            \n                        \n                        \n                            \n                                 Polyline\n                            \n                        \n                        \n                            \n                                 Polygon\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGaugev13\nThis component builds a Gauge or VU-meter using Scalable Vector Graphics. The current value is indicated\nusing a customisable needle.\n\nFeatures\n\nThe arc of the VU-meter can have multiple parts in different colors.\noptional shadow of needle and arc-parts\ncaption and footer\noptional labels for current value (center) and minimal/maximal values\noptional extra class to direct styling (using :host ::ng-deep)\nneedle will use animation when value is changed (using ease-in-out schema) with customisable delay\noptional margins for top/bottom/sides\nneedle size can be adjusted\nuse percentage between 0 and 100 as a needle value instead of absolute values\nguards against impossible values (null, undefined, out of range)\n\nDocumentation\nDocumentation is generated using Compodoc. \nAngular info\nThis project was generated with Angular CLI version 12.2.17.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nVuMeterComponent\n\nVuMeterComponent\n\nAppModule -->\n\nVuMeterComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
